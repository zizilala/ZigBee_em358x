###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.2.53884/W32 for ARM     04/Feb/2015  16:38:03 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\cli\optio #
#                    n-cli.c                                                  #
#    Command line =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\cli\optio #
#                    n-cli.c -D "GENERATED_TOKEN_HEADER=\"app/builder/DoorSen #
#                    sor_SM6011/DoorSensor_SM6011_tokens.h\"" -D              #
#                    "ZA_GENERATED_HEADER=\"app/builder/DoorSensor_SM6011/Doo #
#                    rSensor_SM6011.h\"" -D LOCAL_STORAGE_BTL -D              #
#                    "BOARD_HEADER=\"app\builder\DoorSensor_SM6011\DoorSensor #
#                    _SM6011_board.h\"" -D "PLATFORM_HEADER=\"hal/micro/corte #
#                    xm3/compiler/iar.h\"" -D CORTEXM3 -D                     #
#                    CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3585 -D PHY_EM3XX -D  #
#                    "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\ #
#                    "" -D "CONFIGURATION_HEADER=\"app/framework/util/config. #
#                    h\"" -D "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/D #
#                    oorSensor_SM6011/DoorSensor_SM6011_endpoint_config.h\""  #
#                    -D "__SOURCEFILE__=\"option-cli.c\"" -lC                 #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \ --diag_suppress Pa050 -o C:\Ember\EmberZNet5.3.0-GA\em #
#                    35x\build\DoorSensor_SM6011\ --debug --endian=little     #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\cli\ -I   #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\ #
#                    DoorSensor_SM6011\..\..\..\ -I                           #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\app\framework\include\ -I                #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app #
#                    \builder\DoorSensor_SM6011\..\..\..\stack\ -I            #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\hal\ -I C:\Ember\EmberZNet5.3.0-GA\em35x #
#                    \app\builder\DoorSensor_SM6011\..\..\..\hal\..\ -Ohz     #
#                    --use_c++_inline                                         #
#    List file    =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \option-cli.lst                                          #
#    Object file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \option-cli.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\cli\option-cli.c
      1          // *****************************************************************************
      2          // * option-cli.c
      3          // *
      4          // * All CLI commands in the 'option' command-tree.
      5          // *
      6          // * Copyright 2012 by Ember Corporation. All rights reserved.              *80*
      7          // *****************************************************************************
      8          
      9          // common include file
     10          #include "app/framework/util/common.h"
     11          
     12          #include "app/framework/util/af-main.h"
     13          #include "app/framework/util/service-discovery.h"
     14          #include "app/util/serial/command-interpreter2.h"
     15          #include "app/util/concentrator/concentrator.h"
     16          
     17          
     18          // *****************************************************************************
     19          // Forward Declarations
     20          // *****************************************************************************
     21          
     22          void optionPrintRxCommand(void);
     23          void optionRegisterCommand(void);
     24          void optionDiscoverCommand(void);
     25          void optionBindingTablePrintCommand(void);
     26          void optionBindingTableClearCommand(void);
     27          void optionAddressTablePrintCommand(void);
     28          void optionAddressTableSetCommand(void);
     29          void optionEndDeviceBindCommand(void);
     30          void optionApsRetryCommand(void);
     31          void optionApsSecurityCommand(void);
     32          void optionLinkCommand(void);
     33          void optionBindingTableSetCommand(void);
     34          void optionPrintRouteCommand(void);
     35          void optionInstallCodeCommand(void);
     36          void optionDiscoveryTargetCommand(void);
     37          
     38          // *****************************************************************************
     39          // Globals
     40          // *****************************************************************************
     41          
     42          #ifndef EMBER_AF_GENERATE_CLI
     43          
     44          // option print-rx-msgs enable
     45          // option print-rx-msgs disable
     46          static EmberCommandEntry optionPrintRxCommands[] = {
     47            {"enable", optionPrintRxCommand, ""},
     48            {"disable", optionPrintRxCommand, ""},
     49            { NULL }
     50          };
     51          
     52          // option binding-table print
     53          // option binding-table clear
     54          // option binding-table set <index> <cluster> <local ep> <remote ep> <EUI>
     55          static EmberCommandEntry optionBindingCommands[] = {
     56            {"print", optionBindingTablePrintCommand, ""},
     57            {"clear", optionBindingTableClearCommand, ""},
     58            {"set", optionBindingTableSetCommand, "uvuub"},
     59            { NULL }
     60          };
     61          
     62          // option address-table print
     63          // option address-table set <index> <eui64> <node id>
     64          static EmberCommandEntry optionAddressCommands[] = {
     65            {"print", optionAddressTablePrintCommand, ""},
     66            {"set", optionAddressTableSetCommand, "ubv"},
     67            { NULL }
     68          };
     69          
     70          // option security aps [off|on]
     71          static EmberCommandEntry optionApsSecurityCommands[] = {
     72            {"on", optionApsSecurityCommand, ""},
     73            {"off", optionApsSecurityCommand, ""},
     74            { NULL }
     75          };
     76          
     77          static EmberCommandEntry apsRetryCommands[] = {
     78            {"on", optionApsRetryCommand, ""},
     79            {"off", optionApsRetryCommand, ""},
     80            {"def", optionApsRetryCommand, ""},
     81            { NULL }
     82          };
     83          
     84          static EmberCommandEntry optionSecurityCommands[] = {
     85            {"aps", NULL, (PGM_P)optionApsSecurityCommands},
     86            { NULL }
     87          };
     88          
     89          EmberCommandEntry emAfOptionCommands[] = {
     90            {"print-rx-msgs", NULL, (PGM_P)optionPrintRxCommands},
     91            {"register", optionRegisterCommand, ""},
     92          
     93            emberCommandEntryAction("disc", optionDiscoverCommand, "vv", 
     94                                    "Perform a match descriptor request"),
     95            emberCommandEntryAction("target", optionDiscoveryTargetCommand, "v", 
     96                                    "Set the target address of the CLI discovery"),
     97          
     98            {"binding-table", NULL, (PGM_P)optionBindingCommands},
     99            {"address-table", NULL, (PGM_P)optionAddressCommands},
    100          
    101            {"edb", optionEndDeviceBindCommand, "u"},
    102            {"security", NULL, (PGM_P)optionSecurityCommands},
    103            {"apsretry", NULL, (PGM_P)apsRetryCommands},
    104          
    105          #ifdef DEBUG_PRINT_FOR_ROUTING_TABLE
    106            {"route", optionPrintRouteCommand, ""},
    107          #endif
    108          
    109          #if EMBER_KEY_TABLE_SIZE > 0
    110            {"link",         optionLinkCommand, "ubb"},
    111            {"install-code", optionInstallCodeCommand, "ubb"},
    112          #endif
    113            { NULL }
    114          };
    115          
    116          #endif // EMBER_AF_GENERATE_CLI
    117          

   \                                 In section .data, align 2
    118          static EmberNodeId discoveryTargetNodeId = EMBER_RX_ON_WHEN_IDLE_BROADCAST_ADDRESS;
   \                     discoveryTargetNodeId:
   \   00000000   0xFFFD             DC16 65533
    119          
    120          
    121          // *****************************************************************************
    122          // Functions
    123          // *****************************************************************************
    124          
    125          #if defined(__MCCXAP2B__)
    126            // The XAP is very strict about type conversions with regard to EmberEUI64.
    127            // In order to cast "const int8u*" to "const EmberEUI64" 
    128            // we must first cast away the const of the int8u* type and then cast the
    129            // data to a 'const EmberEUI64'.
    130            #define INT8U_TO_EUI64_CAST(x) ((const EmberEUI64)((int8u*)x)) 
    131          #else
    132            #define INT8U_TO_EUI64_CAST(x) (x)
    133          #endif
    134          

   \                                 In section .text, align 2, keep-with-next
    135          void emAfCliServiceDiscoveryCallback(const EmberAfServiceDiscoveryResult* result)
    136          {
   \                     emAfCliServiceDiscoveryCallback:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x4604             MOV      R4,R0
    137          #if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_APP)
    138            if (!emberAfHaveDiscoveryResponseStatus(result->status)) {
   \   00000006   0x.... 0x....      ADR.W    R5,`?<Constant "discover">`
   \   0000000A   0x7820             LDRB     R0,[R4, #+0]
   \   0000000C   0x07C0             LSLS     R0,R0,#+31
   \   0000000E   0xD523             BPL.N    ??CrossCallReturnLabel_6
    139              // Do nothing
    140            } else if (result->zdoRequestClusterId == MATCH_DESCRIPTORS_REQUEST) {
   \   00000010   0x8860             LDRH     R0,[R4, #+2]
   \   00000012   0x2806             CMP      R0,#+6
   \   00000014   0xD10B             BNE.N    ??emAfCliServiceDiscoveryCallback_0
    141              const EmberAfEndpointList* epList = (const EmberAfEndpointList*)result->responseData;
    142              emberAfAppPrintln("Match %py from 0x%2X, ep %d",
    143                                "discover",
    144                                result->matchAddress,
    145                                epList->list[0]);
   \   00000016   0x68A0             LDR      R0,[R4, #+8]
   \   00000018   0x6840             LDR      R0,[R0, #+4]
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x9000             STR      R0,[SP, #+0]
   \   0000001E   0x88A3             LDRH     R3,[R4, #+4]
   \   00000020   0x462A             MOV      R2,R5
   \   00000022   0x.... 0x....      ADR.W    R1,`?<Constant "Match %py from 0x%2X,...">`
   \   00000026   0x2004             MOVS     R0,#+4
   \   00000028   0x.... 0x....      BL       emberAfPrintln
   \   0000002C   0xE014             B.N      ??CrossCallReturnLabel_6
    146            } else if (result->zdoRequestClusterId == NETWORK_ADDRESS_REQUEST) {
   \                     ??emAfCliServiceDiscoveryCallback_0:
   \   0000002E   0xB930             CBNZ.N   R0,??emAfCliServiceDiscoveryCallback_1
    147              emberAfAppPrintln("NWK Address response: 0x%2X", result->matchAddress);
   \   00000030   0x88A2             LDRH     R2,[R4, #+4]
   \   00000032   0x.... 0x....      ADR.W    R1,`?<Constant "NWK Address response:...">`
   \   00000036   0x2004             MOVS     R0,#+4
   \   00000038   0x.... 0x....      BL       emberAfPrintln
   \   0000003C   0xE00C             B.N      ??CrossCallReturnLabel_6
    148            } else if (result->zdoRequestClusterId == IEEE_ADDRESS_REQUEST) {
   \                     ??emAfCliServiceDiscoveryCallback_1:
   \   0000003E   0x2801             CMP      R0,#+1
   \   00000040   0xD10A             BNE.N    ??CrossCallReturnLabel_6
    149              const int8u* eui64ptr = (int8u*)(result->responseData);
   \   00000042   0x68A6             LDR      R6,[R4, #+8]
    150              emberAfAppPrint("IEEE Address response: ");
   \   00000044   0x.... 0x....      ADR.W    R1,`?<Constant "IEEE Address response: ">`
   \   00000048   0x2004             MOVS     R0,#+4
   \   0000004A   0x.... 0x....      BL       emberAfPrint
    151              emberAfPrintBigEndianEui64(INT8U_TO_EUI64_CAST(eui64ptr));
   \   0000004E   0x4630             MOV      R0,R6
   \   00000050   0x.... 0x....      BL       emberAfPrintBigEndianEui64
    152              emberAfAppPrintln("");
   \   00000054   0x.... 0x....      BL       ?Subroutine0
    153            }
    154          
    155            if (result->status != EMBER_AF_BROADCAST_SERVICE_DISCOVERY_RESPONSE_RECEIVED) {
   \                     ??CrossCallReturnLabel_6:
   \   00000058   0x7820             LDRB     R0,[R4, #+0]
   \   0000005A   0x2801             CMP      R0,#+1
   \   0000005C   0xD008             BEQ.N    ??emAfCliServiceDiscoveryCallback_2
    156              emberAfAppPrintln("Service %py done.", 
    157                                "discover");
   \   0000005E   0x462A             MOV      R2,R5
   \   00000060   0x.... 0x....      ADR.W    R1,`?<Constant "Service %py done.">`
   \   00000064   0x2004             MOVS     R0,#+4
   \   00000066   0xB002             ADD      SP,SP,#+8
   \   00000068   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000006C   0x.... 0x....      B.W      emberAfPrintln
    158            }
    159          #endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_APP)
    160          }
   \                     ??emAfCliServiceDiscoveryCallback_2:
   \   00000070   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   0x....             ADR.N    R1,??DataTable39  ;; ""
   \                     ??Subroutine0_0:
   \   00000002   0x2004             MOVS     R0,#+4
   \   00000004   0x.... 0x....      B.W      emberAfPrintln
    161          
    162          
    163          
    164          // option print-rx-msgs [enable | disable]

   \                                 In section .text, align 2, keep-with-next
    165          void optionPrintRxCommand(void) 
    166          {
    167            if (emberCurrentCommand->name[0] == 'e') {
   \                     optionPrintRxCommand:
   \   00000000   0x....             LDR.N    R0,??DataTable39_2
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2865             CMP      R0,#+101
   \   0000000A   0xBF0C             ITE      EQ 
   \   0000000C   0x2001             MOVEQ    R0,#+1
   \   0000000E   0x2000             MOVNE    R0,#+0
    168              emberAfPrintReceivedMessages = TRUE;
    169            } else {
    170              emberAfPrintReceivedMessages = FALSE;
   \   00000010   0x....             LDR.N    R1,??DataTable39_3
   \   00000012   0x7008             STRB     R0,[R1, #+0]
    171            }
    172            emberAfAppPrintln("%pd print", 
    173                                (emberAfPrintReceivedMessages
    174                                 ? "enable"
    175                                 : "disable"));
   \   00000014   0x7808             LDRB     R0,[R1, #+0]
   \   00000016   0x07C0             LSLS     R0,R0,#+31
   \   00000018   0xBF4C             ITE      MI 
   \   0000001A   0x.... 0x....      ADRMI.W  R2,`?<Constant "enable">`
   \   0000001E   0x.... 0x....      ADRPL.W  R2,`?<Constant "disable">`
   \   00000022   0x.... 0x....      ADR.W    R1,`?<Constant "%pd print">`
   \   00000026   0x2004             MOVS     R0,#+4
   \   00000028   0x.... 0x....      B.W      emberAfPrintln
    176          }
    177          
    178          // option register

   \                                 In section .text, align 2, keep-with-next
    179          void optionRegisterCommand(void) 
    180          {
    181            emberAfRegistrationStartCallback();
   \                     optionRegisterCommand:
   \   00000000   0x.... 0x....      B.W      emberAfRegistrationStartCallback
    182          }
    183          

   \                                 In section .text, align 2, keep-with-next
    184          void optionDiscoveryTargetCommand(void)
    185          {
   \                     optionDiscoveryTargetCommand:
   \   00000000   0xB580             PUSH     {R7,LR}
    186            discoveryTargetNodeId = (int16u)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_13:
   \   00000006   0x....             LDR.N    R1,??DataTable39_4
   \   00000008   0x8008             STRH     R0,[R1, #+0]
    187          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x.... 0x....      B.W      emberUnsignedCommandArgument
    188          
    189          // option disc <profileId> <clusterId>

   \                                 In section .text, align 2, keep-with-next
    190          void optionDiscoverCommand(void)
    191          {
   \                     optionDiscoverCommand:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    192            EmberAfProfileId profileId = (int16u)emberUnsignedCommandArgument(0);
   \   00000004   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_12:
   \   00000008   0x4604             MOV      R4,R0
    193            EmberAfClusterId clusterId = (int16u)emberUnsignedCommandArgument(1);
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0x.... 0x....      BL       emberUnsignedCommandArgument
    194            emberAfFindDevicesByProfileAndCluster(discoveryTargetNodeId,
    195                                                  profileId,
    196                                                  clusterId, 
    197                                                  EMBER_AF_SERVER_CLUSTER_DISCOVERY,
    198                                                  emAfCliServiceDiscoveryCallback);
   \   00000010   0x....             LDR.N    R1,??DataTable39_5
   \   00000012   0x9100             STR      R1,[SP, #+0]
   \   00000014   0x2301             MOVS     R3,#+1
   \   00000016   0xB282             UXTH     R2,R0
   \   00000018   0xB2A1             UXTH     R1,R4
   \   0000001A   0x....             LDR.N    R0,??DataTable39_4
   \   0000001C   0x8800             LDRH     R0,[R0, #+0]
   \   0000001E   0x.... 0x....      BL       emberAfFindDevicesByProfileAndCluster
    199          }
   \   00000022   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    200          
    201          // option binding-table print

   \                                 In section .text, align 2, keep-with-next
    202          void optionBindingTablePrintCommand(void)
    203          {
   \                     optionBindingTablePrintCommand:
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB08C             SUB      SP,SP,#+48
    204          #if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_APP)
    205            int8u i;
    206            EmberBindingTableEntry result;
    207          
    208            PGM_P typeStrings[] = {
    209              "EMPTY",
    210              "UNICA",
    211              "M2ONE",
    212              "MULTI",
    213              "?    ",
    214            };
   \   00000006   0xA807             ADD      R0,SP,#+28
   \   00000008   0x.... 0x....      ADR.W    R1,`?<Constant {&"EMPTY", &"UNICA", &"M2ONE", &"MU`
   \   0000000C   0x2214             MOVS     R2,#+20
   \   0000000E   0x.... 0x....      BL       __aeabi_memcpy4
    215            int8u bindings = 0;
   \   00000012   0x2400             MOVS     R4,#+0
    216          
    217            emberAfAppPrintln("#  type   nwk  loc   rem   clus   node   eui");
   \   00000014   0x.... 0x....      ADR.W    R1,`?<Constant "#  type   nwk  loc   ...">`
   \   00000018   0x.... 0x....      BL       ??Subroutine0_0
    218            for (i = 0; i < emberAfGetBindingTableSize(); i++) {
   \                     ??CrossCallReturnLabel_4:
   \   0000001C   0x2700             MOVS     R7,#+0
   \   0000001E   0x.... 0x....      ADR.W    R8,`?<Constant "0x%x: emberGetBinding...">`
   \   00000022   0x....             ADR.N    R6,??DataTable39  ;; ""
   \   00000024   0x.... 0x....      ADR.W    R10,`?<Constant "  %d    0x%x  0x%x  0...">`
   \   00000028   0x....             ADR.N    R5,??DataTable39_1  ;; 0x25, 0x70, 0x00, 0x00
   \   0000002A   0x.... 0x....      ADR.W    R9,`?<Constant "%d: ">`
   \   0000002E   0xE004             B.N      ??optionBindingTablePrintCommand_0
    219              EmberStatus status = emberGetBinding(i, &result);
    220              if (status == EMBER_SUCCESS) {
    221                if (result.type > EMBER_MULTICAST_BINDING) {
    222                  result.type = 4;  // last entry in the string list above
    223                }
    224                if (result.type != EMBER_UNUSED_BINDING) {
    225                  bindings++;
    226                  emberAfAppPrint("%d: ", i);
    227                  emberAfAppPrint("%p", typeStrings[result.type]);
    228                  emberAfAppPrint("  %d    0x%x  0x%x  0x%2x 0x%2x ",
    229                                  result.networkIndex,
    230                                  result.local,
    231                                  result.remote,
    232                                  result.clusterId,
    233                                  emberGetBindingRemoteNodeId(i));
    234                  emberAfAppDebugExec(emberAfPrintBigEndianEui64(result.identifier));
    235                  emberAfAppPrintln("");
    236                }
    237              } else {
    238                emberAfAppPrintln("0x%x: emberGetBinding Error: %x", status);
   \                     ??optionBindingTablePrintCommand_1:
   \   00000030   0x4641             MOV      R1,R8
   \   00000032   0x2004             MOVS     R0,#+4
   \   00000034   0x.... 0x....      BL       emberAfPrintln
    239                emberAfAppFlush();
    240              }
   \                     ??optionBindingTablePrintCommand_2:
   \   00000038   0x1C7F             ADDS     R7,R7,#+1
   \                     ??optionBindingTablePrintCommand_0:
   \   0000003A   0x.... 0x....      BL       emberAfGetBindingTableSize
   \   0000003E   0xB2FF             UXTB     R7,R7
   \   00000040   0x4287             CMP      R7,R0
   \   00000042   0xD23B             BCS.N    ??optionBindingTablePrintCommand_3
   \   00000044   0xA903             ADD      R1,SP,#+12
   \   00000046   0x4638             MOV      R0,R7
   \   00000048   0x.... 0x....      BL       emberGetBinding
   \   0000004C   0x0002             MOVS     R2,R0
   \   0000004E   0xD1EF             BNE.N    ??optionBindingTablePrintCommand_1
   \   00000050   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   00000054   0x2804             CMP      R0,#+4
   \   00000056   0xD303             BCC.N    ??optionBindingTablePrintCommand_4
   \   00000058   0x2004             MOVS     R0,#+4
   \   0000005A   0xF88D 0x000C      STRB     R0,[SP, #+12]
   \   0000005E   0xE001             B.N      ??optionBindingTablePrintCommand_5
   \                     ??optionBindingTablePrintCommand_4:
   \   00000060   0x2800             CMP      R0,#+0
   \   00000062   0xD0E9             BEQ.N    ??optionBindingTablePrintCommand_2
   \                     ??optionBindingTablePrintCommand_5:
   \   00000064   0x1C64             ADDS     R4,R4,#+1
   \   00000066   0x463A             MOV      R2,R7
   \   00000068   0x4649             MOV      R1,R9
   \   0000006A   0x2004             MOVS     R0,#+4
   \   0000006C   0x.... 0x....      BL       emberAfPrint
   \   00000070   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   00000074   0xA907             ADD      R1,SP,#+28
   \   00000076   0xF851 0x2020      LDR      R2,[R1, R0, LSL #+2]
   \   0000007A   0x4629             MOV      R1,R5
   \   0000007C   0x2004             MOVS     R0,#+4
   \   0000007E   0x.... 0x....      BL       emberAfPrint
   \   00000082   0x4638             MOV      R0,R7
   \   00000084   0x.... 0x....      BL       emberGetBindingRemoteNodeId
   \   00000088   0x9002             STR      R0,[SP, #+8]
   \   0000008A   0xF8BD 0x000E      LDRH     R0,[SP, #+14]
   \   0000008E   0x9001             STR      R0,[SP, #+4]
   \   00000090   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   00000094   0x9000             STR      R0,[SP, #+0]
   \   00000096   0xF89D 0x300D      LDRB     R3,[SP, #+13]
   \   0000009A   0xF89D 0x2019      LDRB     R2,[SP, #+25]
   \   0000009E   0x4651             MOV      R1,R10
   \   000000A0   0x2004             MOVS     R0,#+4
   \   000000A2   0x.... 0x....      BL       emberAfPrint
   \   000000A6   0x.... 0x....      BL       ??Subroutine2_0
   \                     ??CrossCallReturnLabel_15:
   \   000000AA   0xB118             CBZ.N    R0,??optionBindingTablePrintCommand_6
   \   000000AC   0xF10D 0x0011      ADD      R0,SP,#+17
   \   000000B0   0x.... 0x....      BL       emberAfPrintBigEndianEui64
   \                     ??optionBindingTablePrintCommand_6:
   \   000000B4   0x4631             MOV      R1,R6
   \   000000B6   0x.... 0x....      BL       ??Subroutine0_0
    241              emberAfAppFlush();
    242            }
   \                     ??CrossCallReturnLabel_3:
   \   000000BA   0xE7BD             B.N      ??optionBindingTablePrintCommand_2
    243            emberAfAppPrintln("%d of %d bindings used",
    244                              bindings,
    245                              emberAfGetBindingTableSize());
   \                     ??optionBindingTablePrintCommand_3:
   \   000000BC   0x.... 0x....      BL       emberAfGetBindingTableSize
   \   000000C0   0x4603             MOV      R3,R0
   \   000000C2   0xB2E2             UXTB     R2,R4
   \   000000C4   0x.... 0x....      ADR.W    R1,`?<Constant "%d of %d bindings used">`
   \   000000C8   0x.... 0x....      BL       ?Subroutine3
    246          #endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_APP)
    247          }
   \                     ??CrossCallReturnLabel_21:
   \   000000CC   0xB00C             ADD      SP,SP,#+48
   \   000000CE   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3:
   \   00000000   0x2004             MOVS     R0,#+4
   \   00000002   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2:
   \   00000000   0x4604             MOV      R4,R0
   \                     ??Subroutine2_0:
   \   00000002   0x2004             MOVS     R0,#+4
   \   00000004   0x.... 0x....      B.W      emberAfPrintEnabled
    248          
    249          // option binding-table clear

   \                                 In section .text, align 2, keep-with-next
    250          void optionBindingTableClearCommand(void)
    251          {
    252            emberClearBindingTable();
   \                     optionBindingTableClearCommand:
   \   00000000   0x.... 0x....      B.W      emberClearBindingTable
    253          }
    254          
    255          // option address-table print

   \                                 In section .text, align 2, keep-with-next
    256          void optionAddressTablePrintCommand(void)
    257          {
   \                     optionAddressTablePrintCommand:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    258            int8u i;
    259            int8u used = 0;
   \   00000004   0x2400             MOVS     R4,#+0
    260            emberAfAppPrintln("#  node   eui");
   \   00000006   0x.... 0x....      ADR.W    R1,`?<Constant "#  node   eui">`
   \   0000000A   0x.... 0x....      BL       ??Subroutine0_0
    261            for (i = 0; i < emberAfGetAddressTableSize(); i++) {
   \                     ??CrossCallReturnLabel_2:
   \   0000000E   0x2500             MOVS     R5,#+0
   \   00000010   0x....             ADR.N    R6,??DataTable39  ;; ""
   \   00000012   0x.... 0x....      ADR.W    R7,`?<Constant "%d: 0x%2x ">`
   \   00000016   0xE01B             B.N      ??optionAddressTablePrintCommand_0
    262              EmberNodeId nodeId = emberGetAddressTableRemoteNodeId(i);
   \                     ??optionAddressTablePrintCommand_1:
   \   00000018   0x4628             MOV      R0,R5
   \   0000001A   0x.... 0x....      BL       emberGetAddressTableRemoteNodeId
    263              if (nodeId != EMBER_TABLE_ENTRY_UNUSED_NODE_ID) {
   \   0000001E   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xD013             BEQ.N    ??CrossCallReturnLabel_1
    264                EmberEUI64 eui64;
    265                used++;
   \   00000026   0x1C64             ADDS     R4,R4,#+1
    266                emberAfAppPrint("%d: 0x%2x ", i, nodeId);
   \   00000028   0x4603             MOV      R3,R0
   \   0000002A   0x462A             MOV      R2,R5
   \   0000002C   0x4639             MOV      R1,R7
   \   0000002E   0x2004             MOVS     R0,#+4
   \   00000030   0x.... 0x....      BL       emberAfPrint
    267                emberGetAddressTableRemoteEui64(i, eui64);
   \   00000034   0xA900             ADD      R1,SP,#+0
   \   00000036   0x4628             MOV      R0,R5
   \   00000038   0x.... 0x....      BL       emberGetAddressTableRemoteEui64
    268                emberAfAppDebugExec(emberAfPrintBigEndianEui64(eui64));
   \   0000003C   0x.... 0x....      BL       ??Subroutine2_0
   \                     ??CrossCallReturnLabel_14:
   \   00000040   0xB110             CBZ.N    R0,??optionAddressTablePrintCommand_2
   \   00000042   0xA800             ADD      R0,SP,#+0
   \   00000044   0x.... 0x....      BL       emberAfPrintBigEndianEui64
    269                emberAfAppPrintln("");
   \                     ??optionAddressTablePrintCommand_2:
   \   00000048   0x4631             MOV      R1,R6
   \   0000004A   0x.... 0x....      BL       ??Subroutine0_0
    270                emberAfAppFlush();
    271              }
    272            }
   \                     ??CrossCallReturnLabel_1:
   \   0000004E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??optionAddressTablePrintCommand_0:
   \   00000050   0x.... 0x....      BL       emberAfGetAddressTableSize
   \   00000054   0xB2ED             UXTB     R5,R5
   \   00000056   0x4285             CMP      R5,R0
   \   00000058   0xD3DE             BCC.N    ??optionAddressTablePrintCommand_1
    273            emberAfAppPrintln("%d of %d entries used.", 
    274                              used, 
    275                              emberAfGetAddressTableSize());
   \   0000005A   0x.... 0x....      BL       emberAfGetAddressTableSize
   \   0000005E   0x4603             MOV      R3,R0
   \   00000060   0xB2E2             UXTB     R2,R4
   \   00000062   0x.... 0x....      ADR.W    R1,`?<Constant "%d of %d entries used.">`
   \   00000066   0x.... 0x....      BL       ?Subroutine3
    276          }
   \                     ??CrossCallReturnLabel_20:
   \   0000006A   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
    277          
    278          // option address-table set <index> <eui64> <node id>

   \                                 In section .text, align 2, keep-with-next
    279          void optionAddressTableSetCommand(void)
    280          {
   \                     optionAddressTableSetCommand:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    281            EmberEUI64 eui64;
    282            EmberStatus status;
    283            int8u index = (int8u)emberUnsignedCommandArgument(0);
   \   00000004   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_11:
   \   00000008   0x4604             MOV      R4,R0
    284            EmberNodeId nodeId = (EmberNodeId)emberUnsignedCommandArgument(2);
   \   0000000A   0x2002             MOVS     R0,#+2
   \   0000000C   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000010   0x4605             MOV      R5,R0
    285            emberAfCopyBigEndianEui64Argument(1, eui64);
   \   00000012   0xA900             ADD      R1,SP,#+0
   \   00000014   0x.... 0x....      BL       ??Subroutine5_0
    286            status = emberAfSetAddressTableEntry(index, eui64, nodeId);
   \                     ??CrossCallReturnLabel_24:
   \   00000018   0xB2AA             UXTH     R2,R5
   \   0000001A   0xA900             ADD      R1,SP,#+0
   \   0000001C   0xB2E0             UXTB     R0,R4
   \   0000001E   0x.... 0x....      BL       emberAfSetAddressTableEntry
    287            emberAfAppPrintln("set address %d: 0x%x", index, status);
   \   00000022   0x4603             MOV      R3,R0
   \   00000024   0xB2E2             UXTB     R2,R4
   \   00000026   0x.... 0x....      ADR.W    R1,`?<Constant "set address %d: 0x%x">`
   \   0000002A   0x.... 0x....      BL       ?Subroutine3
    288          }
   \                     ??CrossCallReturnLabel_19:
   \   0000002E   0xBD37             POP      {R0-R2,R4,R5,PC}  ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5:
   \   00000000   0xA901             ADD      R1,SP,#+4
   \                     ??Subroutine5_0:
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      B.W      emberAfCopyBigEndianEui64Argument
    289          
    290          // option edb <endpoint>

   \                                 In section .text, align 2, keep-with-next
    291          void optionEndDeviceBindCommand(void)
    292          {
   \                     optionEndDeviceBindCommand:
   \   00000000   0xB580             PUSH     {R7,LR}
    293            int8u endpoint = (int8u)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine1
    294            emberAfSendEndDeviceBind(endpoint);
   \                     ??CrossCallReturnLabel_10:
   \   00000006   0xB2C0             UXTB     R0,R0
   \   00000008   0xE8BD 0x4002      POP      {R1,LR}
   \   0000000C   0x.... 0x....      B.W      emberAfSendEndDeviceBind
    295          }
    296          

   \                                 In section .text, align 2, keep-with-next
    297          void optionApsRetryCommand(void) 
    298          {
   \                     optionApsRetryCommand:
   \   00000000   0x....             LDR.N    R0,??DataTable39_2
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x7840             LDRB     R0,[R0, #+1]
   \   00000008   0x....             LDR.N    R1,??DataTable39_6
   \   0000000A   0x2865             CMP      R0,#+101
   \   0000000C   0xBF08             IT       EQ 
   \   0000000E   0x2000             MOVEQ    R0,#+0
    299            if ( emberCurrentCommand->name[1] == 'e' ) {
    300              emberAfApsRetryOverride = EMBER_AF_RETRY_OVERRIDE_NONE;
   \   00000010   0xD006             BEQ.N    ??optionApsRetryCommand_0
    301            } else if ( emberCurrentCommand->name[1] == 'n' ) {
   \   00000012   0x286E             CMP      R0,#+110
   \   00000014   0xBF08             IT       EQ 
   \   00000016   0x2001             MOVEQ    R0,#+1
    302              emberAfApsRetryOverride = EMBER_AF_RETRY_OVERRIDE_SET;
   \   00000018   0xD002             BEQ.N    ??optionApsRetryCommand_0
    303            } else if ( emberCurrentCommand->name[1] == 'f' ) {
   \   0000001A   0x2866             CMP      R0,#+102
   \   0000001C   0xD101             BNE.N    ??optionApsRetryCommand_1
    304              emberAfApsRetryOverride = EMBER_AF_RETRY_OVERRIDE_UNSET;
   \   0000001E   0x2002             MOVS     R0,#+2
   \                     ??optionApsRetryCommand_0:
   \   00000020   0x7008             STRB     R0,[R1, #+0]
    305            }
    306          }
   \                     ??optionApsRetryCommand_1:
   \   00000022   0x4770             BX       LR               ;; return
    307          
    308          // option security aps <off | on>

   \                                 In section .text, align 2, keep-with-next
    309          void optionApsSecurityCommand(void)
    310          {
    311            emAfApsSecurityOff = (emberCurrentCommand->name[1] == 'f'
    312                                  ? TRUE
    313                                  : FALSE);
   \                     optionApsSecurityCommand:
   \   00000000   0x....             LDR.N    R0,??DataTable39_2
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x7840             LDRB     R0,[R0, #+1]
   \   00000008   0x2866             CMP      R0,#+102
   \   0000000A   0xBF0C             ITE      EQ 
   \   0000000C   0x2001             MOVEQ    R0,#+1
   \   0000000E   0x2000             MOVNE    R0,#+0
   \   00000010   0x....             LDR.N    R1,??DataTable39_7
   \   00000012   0x7008             STRB     R0,[R1, #+0]
    314          }
   \   00000014   0x4770             BX       LR               ;; return
    315          
    316          
    317          // option link <index> <eui64 in big endian format> <key in big endian format>

   \                                 In section .text, align 2, keep-with-next
    318          void optionLinkCommand(void) 
    319          {  
   \                     optionLinkCommand:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB088             SUB      SP,SP,#+32
    320            EmberEUI64 partnerEUI64;
    321            EmberKeyData newKey;
    322            EmberStatus status;
    323            //int8u i;
    324            int8u index = (int8u)emberUnsignedCommandArgument(0);
   \   00000004   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_9:
   \   00000008   0x4604             MOV      R4,R0
    325            emberAfCopyBigEndianEui64Argument(1, partnerEUI64);
   \   0000000A   0x.... 0x....      BL       ?Subroutine5
    326            emberCopyKeyArgument(2, &newKey);
   \                     ??CrossCallReturnLabel_26:
   \   0000000E   0x2301             MOVS     R3,#+1
   \   00000010   0x2210             MOVS     R2,#+16
   \   00000012   0xA903             ADD      R1,SP,#+12
   \   00000014   0x2002             MOVS     R0,#+2
   \   00000016   0x.... 0x....      BL       emberCopyStringArgument
    327            status = emberSetKeyTableEntry(index, 
    328                                           partnerEUI64,
    329                                           TRUE,
    330                                           &newKey);
   \   0000001A   0xA803             ADD      R0,SP,#+12
   \   0000001C   0x9000             STR      R0,[SP, #+0]
   \   0000001E   0x2301             MOVS     R3,#+1
   \   00000020   0xAA01             ADD      R2,SP,#+4
   \   00000022   0xB2E1             UXTB     R1,R4
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x.... 0x....      BL       emSetKeyTableEntry
   \   0000002A   0x.... 0x....      BL       ?Subroutine2
    331            emberAfAppDebugExec(emAfPrintStatus("add link key", status));
   \                     ??CrossCallReturnLabel_17:
   \   0000002E   0xB108             CBZ.N    R0,??CrossCallReturnLabel_23
   \   00000030   0x.... 0x....      BL       ?Subroutine4
    332            emberAfAppPrintln("");
   \                     ??CrossCallReturnLabel_23:
   \   00000034   0x.... 0x....      BL       ?Subroutine0
    333            emberAfCoreFlush();
    334          }
   \                     ??CrossCallReturnLabel_5:
   \   00000038   0xB008             ADD      SP,SP,#+32
   \   0000003A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4:
   \   00000000   0x4621             MOV      R1,R4
   \   00000002   0x.... 0x....      ADR.W    R0,`?<Constant "add link key">`
   \   00000006   0x.... 0x....      B.W      emAfPrintStatus
    335          
    336          // Reverse the bits in a byte.
    337          // http://graphics.stanford.edu/~seander/bithacks.html#ReverseByteWith32Bits

   \                                 In section .text, align 2, keep-with-next
    338          static int8u reverse(int8u b)
    339          {
    340            return ((b * 0x0802UL & 0x22110UL) | (b * 0x8020UL & 0x88440UL)) * 0x10101UL >> 16;
   \                     reverse:
   \   00000000   0xF640 0x0102      MOVW     R1,#+2050
   \   00000004   0x4341             MULS     R1,R1,R0
   \   00000006   0x....             LDR.N    R2,??DataTable39_8  ;; 0x22110
   \   00000008   0x4011             ANDS     R1,R2,R1
   \   0000000A   0xF248 0x0220      MOVW     R2,#+32800
   \   0000000E   0x4350             MULS     R0,R2,R0
   \   00000010   0x....             LDR.N    R2,??DataTable39_9  ;; 0x88440
   \   00000012   0x4010             ANDS     R0,R2,R0
   \   00000014   0x4308             ORRS     R0,R0,R1
   \   00000016   0x....             LDR.N    R1,??DataTable39_10  ;; 0x10101
   \   00000018   0x4348             MULS     R0,R1,R0
   \   0000001A   0x0200             LSLS     R0,R0,#+8
   \   0000001C   0x0E00             LSRS     R0,R0,#+24
   \   0000001E   0x4770             BX       LR               ;; return
    341          }
    342          
    343          // option install-code <index> <eui64> <install code>

   \                                 In section .text, align 2, keep-with-next
    344          void optionInstallCodeCommand(void) 
    345          {  
   \                     optionInstallCodeCommand:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08C             SUB      SP,SP,#+48
    346            EmberEUI64 eui64;
    347            EmberKeyData key;
    348            EmberStatus status;
    349            int16u crc = 0xFFFF;
   \   00000004   0xF64F 0x75FF      MOVW     R5,#+65535
    350            int8u code[16 + 2]; // 6, 8, 12, or 16 bytes plus two-byte CRC
    351            int8u i, length;
    352          
    353            length = emberCopyStringArgument(2, code, sizeof(code), FALSE);
   \   00000008   0x2300             MOVS     R3,#+0
   \   0000000A   0x2212             MOVS     R2,#+18
   \   0000000C   0xA903             ADD      R1,SP,#+12
   \   0000000E   0x2002             MOVS     R0,#+2
   \   00000010   0x.... 0x....      BL       emberCopyStringArgument
   \   00000014   0x4604             MOV      R4,R0
    354            if (length != 8 && length != 10 && length != 14 && length != 18) {
   \   00000016   0x2C08             CMP      R4,#+8
   \   00000018   0xBF18             IT       NE 
   \   0000001A   0x2C0A             CMPNE    R4,#+10
   \   0000001C   0xD005             BEQ.N    ??optionInstallCodeCommand_0
   \   0000001E   0x2C0E             CMP      R4,#+14
   \   00000020   0xBF1C             ITT      NE 
   \   00000022   0x2C12             CMPNE    R4,#+18
   \   00000024   0x.... 0x....      ADRNE.W  R1,`?<Constant "ERR: Install code mus...">`
    355              emberAfAppPrintln("ERR: Install code must be 8, 10, 14, or 18 bytes in length");
   \   00000028   0xD149             BNE.N    ??optionInstallCodeCommand_1
    356              return;
    357            }
    358          
    359            // Compute the CRC and verify that it matches.  The bit reversals, byte swap,
    360            // and ones' complement are due to differences between halCommonCrc16 and the
    361            // Smart Energy version.
    362            for (i = 0; i < length - 2; i++) {
   \                     ??optionInstallCodeCommand_0:
   \   0000002A   0x2600             MOVS     R6,#+0
   \   0000002C   0xE008             B.N      ??optionInstallCodeCommand_2
    363              crc = halCommonCrc16(reverse(code[i]), crc);
   \                     ??optionInstallCodeCommand_3:
   \   0000002E   0xA903             ADD      R1,SP,#+12
   \   00000030   0x5C70             LDRB     R0,[R6, R1]
   \   00000032   0x.... 0x....      BL       reverse
   \   00000036   0x4629             MOV      R1,R5
   \   00000038   0x.... 0x....      BL       halCommonCrc16
   \   0000003C   0x4605             MOV      R5,R0
    364            }
   \   0000003E   0x1C76             ADDS     R6,R6,#+1
   \                     ??optionInstallCodeCommand_2:
   \   00000040   0xB2F6             UXTB     R6,R6
   \   00000042   0x1EA1             SUBS     R1,R4,#+2
   \   00000044   0x428E             CMP      R6,R1
   \   00000046   0xDBF2             BLT.N    ??optionInstallCodeCommand_3
    365            crc = ~HIGH_LOW_TO_INT(reverse(LOW_BYTE(crc)), reverse(HIGH_BYTE(crc)));
   \   00000048   0xB2E8             UXTB     R0,R5
   \   0000004A   0x.... 0x....      BL       reverse
   \   0000004E   0x0206             LSLS     R6,R0,#+8
   \   00000050   0x0A28             LSRS     R0,R5,#+8
   \   00000052   0x.... 0x....      BL       reverse
   \   00000056   0x1980             ADDS     R0,R0,R6
   \   00000058   0x43C5             MVNS     R5,R0
    366            if (code[length - 2] != LOW_BYTE(crc)
    367                || code[length - 1] != HIGH_BYTE(crc)) {
   \   0000005A   0xA803             ADD      R0,SP,#+12
   \   0000005C   0x1820             ADDS     R0,R4,R0
   \   0000005E   0xF810 0x1C02      LDRB     R1,[R0, #-2]
   \   00000062   0xB2EA             UXTB     R2,R5
   \   00000064   0x4291             CMP      R1,R2
   \   00000066   0xBF02             ITTT     EQ 
   \   00000068   0xF810 0x0C01      LDRBEQ   R0,[R0, #-1]
   \   0000006C   0xB2AD             UXTHEQ   R5,R5
   \   0000006E   0xEBB0 0x2F15      CMPEQ    R0,R5, LSR #+8
   \   00000072   0xD003             BEQ.N    ??optionInstallCodeCommand_4
    368              emberAfAppPrintln("ERR: Calculated CRC 0x%2x does not match", crc);
   \   00000074   0xB2AA             UXTH     R2,R5
   \   00000076   0x.... 0x....      ADR.W    R1,`?<Constant "ERR: Calculated CRC 0...">`
   \   0000007A   0xE009             B.N      ??optionInstallCodeCommand_5
    369              return;
    370            }
    371          
    372            // Compute the key from the install code and CRC.
    373            status = emberAesHashSimple(length, code, emberKeyContents(&key));
   \                     ??optionInstallCodeCommand_4:
   \   0000007C   0xAA08             ADD      R2,SP,#+32
   \   0000007E   0xA903             ADD      R1,SP,#+12
   \   00000080   0x4620             MOV      R0,R4
   \   00000082   0x.... 0x....      BL       emberAesHashSimple
   \   00000086   0x0004             MOVS     R4,R0
    374            if (status != EMBER_SUCCESS) {
   \   00000088   0xD006             BEQ.N    ??optionInstallCodeCommand_6
    375              emberAfAppPrintln("ERR: AES-MMO hash failed: 0x%x", status);
   \   0000008A   0x4602             MOV      R2,R0
   \   0000008C   0x.... 0x....      ADR.W    R1,`?<Constant "ERR: AES-MMO hash fai...">`
   \                     ??optionInstallCodeCommand_5:
   \   00000090   0x2004             MOVS     R0,#+4
   \   00000092   0x.... 0x....      BL       emberAfPrintln
    376              return;
   \   00000096   0xE014             B.N      ??CrossCallReturnLabel_0
    377            }
    378          
    379            // Add it to the table.
    380            emberAfCopyBigEndianEui64Argument(1, eui64);
   \                     ??optionInstallCodeCommand_6:
   \   00000098   0x.... 0x....      BL       ?Subroutine5
    381            status = emberSetKeyTableEntry((int8u)emberUnsignedCommandArgument(0), // index
    382                                           eui64,
    383                                           TRUE,                                   // link key 
    384                                          &key);
   \                     ??CrossCallReturnLabel_25:
   \   0000009C   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_8:
   \   000000A0   0x4601             MOV      R1,R0
   \   000000A2   0xA808             ADD      R0,SP,#+32
   \   000000A4   0x9000             STR      R0,[SP, #+0]
   \   000000A6   0x2301             MOVS     R3,#+1
   \   000000A8   0xAA01             ADD      R2,SP,#+4
   \   000000AA   0xB2C9             UXTB     R1,R1
   \   000000AC   0x2000             MOVS     R0,#+0
   \   000000AE   0x.... 0x....      BL       emSetKeyTableEntry
   \   000000B2   0x.... 0x....      BL       ?Subroutine2
    385            emberAfAppDebugExec(emAfPrintStatus("add link key", status));
   \                     ??CrossCallReturnLabel_16:
   \   000000B6   0xB108             CBZ.N    R0,??CrossCallReturnLabel_22
   \   000000B8   0x.... 0x....      BL       ?Subroutine4
    386            emberAfAppPrintln("");
   \                     ??CrossCallReturnLabel_22:
   \   000000BC   0x....             ADR.N    R1,??DataTable39  ;; ""
   \                     ??optionInstallCodeCommand_1:
   \   000000BE   0x.... 0x....      BL       ??Subroutine0_0
    387            emberAfAppFlush();
    388          }
   \                     ??CrossCallReturnLabel_0:
   \   000000C2   0xB00C             ADD      SP,SP,#+48
   \   000000C4   0xBD70             POP      {R4-R6,PC}       ;; return
    389          
    390          
    391          // option binding-table set <index> <cluster> <local ep> <remote ep> <EUI>

   \                                 In section .text, align 2, keep-with-next
    392          void optionBindingTableSetCommand(void)
    393          {
   \                     optionBindingTableSetCommand:
   \   00000000   0xB57F             PUSH     {R0-R6,LR}
    394            EmberBindingTableEntry entry;
    395            int8u index = (int8u)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_7:
   \   00000006   0x4604             MOV      R4,R0
    396            int8u endpoint = (int8u)emberUnsignedCommandArgument(2);
   \   00000008   0x2002             MOVS     R0,#+2
   \   0000000A   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   0000000E   0x4605             MOV      R5,R0
    397            EmberStatus status = emberAfPushEndpointNetworkIndex(endpoint);
   \   00000010   0xB2C0             UXTB     R0,R0
   \   00000012   0x.... 0x....      BL       emberAfPushEndpointNetworkIndex
   \   00000016   0x0006             MOVS     R6,R0
    398            if (status == EMBER_SUCCESS) {
   \   00000018   0xD119             BNE.N    ??optionBindingTableSetCommand_0
    399              entry.type = EMBER_UNICAST_BINDING;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0xF88D 0x0000      STRB     R0,[SP, #+0]
    400              entry.clusterId = (EmberAfClusterId)emberUnsignedCommandArgument(1);
   \   00000020   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000024   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    401              entry.local = endpoint;
   \   00000028   0xF88D 0x5001      STRB     R5,[SP, #+1]
    402              entry.remote = (int8u)emberUnsignedCommandArgument(3);
   \   0000002C   0x2003             MOVS     R0,#+3
   \   0000002E   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000032   0xF88D 0x0004      STRB     R0,[SP, #+4]
    403              emberAfCopyBigEndianEui64Argument(4, entry.identifier);
   \   00000036   0xF10D 0x0105      ADD      R1,SP,#+5
   \   0000003A   0x2004             MOVS     R0,#+4
   \   0000003C   0x.... 0x....      BL       emberAfCopyBigEndianEui64Argument
    404              status = emberSetBinding(index, &entry);
   \   00000040   0xA900             ADD      R1,SP,#+0
   \   00000042   0xB2E0             UXTB     R0,R4
   \   00000044   0x.... 0x....      BL       emberSetBinding
   \   00000048   0x4606             MOV      R6,R0
    405              emberAfPopNetworkIndex();
   \   0000004A   0x.... 0x....      BL       emberAfPopNetworkIndex
    406            }
    407            emberAfAppPrintln("set bind %d: 0x%x", index, status);
   \                     ??optionBindingTableSetCommand_0:
   \   0000004E   0x4633             MOV      R3,R6
   \   00000050   0xB2E2             UXTB     R2,R4
   \   00000052   0x.... 0x....      ADR.W    R1,`?<Constant "set bind %d: 0x%x">`
   \   00000056   0x.... 0x....      BL       ?Subroutine3
    408          }
   \                     ??CrossCallReturnLabel_18:
   \   0000005A   0xBD7F             POP      {R0-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_1:
   \   00000000   0x25 0x70          DC8      0x25, 0x70, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_2:
   \   00000000   0x........         DC32     emberCurrentCommand

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_3:
   \   00000000   0x........         DC32     emberAfPrintReceivedMessages

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_4:
   \   00000000   0x........         DC32     discoveryTargetNodeId

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_5:
   \   00000000   0x........         DC32     emAfCliServiceDiscoveryCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_6:
   \   00000000   0x........         DC32     emberAfApsRetryOverride

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_7:
   \   00000000   0x........         DC32     emAfApsSecurityOff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_8:
   \   00000000   0x00022110         DC32     0x22110

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_9:
   \   00000000   0x00088440         DC32     0x88440

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_10:
   \   00000000   0x00010101         DC32     0x10101

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000   0x00               DC8 ""

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "EMPTY">`:
   \   00000000   0x45 0x4D          DC8 "EMPTY"
   \              0x50 0x54    
   \              0x59 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Match %py from 0x%2X,...">`:
   \   00000000   0x4D 0x61          DC8 "Match %py from 0x%2X, ep %d"
   \              0x74 0x63    
   \              0x68 0x20    
   \              0x25 0x70    
   \              0x79 0x20    
   \              0x66 0x72    
   \              0x6F 0x6D    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x58    
   \              0x2C 0x20    
   \              0x65 0x70    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "UNICA">`:
   \   00000000   0x55 0x4E          DC8 "UNICA"
   \              0x49 0x43    
   \              0x41 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "M2ONE">`:
   \   00000000   0x4D 0x32          DC8 "M2ONE"
   \              0x4F 0x4E    
   \              0x45 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "MULTI">`:
   \   00000000   0x4D 0x55          DC8 "MULTI"
   \              0x4C 0x54    
   \              0x49 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "?    ">`:
   \   00000000   0x3F 0x20          DC8 "?    "
   \              0x20 0x20    
   \              0x20 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "%p">`:
   \   00000000   0x25 0x70          DC8 "%p"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "discover">`:
   \   00000000   0x64 0x69          DC8 "discover"
   \              0x73 0x63    
   \              0x6F 0x76    
   \              0x65 0x72    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "NWK Address response:...">`:
   \   00000000   0x4E 0x57          DC8 "NWK Address response: 0x%2X"
   \              0x4B 0x20    
   \              0x41 0x64    
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x20    
   \              0x72 0x65    
   \              0x73 0x70    
   \              0x6F 0x6E    
   \              0x73 0x65    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "IEEE Address response: ">`:
   \   00000000   0x49 0x45          DC8 "IEEE Address response: "
   \              0x45 0x45    
   \              0x20 0x41    
   \              0x64 0x64    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x20 0x72    
   \              0x65 0x73    
   \              0x70 0x6F    
   \              0x6E 0x73    
   \              0x65 0x3A    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Service %py done.">`:
   \   00000000   0x53 0x65          DC8 "Service %py done."
   \              0x72 0x76    
   \              0x69 0x63    
   \              0x65 0x20    
   \              0x25 0x70    
   \              0x79 0x20    
   \              0x64 0x6F    
   \              0x6E 0x65    
   \              0x2E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%pd print">`:
   \   00000000   0x25 0x70          DC8 "%pd print"
   \              0x64 0x20    
   \              0x70 0x72    
   \              0x69 0x6E    
   \              0x74 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "enable">`:
   \   00000000   0x65 0x6E          DC8 "enable"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "disable">`:
   \   00000000   0x64 0x69          DC8 "disable"
   \              0x73 0x61    
   \              0x62 0x6C    
   \              0x65 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant {&"EMPTY", &"UNICA", &"M2ONE", &"MU`:
   \   00000000   0x........         DC32 `?<Constant "EMPTY">`, `?<Constant "UNICA">`
   \              0x........   
   \   00000008   0x........         DC32 `?<Constant "M2ONE">`, `?<Constant "MULTI">`
   \              0x........   
   \   00000010   0x........         DC32 `?<Constant "?    ">`

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "#  type   nwk  loc   ...">`:
   \   00000000   0x23 0x20          DC8 "#  type   nwk  loc   rem   clus   node   eui"
   \              0x20 0x74    
   \              0x79 0x70    
   \              0x65 0x20    
   \              0x20 0x20    
   \              0x6E 0x77    
   \              0x6B 0x20    
   \              0x20 0x6C    
   \              0x6F 0x63    
   \              0x20 0x20    
   \              0x20 0x72    
   \              0x65 0x6D    
   \              0x20 0x20    
   \              0x20 0x63    
   \              0x6C 0x75    
   \              0x73 0x20    
   \              0x20 0x20    
   \              0x6E 0x6F    
   \              0x64 0x65    
   \              0x20 0x20    
   \              0x20 0x65    
   \              0x75 0x69    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%d: ">`:
   \   00000000   0x25 0x64          DC8 "%d: "
   \              0x3A 0x20    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  %d    0x%x  0x%x  0...">`:
   \   00000000   0x20 0x20          DC8 "  %d    0x%x  0x%x  0x%2x 0x%2x "
   \              0x25 0x64    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x20    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "0x%x: emberGetBinding...">`:
   \   00000000   0x30 0x78          DC8 "0x%x: emberGetBinding Error: %x"
   \              0x25 0x78    
   \              0x3A 0x20    
   \              0x65 0x6D    
   \              0x62 0x65    
   \              0x72 0x47    
   \              0x65 0x74    
   \              0x42 0x69    
   \              0x6E 0x64    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x45 0x72    
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x25    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%d of %d bindings used">`:
   \   00000000   0x25 0x64          DC8 "%d of %d bindings used"
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x25 0x64    
   \              0x20 0x62    
   \              0x69 0x6E    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x73 0x20    
   \              0x75 0x73    
   \              0x65 0x64    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "#  node   eui">`:
   \   00000000   0x23 0x20          DC8 "#  node   eui"
   \              0x20 0x6E    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x20 0x20    
   \              0x65 0x75    
   \              0x69 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%d: 0x%2x ">`:
   \   00000000   0x25 0x64          DC8 "%d: 0x%2x "
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x20    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%d of %d entries used.">`:
   \   00000000   0x25 0x64          DC8 "%d of %d entries used."
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x25 0x64    
   \              0x20 0x65    
   \              0x6E 0x74    
   \              0x72 0x69    
   \              0x65 0x73    
   \              0x20 0x75    
   \              0x73 0x65    
   \              0x64 0x2E    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "set address %d: 0x%x">`:
   \   00000000   0x73 0x65          DC8 "set address %d: 0x%x"
   \              0x74 0x20    
   \              0x61 0x64    
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x20    
   \              0x25 0x64    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "add link key">`:
   \   00000000   0x61 0x64          DC8 "add link key"
   \              0x64 0x20    
   \              0x6C 0x69    
   \              0x6E 0x6B    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "ERR: Install code mus...">`:
   \   00000000   0x45 0x52          DC8 45H, 52H, 52H, 3AH, 20H, 49H, 6EH, 73H
   \              0x52 0x3A    
   \              0x20 0x49    
   \              0x6E 0x73    
   \   00000008   0x74 0x61          DC8 74H, 61H, 6CH, 6CH, 20H, 63H, 6FH, 64H
   \              0x6C 0x6C    
   \              0x20 0x63    
   \              0x6F 0x64    
   \   00000010   0x65 0x20          DC8 65H, 20H, 6DH, 75H, 73H, 74H, 20H, 62H
   \              0x6D 0x75    
   \              0x73 0x74    
   \              0x20 0x62    
   \   00000018   0x65 0x20          DC8 65H, 20H, 38H, 2CH, 20H, 31H, 30H, 2CH
   \              0x38 0x2C    
   \              0x20 0x31    
   \              0x30 0x2C    
   \   00000020   0x20 0x31          DC8 20H, 31H, 34H, 2CH, 20H, 6FH, 72H, 20H
   \              0x34 0x2C    
   \              0x20 0x6F    
   \              0x72 0x20    
   \   00000028   0x31 0x38          DC8 31H, 38H, 20H, 62H, 79H, 74H, 65H, 73H
   \              0x20 0x62    
   \              0x79 0x74    
   \              0x65 0x73    
   \   00000030   0x20 0x69          DC8 20H, 69H, 6EH, 20H, 6CH, 65H, 6EH, 67H
   \              0x6E 0x20    
   \              0x6C 0x65    
   \              0x6E 0x67    
   \   00000038   0x74 0x68          DC8 74H, 68H, 0
   \              0x00         
   \   0000003B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "ERR: Calculated CRC 0...">`:
   \   00000000   0x45 0x52          DC8 "ERR: Calculated CRC 0x%2x does not match"
   \              0x52 0x3A    
   \              0x20 0x43    
   \              0x61 0x6C    
   \              0x63 0x75    
   \              0x6C 0x61    
   \              0x74 0x65    
   \              0x64 0x20    
   \              0x43 0x52    
   \              0x43 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x20    
   \              0x64 0x6F    
   \              0x65 0x73    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x6D    
   \              0x61 0x74    
   \              0x63 0x68    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "ERR: AES-MMO hash fai...">`:
   \   00000000   0x45 0x52          DC8 "ERR: AES-MMO hash failed: 0x%x"
   \              0x52 0x3A    
   \              0x20 0x41    
   \              0x45 0x53    
   \              0x2D 0x4D    
   \              0x4D 0x4F    
   \              0x20 0x68    
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "set bind %d: 0x%x">`:
   \   00000000   0x73 0x65          DC8 "set bind %d: 0x%x"
   \              0x74 0x20    
   \              0x62 0x69    
   \              0x6E 0x64    
   \              0x20 0x25    
   \              0x64 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x00    
   \   00000012   0x00 0x00          DC8 0, 0
    409          
    410          
    411          #ifdef DEBUG_PRINT_FOR_ROUTING_TABLE
    412          
    413          void optionPrintRouteCommand(void)
    414          {
    415            PGM_P statusText[] = {
    416              "active",
    417              "discov",
    418              "??    ",
    419              "unused",
    420            };
    421            
    422            PGM_P concentratorText[] = {
    423              "- ",
    424              "lo",
    425              "hi",
    426            };
    427          
    428            PGM_P routeRecordStateText[] = {
    429              "none",
    430              "sent",
    431              "need",
    432            };
    433            int8u i;
    434          
    435            emberAfAppPrintln("Routing Table\n-----------------");
    436          
    437            for (i = 0; i < EMBER_ROUTE_TABLE_SIZE; i++) {
    438              EmberRouteTableEntry entry;
    439              EmberStatus status = emberGetRouteTableEntry(i, &entry);
    440              emberAfAppPrintln("%d: dest:0x%2X next:0x%2X status:%p age:%d conc:%p rr-state:%p",
    441                                i,
    442                                entry.destination,
    443                                entry.nextHop,
    444                                statusText[entry.status],
    445                                entry.age,
    446                                concentratorText[entry.concentratorType],
    447                                routeRecordStateText[entry.routeRecordState]);
    448              emberAfAppFlush();
    449            }
    450          }
    451          #endif //  DEBUG_PRINT_FOR_ROUTING_TABLE

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       24  emAfCliServiceDiscoveryCallback
             24 -> emberAfPrint
             24 -> emberAfPrintBigEndianEui64
              0 -> emberAfPrintln
             24 -> emberAfPrintln
       32  optionAddressTablePrintCommand
             32 -> emberAfGetAddressTableSize
             32 -> emberAfPrint
             32 -> emberAfPrintBigEndianEui64
             32 -> emberAfPrintEnabled
             32 -> emberAfPrintln
             32 -> emberGetAddressTableRemoteEui64
             32 -> emberGetAddressTableRemoteNodeId
       24  optionAddressTableSetCommand
             24 -> emberAfCopyBigEndianEui64Argument
             24 -> emberAfPrintln
             24 -> emberAfSetAddressTableEntry
             24 -> emberUnsignedCommandArgument
        0  optionApsRetryCommand
        0  optionApsSecurityCommand
        0  optionBindingTableClearCommand
              0 -> emberClearBindingTable
       80  optionBindingTablePrintCommand
             80 -> __aeabi_memcpy4
             80 -> emberAfGetBindingTableSize
             80 -> emberAfPrint
             80 -> emberAfPrintBigEndianEui64
             80 -> emberAfPrintEnabled
             80 -> emberAfPrintln
             80 -> emberGetBinding
             80 -> emberGetBindingRemoteNodeId
       32  optionBindingTableSetCommand
             32 -> emberAfCopyBigEndianEui64Argument
             32 -> emberAfPopNetworkIndex
             32 -> emberAfPrintln
             32 -> emberAfPushEndpointNetworkIndex
             32 -> emberSetBinding
             32 -> emberUnsignedCommandArgument
       16  optionDiscoverCommand
             16 -> emberAfFindDevicesByProfileAndCluster
             16 -> emberUnsignedCommandArgument
        8  optionDiscoveryTargetCommand
              8 -> emberUnsignedCommandArgument
        8  optionEndDeviceBindCommand
              0 -> emberAfSendEndDeviceBind
              8 -> emberUnsignedCommandArgument
       64  optionInstallCodeCommand
             64 -> emAfPrintStatus
             64 -> emSetKeyTableEntry
             64 -> emberAesHashSimple
             64 -> emberAfCopyBigEndianEui64Argument
             64 -> emberAfPrintEnabled
             64 -> emberAfPrintln
             64 -> emberCopyStringArgument
             64 -> emberUnsignedCommandArgument
             64 -> halCommonCrc16
             64 -> reverse
       40  optionLinkCommand
             40 -> emAfPrintStatus
             40 -> emSetKeyTableEntry
             40 -> emberAfCopyBigEndianEui64Argument
             40 -> emberAfPrintEnabled
             40 -> emberAfPrintln
             40 -> emberCopyStringArgument
             40 -> emberUnsignedCommandArgument
        0  optionPrintRxCommand
              0 -> emberAfPrintln
        0  optionRegisterCommand
              0 -> emberAfRegistrationStartCallback
        0  reverse


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      36  ?<Constant "  %d    0x%x  0x%x  0...">
       1  ?<Constant "">
      16  ?<Constant "#  node   eui">
      48  ?<Constant "#  type   nwk  loc   ...">
      24  ?<Constant "%d of %d bindings used">
      24  ?<Constant "%d of %d entries used.">
       8  ?<Constant "%d: ">
      12  ?<Constant "%d: 0x%2x ">
       4  ?<Constant "%p">
      12  ?<Constant "%pd print">
      32  ?<Constant "0x%x: emberGetBinding...">
       8  ?<Constant "?    ">
       8  ?<Constant "EMPTY">
      32  ?<Constant "ERR: AES-MMO hash fai...">
      44  ?<Constant "ERR: Calculated CRC 0...">
      60  ?<Constant "ERR: Install code mus...">
      24  ?<Constant "IEEE Address response: ">
       8  ?<Constant "M2ONE">
       8  ?<Constant "MULTI">
      28  ?<Constant "Match %py from 0x%2X,...">
      28  ?<Constant "NWK Address response:...">
      20  ?<Constant "Service %py done.">
       8  ?<Constant "UNICA">
      16  ?<Constant "add link key">
       8  ?<Constant "disable">
      12  ?<Constant "discover">
       8  ?<Constant "enable">
      24  ?<Constant "set address %d: 0x%x">
      20  ?<Constant "set bind %d: 0x%x">
      20  ?<Constant {&"EMPTY", &"UNICA", &"M2ONE", &"MU
       4  ??DataTable39
       4  ??DataTable39_1
       4  ??DataTable39_10
       4  ??DataTable39_2
       4  ??DataTable39_3
       4  ??DataTable39_4
       4  ??DataTable39_5
       4  ??DataTable39_6
       4  ??DataTable39_7
       4  ??DataTable39_8
       4  ??DataTable39_9
       8  ?Subroutine0
       6  ?Subroutine1
       8  ?Subroutine2
       6  ?Subroutine3
      10  ?Subroutine4
       8  ?Subroutine5
       2  discoveryTargetNodeId
     114  emAfCliServiceDiscoveryCallback
     108  optionAddressTablePrintCommand
      48  optionAddressTableSetCommand
      36  optionApsRetryCommand
      22  optionApsSecurityCommand
       4  optionBindingTableClearCommand
     210  optionBindingTablePrintCommand
      92  optionBindingTableSetCommand
      36  optionDiscoverCommand
      12  optionDiscoveryTargetCommand
      16  optionEndDeviceBindCommand
     198  optionInstallCodeCommand
      60  optionLinkCommand
      44  optionPrintRxCommand
       4  optionRegisterCommand
      32  reverse

 
     2 bytes in section .data
    45 bytes in section .rodata
 1 682 bytes in section .text
 
 1 682 bytes of CODE  memory
    45 bytes of CONST memory
     2 bytes of DATA  memory

Errors: none
Warnings: none
