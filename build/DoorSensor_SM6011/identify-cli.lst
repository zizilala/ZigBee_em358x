###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.2.53884/W32 for ARM     06/Feb/2015  13:53:32 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\plugin\id #
#                    entify\identify-cli.c                                    #
#    Command line =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\plugin\id #
#                    entify\identify-cli.c -D "GENERATED_TOKEN_HEADER=\"app/b #
#                    uilder/DoorSensor_SM6011/DoorSensor_SM6011_tokens.h\""   #
#                    -D "ZA_GENERATED_HEADER=\"app/builder/DoorSensor_SM6011/ #
#                    DoorSensor_SM6011.h\"" -D LOCAL_STORAGE_BTL -D           #
#                    "BOARD_HEADER=\"app\builder\DoorSensor_SM6011\DoorSensor #
#                    _SM6011_board.h\"" -D "PLATFORM_HEADER=\"hal/micro/corte #
#                    xm3/compiler/iar.h\"" -D CORTEXM3 -D                     #
#                    CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3585 -D PHY_EM3XX -D  #
#                    "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\ #
#                    "" -D "CONFIGURATION_HEADER=\"app/framework/util/config. #
#                    h\"" -D "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/D #
#                    oorSensor_SM6011/DoorSensor_SM6011_endpoint_config.h\""  #
#                    -D "__SOURCEFILE__=\"identify-cli.c\"" -lC               #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \ --diag_suppress Pa050 -o C:\Ember\EmberZNet5.3.0-GA\em #
#                    35x\build\DoorSensor_SM6011\ --debug --endian=little     #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\plugin\id #
#                    entify\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\ #
#                    DoorSensor_SM6011\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\a #
#                    pp\builder\DoorSensor_SM6011\..\..\..\ -I                #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\app\framework\include\ -I                #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app #
#                    \builder\DoorSensor_SM6011\..\..\..\stack\ -I            #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\hal\ -I C:\Ember\EmberZNet5.3.0-GA\em35x #
#                    \app\builder\DoorSensor_SM6011\..\..\..\hal\..\ -Ohz     #
#                    --use_c++_inline                                         #
#    List file    =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \identify-cli.lst                                        #
#    Object file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \identify-cli.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\plugin\identify\identify-cli.c
      1          // *******************************************************************
      2          // * identify-cli.c
      3          // *
      4          // *
      5          // * Copyright 2012 by Ember Corporation. All rights reserved.              *80*
      6          // *******************************************************************
      7          
      8          #include "app/framework/include/af.h"
      9          #include "app/util/serial/command-interpreter2.h"
     10          
     11          void emAfPluginIdentifyCliPrint(void);
     12          
     13          #if !defined(EMBER_AF_GENERATE_CLI)
     14          EmberCommandEntry emberAfPluginIdentifyCommands[] = {
     15            emberCommandEntryAction("print",  emAfPluginIdentifyCliPrint, "", "Print the identify state of each endpoint"),
     16            emberCommandEntryTerminator(),
     17          };
     18          #endif // EMBER_AF_GENERATE_CLI
     19          
     20          // plugin identify print

   \                                 In section .text, align 2, keep-with-next
     21          void emAfPluginIdentifyCliPrint(void) 
     22          {
   \                     emAfPluginIdentifyCliPrint:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
     23          #if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_IDENTIFY_CLUSTER)
     24            int8u i;
     25            for (i = 0; i < emberAfEndpointCount(); ++i) {
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x.... 0x....      ADR.W    R5,`?<Constant "Endpoint 0x%x is iden...">`
   \   0000000A   0x.... 0x....      ADR.W    R6,`?<Constant "FALSE">`
   \   0000000E   0x.... 0x....      ADR.W    R7,`?<Constant "TRUE">`
   \   00000012   0xE006             B.N      ??emAfPluginIdentifyCliPrint_0
     26              int8u endpoint = emberAfEndpointFromIndex(i);
     27              emberAfIdentifyClusterPrintln("Endpoint 0x%x is identifying: %p",
     28                                            endpoint,
     29                                            (emberAfIsDeviceIdentifying(endpoint)
     30                                             ? "TRUE"
     31                                             : "FALSE"));
   \                     ??emAfPluginIdentifyCliPrint_1:
   \   00000014   0x4642             MOV      R2,R8
   \   00000016   0x4629             MOV      R1,R5
   \   00000018   0xF44F 0x7090      MOV      R0,#+288
   \   0000001C   0x.... 0x....      BL       emberAfPrintln
   \   00000020   0x1C64             ADDS     R4,R4,#+1
   \                     ??emAfPluginIdentifyCliPrint_0:
   \   00000022   0x.... 0x....      BL       emberAfEndpointCount
   \   00000026   0xB2E4             UXTB     R4,R4
   \   00000028   0x4284             CMP      R4,R0
   \   0000002A   0xD20A             BCS.N    ??emAfPluginIdentifyCliPrint_2
   \   0000002C   0x4620             MOV      R0,R4
   \   0000002E   0x.... 0x....      BL       emberAfEndpointFromIndex
   \   00000032   0x4680             MOV      R8,R0
   \   00000034   0x.... 0x....      BL       emberAfIsDeviceIdentifying
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xBF14             ITE      NE 
   \   0000003C   0x463B             MOVNE    R3,R7
   \   0000003E   0x4633             MOVEQ    R3,R6
   \   00000040   0xE7E8             B.N      ??emAfPluginIdentifyCliPrint_1
     32            }
     33          #endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_IDENTIFY_CLUSTER)
     34          }
   \                     ??emAfPluginIdentifyCliPrint_2:
   \   00000042   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Endpoint 0x%x is iden...">`:
   \   00000000   0x45 0x6E          DC8 "Endpoint 0x%x is identifying: %p"
   \              0x64 0x70    
   \              0x6F 0x69    
   \              0x6E 0x74    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x20    
   \              0x69 0x73    
   \              0x20 0x69    
   \              0x64 0x65    
   \              0x6E 0x74    
   \              0x69 0x66    
   \              0x79 0x69    
   \              0x6E 0x67    
   \              0x3A 0x20    
   \              0x25 0x70    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "TRUE">`:
   \   00000000   0x54 0x52          DC8 "TRUE"
   \              0x55 0x45    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "FALSE">`:
   \   00000000   0x46 0x41          DC8 "FALSE"
   \              0x4C 0x53    
   \              0x45 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       24  emAfPluginIdentifyCliPrint
             24 -> emberAfEndpointCount
             24 -> emberAfEndpointFromIndex
             24 -> emberAfIsDeviceIdentifying
             24 -> emberAfPrintln


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      36  ?<Constant "Endpoint 0x%x is iden...">
       8  ?<Constant "FALSE">
       8  ?<Constant "TRUE">
      70  emAfPluginIdentifyCliPrint

 
 122 bytes in section .text
 
 122 bytes of CODE memory

Errors: none
Warnings: none
