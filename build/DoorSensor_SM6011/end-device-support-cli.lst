###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.2.53884/W32 for ARM     04/Feb/2015  16:37:51 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\plugin\en #
#                    d-device-support\end-device-support-cli.c                #
#    Command line =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\plugin\en #
#                    d-device-support\end-device-support-cli.c -D             #
#                    "GENERATED_TOKEN_HEADER=\"app/builder/DoorSensor_SM6011/ #
#                    DoorSensor_SM6011_tokens.h\"" -D                         #
#                    "ZA_GENERATED_HEADER=\"app/builder/DoorSensor_SM6011/Doo #
#                    rSensor_SM6011.h\"" -D LOCAL_STORAGE_BTL -D              #
#                    "BOARD_HEADER=\"app\builder\DoorSensor_SM6011\DoorSensor #
#                    _SM6011_board.h\"" -D "PLATFORM_HEADER=\"hal/micro/corte #
#                    xm3/compiler/iar.h\"" -D CORTEXM3 -D                     #
#                    CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3585 -D PHY_EM3XX -D  #
#                    "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\ #
#                    "" -D "CONFIGURATION_HEADER=\"app/framework/util/config. #
#                    h\"" -D "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/D #
#                    oorSensor_SM6011/DoorSensor_SM6011_endpoint_config.h\""  #
#                    -D "__SOURCEFILE__=\"end-device-support-cli.c\"" -lC     #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \ --diag_suppress Pa050 -o C:\Ember\EmberZNet5.3.0-GA\em #
#                    35x\build\DoorSensor_SM6011\ --debug --endian=little     #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\plugin\en #
#                    d-device-support\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\ap #
#                    p\builder\DoorSensor_SM6011\ -I                          #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app #
#                    \builder\DoorSensor_SM6011\..\..\..\app\framework\includ #
#                    e\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorS #
#                    ensor_SM6011\..\..\..\ -I C:\Ember\EmberZNet5.3.0-GA\em3 #
#                    5x\app\builder\DoorSensor_SM6011\..\..\..\stack\ -I      #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\hal\ -I C:\Ember\EmberZNet5.3.0-GA\em35x #
#                    \app\builder\DoorSensor_SM6011\..\..\..\hal\..\ -Ohz     #
#                    --use_c++_inline                                         #
#    List file    =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \end-device-support-cli.lst                              #
#    Object file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \end-device-support-cli.o                                #
#                                                                             #
#                                                                             #
###############################################################################

C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\plugin\end-device-support\end-device-support-cli.c
      1          // *****************************************************************************
      2          // * end-device-support-cli.c
      3          // *
      4          // *
      5          // * Copyright 2013 Silicon Laboratories, Inc.                              *80*
      6          // *****************************************************************************
      7          
      8          
      9          #include "app/framework/include/af.h"
     10          #include "app/framework/util/common.h"
     11          #include "app/util/serial/command-interpreter2.h"
     12          #include "end-device-support.h"
     13          
     14          
     15          // *****************************************************************************
     16          // Forward declarations
     17          
     18          void emberAfPluginEndDeviceSupportStatusCommand(void);
     19          void emberAfPluginEndDeviceSupportPollCompletedCallbackCommand(void);
     20          void emberAfPluginEndDeviceSupportForceShortPollCommand(void);
     21          
     22          // *****************************************************************************
     23          // Globals
     24          
     25          #ifndef EMBER_AF_GENERATE_CLI
     26          EmberCommandEntry emberAfPluginEndDeviceSupportCommands[] = {
     27            emberCommandEntryAction("status", emberAfPluginEndDeviceSupportStatusCommand, "",
     28                                    "Display the status of the End Device's polling"),
     29          
     30            emberCommandEntryAction("poll-completed-callback", emberAfPluginEndDeviceSupportPollCompletedCallbackCommand, "u",
     31                                    "Sets whether the device's poll completed callback function is enabled"),
     32          
     33            emberCommandEntryAction("force-short-poll", emberAfPluginEndDeviceSupportForceShortPollCommand,  "u",
     34                                    "Sets whether the CLI forces the device to short poll"),
     35          
     36            emberCommandEntryTerminator()
     37          };
     38          #endif // EMBER_AF_GENERATE_CLI
     39          

   \                                 In section .data, align 4
     40          PGM_P pollControlStrings[] = {
   \                     pollControlStrings:
   \   00000000   0x........         DC32 `?<Constant "EMBER_AF_LONG_POLL">`
   \   00000004   0x........         DC32 `?<Constant "EMBER_AF_SHORT_POLL">`
     41            "EMBER_AF_LONG_POLL",
     42            "EMBER_AF_SHORT_POLL",
     43          };
     44          
     45          
     46          // *****************************************************************************
     47          // Functions
     48          

   \                                 In section .text, align 2, keep-with-next
     49          void emberAfPluginEndDeviceSupportStatusCommand(void)
     50          {
   \                     emberAfPluginEndDeviceSupportStatusCommand:
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
     51            PGM_P names[] = {
     52              EMBER_AF_GENERATED_NETWORK_STRINGS
     53            };
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x.... 0x....      ADR.W    R1,`?<Constant {&"Primary (pro)"}>`
   \   0000000A   0x680A             LDR      R2,[R1, #0]
   \   0000000C   0x6002             STR      R2,[R0, #+0]
     54            int8u i;
     55          
     56            emberAfCorePrintln("End Device Poll Information");
   \   0000000E   0x.... 0x....      ADR.W    R1,`?<Constant "End Device Poll Infor...">`
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0x.... 0x....      BL       emberAfPrintln
     57            emberAfCorePrintln("EMBER_END_DEVICE_TIMEOUT:       %d", EMBER_END_DEVICE_POLL_TIMEOUT);
   \   00000018   0x2205             MOVS     R2,#+5
   \   0000001A   0x.... 0x....      ADR.W    R1,`?<Constant "EMBER_END_DEVICE_TIME...">`
   \   0000001E   0x.... 0x....      BL       ?Subroutine0
     58            emberAfCorePrintln("EMBER_END_DEVICE_TIMEOUT_SHIFT: %d", EMBER_END_DEVICE_POLL_TIMEOUT_SHIFT);
   \                     ??CrossCallReturnLabel_10:
   \   00000022   0x2206             MOVS     R2,#+6
   \   00000024   0x.... 0x....      ADR.W    R1,`?<Constant "EMBER_END_DEVICE_TIME...">_1`
   \   00000028   0x.... 0x....      BL       ?Subroutine0
     59            emberAfCorePrintln("Poll completed callback: %p",
     60                               (emAfEnablePollCompletedCallback
     61                                ? "yes"
     62                                : "no"));
   \                     ??CrossCallReturnLabel_9:
   \   0000002C   0x....             LDR.N    R0,??DataTable22_2
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xBF14             ITE      NE 
   \   00000034   0x....             ADRNE.N  R2,??DataTable22  ;; "yes"
   \   00000036   0x....             ADREQ.N  R2,??DataTable22_1  ;; 0x6E, 0x6F, 0x00, 0x00
   \   00000038   0x.... 0x....      ADR.W    R1,`?<Constant "Poll completed callba...">`
   \   0000003C   0x.... 0x....      BL       ?Subroutine0
     63            emberAfCoreFlush();
     64          
     65            for (i = 0; i < EMBER_SUPPORTED_NETWORKS; i++) {
   \                     ??CrossCallReturnLabel_8:
   \   00000040   0x2400             MOVS     R4,#+0
   \   00000042   0x....             LDR.N    R5,??DataTable22_3
   \   00000044   0x.... 0x....      ADR.W    R10,`?<Constant "  Short Poll Interval...">`
   \   00000048   0x.... 0x....      ADR.W    R11,`?<Constant "  Long Poll Interval ...">`
   \   0000004C   0x.... 0x....      ADR.W    R8,`?<Constant "  Current Poll Interv...">`
   \   00000050   0x.... 0x....      ADR.W    R9,`?<Constant "nwk %d [%p]">`
   \   00000054   0x....             LDR.N    R6,??DataTable22_4
     66              if (emAfNetworks[i].type == EM_AF_NETWORK_TYPE_ZIGBEE_PRO
     67                  && EMBER_END_DEVICE <= emAfNetworks[i].variant.pro.nodeType) {
   \                     ??emberAfPluginEndDeviceSupportStatusCommand_0:
   \   00000056   0xEB04 0x0044      ADD      R0,R4,R4, LSL #+1
   \   0000005A   0x5D81             LDRB     R1,[R0, R6]
   \   0000005C   0x2900             CMP      R1,#+0
   \   0000005E   0xD149             BNE.N    ??emberAfPluginEndDeviceSupportStatusCommand_1
   \   00000060   0x1980             ADDS     R0,R0,R6
   \   00000062   0x7847             LDRB     R7,[R0, #+1]
   \   00000064   0x2F03             CMP      R7,#+3
   \   00000066   0xD345             BCC.N    ??emberAfPluginEndDeviceSupportStatusCommand_1
     68                emberAfPushNetworkIndex(i);
   \   00000068   0xB2E0             UXTB     R0,R4
   \   0000006A   0x.... 0x....      BL       emberAfPushNetworkIndex
     69                emberAfCorePrintln("nwk %d [%p]", i, names[i]);
   \   0000006E   0xA800             ADD      R0,SP,#+0
   \   00000070   0xF850 0x3024      LDR      R3,[R0, R4, LSL #+2]
   \   00000074   0x4622             MOV      R2,R4
   \   00000076   0x4649             MOV      R1,R9
   \   00000078   0x2001             MOVS     R0,#+1
   \   0000007A   0x.... 0x....      BL       emberAfPrintln
     70                emberAfCorePrintln("  Current Poll Interval (qs):   %l",
     71                                   emberAfGetCurrentPollIntervalQsCallback());
   \   0000007E   0x.... 0x....      BL       emberAfGetCurrentPollIntervalQsCallback
   \   00000082   0x4602             MOV      R2,R0
   \   00000084   0x4641             MOV      R1,R8
   \   00000086   0x.... 0x....      BL       ?Subroutine0
     72                emberAfCorePrintln("  Long Poll Interval (qs):      %l",
     73                                   emberAfGetLongPollIntervalQsCallback());
   \                     ??CrossCallReturnLabel_7:
   \   0000008A   0x.... 0x....      BL       emberAfGetLongPollIntervalQsCallback
   \   0000008E   0x4602             MOV      R2,R0
   \   00000090   0x4659             MOV      R1,R11
   \   00000092   0x.... 0x....      BL       ?Subroutine0
     74                if (EMBER_SLEEPY_END_DEVICE <= emAfNetworks[i].variant.pro.nodeType) {
   \                     ??CrossCallReturnLabel_6:
   \   00000096   0x2F04             CMP      R7,#+4
   \   00000098   0xD32C             BCC.N    ??emberAfPluginEndDeviceSupportStatusCommand_1
     75                  emberAfCorePrintln("  Short Poll Interval (qs):     %l",
     76                                     emberAfGetShortPollIntervalQsCallback());
   \   0000009A   0x.... 0x....      BL       emberAfGetShortPollIntervalQsCallback
   \   0000009E   0x4602             MOV      R2,R0
   \   000000A0   0x4651             MOV      R1,R10
   \   000000A2   0x.... 0x....      BL       ?Subroutine0
     77                  emberAfCoreFlush();
     78                  emberAfCorePrintln("  Wake Timeout (qs):            %l",
     79                                     emberAfGetWakeTimeoutQsCallback());
   \                     ??CrossCallReturnLabel_5:
   \   000000A6   0x.... 0x....      BL       emberAfGetWakeTimeoutQsCallback
   \   000000AA   0x4602             MOV      R2,R0
   \   000000AC   0x.... 0x....      ADR.W    R1,`?<Constant "  Wake Timeout (qs): ...">`
   \   000000B0   0x.... 0x....      BL       ?Subroutine0
     80                  emberAfCoreFlush();
     81                  emberAfCorePrintln("  Wake Timeout Bitmask:         0x%4x",
     82                                     emberAfGetWakeTimeoutBitmaskCallback());
   \                     ??CrossCallReturnLabel_4:
   \   000000B4   0x.... 0x....      BL       emberAfGetWakeTimeoutBitmaskCallback
   \   000000B8   0x4602             MOV      R2,R0
   \   000000BA   0x.... 0x....      ADR.W    R1,`?<Constant "  Wake Timeout Bitmas...">`
   \   000000BE   0x.... 0x....      BL       ?Subroutine0
     83                  emberAfCoreFlush();
     84                  emberAfCorePrintln("  Current App Tasks:            0x%4x",
     85                                     emberAfGetCurrentAppTasksCallback());
   \                     ??CrossCallReturnLabel_3:
   \   000000C2   0x.... 0x....      BL       emberAfGetCurrentAppTasksCallback
   \   000000C6   0x4602             MOV      R2,R0
   \   000000C8   0x.... 0x....      ADR.W    R1,`?<Constant "  Current App Tasks: ...">`
   \   000000CC   0x.... 0x....      BL       ?Subroutine0
     86                  emberAfCorePrintln("  Current Poll Control          %p",
     87                                     pollControlStrings[emberAfGetCurrentPollControlCallback()]);
   \                     ??CrossCallReturnLabel_2:
   \   000000D0   0x.... 0x....      BL       emberAfGetCurrentPollControlCallback
   \   000000D4   0xF855 0x2020      LDR      R2,[R5, R0, LSL #+2]
   \   000000D8   0x.... 0x....      ADR.W    R1,`?<Constant "  Current Poll Contro...">`
   \   000000DC   0x.... 0x....      BL       ?Subroutine0
     88                  emberAfCoreFlush();
     89                  emberAfCorePrintln("  Default Poll Control          %p",
     90                                     pollControlStrings[emberAfGetDefaultPollControlCallback()]);
   \                     ??CrossCallReturnLabel_1:
   \   000000E0   0x.... 0x....      BL       emberAfGetDefaultPollControlCallback
   \   000000E4   0xF855 0x2020      LDR      R2,[R5, R0, LSL #+2]
   \   000000E8   0x.... 0x....      ADR.W    R1,`?<Constant "  Default Poll Contro...">`
   \   000000EC   0x.... 0x....      BL       ?Subroutine0
     91                  emberAfCoreFlush();
     92                  emberAfPopNetworkIndex();
   \                     ??CrossCallReturnLabel_0:
   \   000000F0   0x.... 0x....      BL       emberAfPopNetworkIndex
     93                }
     94              }
     95            }
   \                     ??emberAfPluginEndDeviceSupportStatusCommand_1:
   \   000000F4   0x1C64             ADDS     R4,R4,#+1
   \   000000F6   0x2C01             CMP      R4,#+1
   \   000000F8   0xDBAD             BLT.N    ??emberAfPluginEndDeviceSupportStatusCommand_0
     96          }
   \   000000FA   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberAfPrintln
     97          

   \                                 In section .text, align 2, keep-with-next
     98          void emberAfPluginEndDeviceSupportForceShortPollCommand(void)
     99          {
   \                     emberAfPluginEndDeviceSupportForceShortPollCommand:
   \   00000000   0xB580             PUSH     {R7,LR}
    100            boolean shortPoll = (boolean)emberUnsignedCommandArgument(0);
    101            if (shortPoll) {
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000008   0xB2C0             UXTB     R0,R0
   \   0000000A   0xB148             CBZ.N    R0,??emberAfPluginEndDeviceSupportForceShortPollCo_0
    102              emberAfCorePrintln("Forcing device to short poll");
   \   0000000C   0x.... 0x....      ADR.W    R1,`?<Constant "Forcing device to sho...">`
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       emberAfPrintln
    103              emberAfAddToCurrentAppTasksCallback(EMBER_AF_FORCE_SHORT_POLL);
   \   00000016   0x2080             MOVS     R0,#+128
   \   00000018   0xE8BD 0x4002      POP      {R1,LR}
   \   0000001C   0x.... 0x....      B.W      emberAfAddToCurrentAppTasksCallback
    104            } else {
    105              emberAfCorePrintln("Allowing device to long poll");
   \                     ??emberAfPluginEndDeviceSupportForceShortPollCo_0:
   \   00000020   0x.... 0x....      ADR.W    R1,`?<Constant "Allowing device to lo...">`
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x.... 0x....      BL       emberAfPrintln
    106              emberAfRemoveFromCurrentAppTasksCallback(EMBER_AF_FORCE_SHORT_POLL);
   \   0000002A   0x2080             MOVS     R0,#+128
   \   0000002C   0xE8BD 0x4002      POP      {R1,LR}
   \   00000030   0x.... 0x....      B.W      emberAfRemoveFromCurrentAppTasksCallback
    107            }
    108          }
    109          

   \                                 In section .text, align 2, keep-with-next
    110          void emberAfPluginEndDeviceSupportPollCompletedCallbackCommand(void)
    111          {
   \                     emberAfPluginEndDeviceSupportPollCompletedCallbackCommand:
   \   00000000   0xB580             PUSH     {R7,LR}
    112            emAfEnablePollCompletedCallback = (boolean)emberUnsignedCommandArgument(0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000008   0x....             LDR.N    R1,??DataTable22_2
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
    113          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   0x79 0x65          DC8      "yes"
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_1:
   \   00000000   0x6E 0x6F          DC8      0x6E, 0x6F, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_2:
   \   00000000   0x........         DC32     emAfEnablePollCompletedCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_3:
   \   00000000   0x........         DC32     pollControlStrings

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_4:
   \   00000000   0x........         DC32     emAfNetworks

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "EMBER_AF_LONG_POLL">`:
   \   00000000   0x45 0x4D          DC8 "EMBER_AF_LONG_POLL"
   \              0x42 0x45    
   \              0x52 0x5F    
   \              0x41 0x46    
   \              0x5F 0x4C    
   \              0x4F 0x4E    
   \              0x47 0x5F    
   \              0x50 0x4F    
   \              0x4C 0x4C    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "EMBER_AF_SHORT_POLL">`:
   \   00000000   0x45 0x4D          DC8 "EMBER_AF_SHORT_POLL"
   \              0x42 0x45    
   \              0x52 0x5F    
   \              0x41 0x46    
   \              0x5F 0x53    
   \              0x48 0x4F    
   \              0x52 0x54    
   \              0x5F 0x50    
   \              0x4F 0x4C    
   \              0x4C 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Primary (pro)">`:
   \   00000000   0x50 0x72          DC8 "Primary (pro)"
   \              0x69 0x6D    
   \              0x61 0x72    
   \              0x79 0x20    
   \              0x28 0x70    
   \              0x72 0x6F    
   \              0x29 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "yes">`:
   \   00000000   0x79 0x65          DC8 "yes"
   \              0x73 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "no">`:
   \   00000000   0x6E 0x6F          DC8 "no"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant {&"Primary (pro)"}>`:
   \   00000000   0x........         DC32 `?<Constant "Primary (pro)">`

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "End Device Poll Infor...">`:
   \   00000000   0x45 0x6E          DC8 "End Device Poll Information"
   \              0x64 0x20    
   \              0x44 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x50    
   \              0x6F 0x6C    
   \              0x6C 0x20    
   \              0x49 0x6E    
   \              0x66 0x6F    
   \              0x72 0x6D    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "EMBER_END_DEVICE_TIME...">`:
   \   00000000   0x45 0x4D          DC8 "EMBER_END_DEVICE_TIMEOUT:       %d"
   \              0x42 0x45    
   \              0x52 0x5F    
   \              0x45 0x4E    
   \              0x44 0x5F    
   \              0x44 0x45    
   \              0x56 0x49    
   \              0x43 0x45    
   \              0x5F 0x54    
   \              0x49 0x4D    
   \              0x45 0x4F    
   \              0x55 0x54    
   \              0x3A 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "EMBER_END_DEVICE_TIME...">_1`:
   \   00000000   0x45 0x4D          DC8 "EMBER_END_DEVICE_TIMEOUT_SHIFT: %d"
   \              0x42 0x45    
   \              0x52 0x5F    
   \              0x45 0x4E    
   \              0x44 0x5F    
   \              0x44 0x45    
   \              0x56 0x49    
   \              0x43 0x45    
   \              0x5F 0x54    
   \              0x49 0x4D    
   \              0x45 0x4F    
   \              0x55 0x54    
   \              0x5F 0x53    
   \              0x48 0x49    
   \              0x46 0x54    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Poll completed callba...">`:
   \   00000000   0x50 0x6F          DC8 "Poll completed callback: %p"
   \              0x6C 0x6C    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x70 0x6C    
   \              0x65 0x74    
   \              0x65 0x64    
   \              0x20 0x63    
   \              0x61 0x6C    
   \              0x6C 0x62    
   \              0x61 0x63    
   \              0x6B 0x3A    
   \              0x20 0x25    
   \              0x70 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "nwk %d [%p]">`:
   \   00000000   0x6E 0x77          DC8 "nwk %d [%p]"
   \              0x6B 0x20    
   \              0x25 0x64    
   \              0x20 0x5B    
   \              0x25 0x70    
   \              0x5D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  Current Poll Interv...">`:
   \   00000000   0x20 0x20          DC8 "  Current Poll Interval (qs):   %l"
   \              0x43 0x75    
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x50 0x6F    
   \              0x6C 0x6C    
   \              0x20 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x76 0x61    
   \              0x6C 0x20    
   \              0x28 0x71    
   \              0x73 0x29    
   \              0x3A 0x20    
   \              0x20 0x20    
   \              0x25 0x6C    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  Long Poll Interval ...">`:
   \   00000000   0x20 0x20          DC8 "  Long Poll Interval (qs):      %l"
   \              0x4C 0x6F    
   \              0x6E 0x67    
   \              0x20 0x50    
   \              0x6F 0x6C    
   \              0x6C 0x20    
   \              0x49 0x6E    
   \              0x74 0x65    
   \              0x72 0x76    
   \              0x61 0x6C    
   \              0x20 0x28    
   \              0x71 0x73    
   \              0x29 0x3A    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x25 0x6C    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  Short Poll Interval...">`:
   \   00000000   0x20 0x20          DC8 "  Short Poll Interval (qs):     %l"
   \              0x53 0x68    
   \              0x6F 0x72    
   \              0x74 0x20    
   \              0x50 0x6F    
   \              0x6C 0x6C    
   \              0x20 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x76 0x61    
   \              0x6C 0x20    
   \              0x28 0x71    
   \              0x73 0x29    
   \              0x3A 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x25 0x6C    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  Wake Timeout (qs): ...">`:
   \   00000000   0x20 0x20          DC8 "  Wake Timeout (qs):            %l"
   \              0x57 0x61    
   \              0x6B 0x65    
   \              0x20 0x54    
   \              0x69 0x6D    
   \              0x65 0x6F    
   \              0x75 0x74    
   \              0x20 0x28    
   \              0x71 0x73    
   \              0x29 0x3A    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x25 0x6C    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  Wake Timeout Bitmas...">`:
   \   00000000   0x20 0x20          DC8 "  Wake Timeout Bitmask:         0x%4x"
   \              0x57 0x61    
   \              0x6B 0x65    
   \              0x20 0x54    
   \              0x69 0x6D    
   \              0x65 0x6F    
   \              0x75 0x74    
   \              0x20 0x42    
   \              0x69 0x74    
   \              0x6D 0x61    
   \              0x73 0x6B    
   \              0x3A 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x34    
   \              0x78 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  Current App Tasks: ...">`:
   \   00000000   0x20 0x20          DC8 "  Current App Tasks:            0x%4x"
   \              0x43 0x75    
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x41 0x70    
   \              0x70 0x20    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x73 0x3A    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x34    
   \              0x78 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  Current Poll Contro...">`:
   \   00000000   0x20 0x20          DC8 "  Current Poll Control          %p"
   \              0x43 0x75    
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x50 0x6F    
   \              0x6C 0x6C    
   \              0x20 0x43    
   \              0x6F 0x6E    
   \              0x74 0x72    
   \              0x6F 0x6C    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x25 0x70    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  Default Poll Contro...">`:
   \   00000000   0x20 0x20          DC8 "  Default Poll Control          %p"
   \              0x44 0x65    
   \              0x66 0x61    
   \              0x75 0x6C    
   \              0x74 0x20    
   \              0x50 0x6F    
   \              0x6C 0x6C    
   \              0x20 0x43    
   \              0x6F 0x6E    
   \              0x74 0x72    
   \              0x6F 0x6C    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x25 0x70    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Forcing device to sho...">`:
   \   00000000   0x46 0x6F          DC8 "Forcing device to short poll"
   \              0x72 0x63    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x73 0x68    
   \              0x6F 0x72    
   \              0x74 0x20    
   \              0x70 0x6F    
   \              0x6C 0x6C    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Allowing device to lo...">`:
   \   00000000   0x41 0x6C          DC8 "Allowing device to long poll"
   \              0x6C 0x6F    
   \              0x77 0x69    
   \              0x6E 0x67    
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x20    
   \              0x74 0x6F    
   \              0x20 0x6C    
   \              0x6F 0x6E    
   \              0x67 0x20    
   \              0x70 0x6F    
   \              0x6C 0x6C    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  emberAfPluginEndDeviceSupportForceShortPollCommand
              0 -> emberAfAddToCurrentAppTasksCallback
              8 -> emberAfPrintln
              0 -> emberAfRemoveFromCurrentAppTasksCallback
              8 -> emberUnsignedCommandArgument
        8  emberAfPluginEndDeviceSupportPollCompletedCallbackCommand
              8 -> emberUnsignedCommandArgument
       40  emberAfPluginEndDeviceSupportStatusCommand
             40 -> emberAfGetCurrentAppTasksCallback
             40 -> emberAfGetCurrentPollControlCallback
             40 -> emberAfGetCurrentPollIntervalQsCallback
             40 -> emberAfGetDefaultPollControlCallback
             40 -> emberAfGetLongPollIntervalQsCallback
             40 -> emberAfGetShortPollIntervalQsCallback
             40 -> emberAfGetWakeTimeoutBitmaskCallback
             40 -> emberAfGetWakeTimeoutQsCallback
             40 -> emberAfPopNetworkIndex
             40 -> emberAfPrintln
             40 -> emberAfPushNetworkIndex


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      40  ?<Constant "  Current App Tasks: ...">
      36  ?<Constant "  Current Poll Contro...">
      36  ?<Constant "  Current Poll Interv...">
      36  ?<Constant "  Default Poll Contro...">
      36  ?<Constant "  Long Poll Interval ...">
      36  ?<Constant "  Short Poll Interval...">
      36  ?<Constant "  Wake Timeout (qs): ...">
      40  ?<Constant "  Wake Timeout Bitmas...">
      32  ?<Constant "Allowing device to lo...">
      20  ?<Constant "EMBER_AF_LONG_POLL">
      20  ?<Constant "EMBER_AF_SHORT_POLL">
      36  ?<Constant "EMBER_END_DEVICE_TIME...">
      36  ?<Constant "EMBER_END_DEVICE_TIME...">_1
      28  ?<Constant "End Device Poll Infor...">
      32  ?<Constant "Forcing device to sho...">
      28  ?<Constant "Poll completed callba...">
      16  ?<Constant "Primary (pro)">
       4  ?<Constant "no">
      12  ?<Constant "nwk %d [%p]">
       4  ?<Constant "yes">
       4  ?<Constant {&"Primary (pro)"}>
       4  ??DataTable22
       4  ??DataTable22_1
       4  ??DataTable22_2
       4  ??DataTable22_3
       4  ??DataTable22_4
       6  ?Subroutine0
      52  emberAfPluginEndDeviceSupportForceShortPollCommand
      14  emberAfPluginEndDeviceSupportPollCompletedCallbackCommand
     254  emberAfPluginEndDeviceSupportStatusCommand
       8  pollControlStrings

 
   8 bytes in section .data
  64 bytes in section .rodata
 850 bytes in section .text
 
 850 bytes of CODE  memory
  64 bytes of CONST memory
   8 bytes of DATA  memory

Errors: none
Warnings: none
