###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.2.53884/W32 for ARM     04/Feb/2015  16:38:12 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\cli\secur #
#                    ity-cli.c                                                #
#    Command line =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\cli\secur #
#                    ity-cli.c -D "GENERATED_TOKEN_HEADER=\"app/builder/DoorS #
#                    ensor_SM6011/DoorSensor_SM6011_tokens.h\"" -D            #
#                    "ZA_GENERATED_HEADER=\"app/builder/DoorSensor_SM6011/Doo #
#                    rSensor_SM6011.h\"" -D LOCAL_STORAGE_BTL -D              #
#                    "BOARD_HEADER=\"app\builder\DoorSensor_SM6011\DoorSensor #
#                    _SM6011_board.h\"" -D "PLATFORM_HEADER=\"hal/micro/corte #
#                    xm3/compiler/iar.h\"" -D CORTEXM3 -D                     #
#                    CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3585 -D PHY_EM3XX -D  #
#                    "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\ #
#                    "" -D "CONFIGURATION_HEADER=\"app/framework/util/config. #
#                    h\"" -D "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/D #
#                    oorSensor_SM6011/DoorSensor_SM6011_endpoint_config.h\""  #
#                    -D "__SOURCEFILE__=\"security-cli.c\"" -lC               #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \ --diag_suppress Pa050 -o C:\Ember\EmberZNet5.3.0-GA\em #
#                    35x\build\DoorSensor_SM6011\ --debug --endian=little     #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\cli\ -I   #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\ #
#                    DoorSensor_SM6011\..\..\..\ -I                           #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\app\framework\include\ -I                #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app #
#                    \builder\DoorSensor_SM6011\..\..\..\stack\ -I            #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\hal\ -I C:\Ember\EmberZNet5.3.0-GA\em35x #
#                    \app\builder\DoorSensor_SM6011\..\..\..\hal\..\ -Ohz     #
#                    --use_c++_inline                                         #
#    List file    =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \security-cli.lst                                        #
#    Object file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \security-cli.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\cli\security-cli.c
      1          // File: ha-security-cli.c
      2          //
      3          // Routines to initiate Key establishment, handle key establishment callbacks,
      4          // and print info about the security keys on the device.
      5          //
      6          // Author(s): Rob Alexander <ralexander@ember.com>
      7          //
      8          // Copyright 2008 by Ember Corporation.  All rights reserved.               *80*
      9          
     10          #include "app/framework/util/common.h"
     11          
     12          #include "app/framework/util/service-discovery.h"
     13          
     14          #include "app/util/serial/command-interpreter2.h"
     15          #include "app/framework/cli/security-cli.h"
     16          #include "app/framework/util/af-main.h"
     17          
     18          #include "app/framework/security/af-security.h"
     19          
     20          
     21          //------------------------------------------------------------------------------
     22          // Globals
     23          

   \                                 In section .data, align 4
     24          EmberKeyData cliPreconfiguredLinkKey = DUMMY_KEY;
   \                     cliPreconfiguredLinkKey:
   \   00000000   0xFF 0xFF          DC8 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF         
   \   0000000D   0xFF 0xFF          DC8 255, 255, 255
   \              0xFF         
     25          EmberKeyData cliNetworkKey           = DUMMY_KEY;
   \                     cliNetworkKey:
   \   00000010   0xFF 0xFF          DC8 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF         
   \   0000001D   0xFF 0xFF          DC8 255, 255, 255
   \              0xFF         
     26          
     27          
     28          /**
     29           * @addtogroup cli
     30           * @{
     31           */
     32          /**
     33           * @brief Commands used to change the default link or network key
     34           *        that will be used when forming or joining a network.
     35           *
     36           *        <b>changekey link &lt;key&gt;</b>
     37           *        - key - 16 byte array. The Link Key provided as a 
     38           *          16 byte array.
     39           * 
     40           *        <b>changekey network &lt;key&gt;</b>
     41           *        - key - 16 byte array. The Network Key provided
     42           *          as a 16 byte array.
     43           *
     44           */
     45          #define EMBER_AF_DOXYGEN_CLI__SECURITY_CHANGEKEY_COMMANDS
     46          /** @} END addtogroup */
     47          
     48          /**
     49           * @addtogroup cli
     50           * @{
     51           */
     52          /**
     53           * @brief Command used for key establishment.
     54           *
     55           *        <b>cbke start &lt;new partner id&gt; &lt;destination endpoint&gt;</b>
     56           *        - new partner id - int16u. The 2 byte node id of the partner
     57           *          with whom to start cbke.
     58           *
     59           *        <b>cbke interpan &lt;pan id&gt; &lt;eui64&gt;</b>
     60           *        - pan id - int16u. The 2 byte pan id of the partner with whom to start
     61           *          cbke.
     62           *        - eui64 - EmberEUI64. The 8 byte EUI64 of the partner with whom to
     63           *          start cbke.
     64           *
     65           *        <b>cbke partner &lt;node id&gt; &lt;endpoint&gt;</b>
     66           *        - node id - int16u. The two byte node id of the device
     67           *          with whom to initiate key establishment.
     68           *        - endpoint - int8u. The endpoint on which to begin
     69           *          key establishment.
     70           *
     71           */
     72          #define EMBER_AF_DOXYGEN_CLI__SECURITY_CBKE_COMMANDS
     73          /** @} END addtogroup */
     74          
     75          #ifndef EMBER_AF_GENERATE_CLI
     76          
     77          EmberCommandEntry changeKeyCommands[] = {
     78            {"link", changeKeyCommand, "b"},
     79            {"network", changeKeyCommand, "b"},
     80            { NULL }
     81          };
     82          
     83          #endif // EMBER_AF_GENERATE_CLI
     84          
     85          /**
     86           * @addtogroup security
     87           * @{
     88           */
     89          /** @brief Commands used for security
     90           *
     91           * <b>security mfg-token get</b>
     92           * <b>security mfg-token set &lt;Magic number&gt; &lt;EmberKeySettings value&gt;</b>
     93           *   - Magic number - int32u.  The 4-byte magic number 
     94           *     EMBER_MFG_SECURITY_CONFIG_MAGIC_NUMBER to prevent accidental execution.
     95           *   - EmberKeySettings value - int16u.  The 2-byte value for EmberKeySettings
     96           *     indicating key permissions.
     97           *
     98           */ 
     99          #define EMBER_AF_DOXYGEN_CLI__SECURITY_MFG_TOKEN_COMMANDS
    100          /** @} END addtogroup */
    101          
    102          #if !defined(XAP2B)
    103          void getSetMfgToken(void);
    104          

   \                                 In section .rodata, align 4, keep-with-next
    105          EmberCommandEntry mfgToken[] = {
   \                     mfgToken:
   \   00000000   0x........         DC32 `?<Constant "get">`, getSetMfgToken, `?<Constant "">`
   \              0x........   
   \              0x........   
   \   0000000C   0x........         DC32 `?<Constant "Print the MFG securit...">`, 0H, `?<Constant "set">`
   \              0x00000000   
   \              0x........   
   \   00000018   0x........         DC32 getSetMfgToken, `?<Constant "wv">`
   \              0x........   
   \   00000020   0x........         DC32 `?<Constant "Set the MFG Security ...">`, 0H, 0H, 0H, 0H, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
    106            emberCommandEntryAction("get", getSetMfgToken, "",
    107                                    "Print the MFG security config token"),
    108            emberCommandEntryAction("set", getSetMfgToken, "wv",
    109                                    "Set the MFG Security config token.  CANNOT BE UNSET BY CLI."),
    110            emberCommandEntryTerminator(),
    111          };
    112          #endif
    113          

   \                                 In section .rodata, align 4, keep-with-next
    114          EmberCommandEntry emAfSecurityCommands[] = {
   \                     emAfSecurityCommands:
   \   00000000   0x........         DC32 `?<Constant "mfg-token">`, 0H, mfgToken
   \              0x00000000   
   \              0x........   
   \   0000000C   0x........         DC32 `?<Constant "Get/set the MFG Secur...">`, 0H, 0H, 0H, 0H, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
    115          
    116          #if !defined(XAP2B)
    117            emberCommandEntrySubMenu("mfg-token", mfgToken, 
    118                                     "Get/set the MFG Security config token"),
    119          #endif
    120            emberCommandEntryTerminator(),
    121          };
    122          
    123          //------------------------------------------------------------------------------
    124          // Forward Declarations
    125          
    126          int8u printKeyTable(boolean preconfiguredKey);
    127          int32u getOutgoingApsFrameCounter(void);
    128          
    129          //------------------------------------------------------------------------------
    130          
    131          // ******************************************************
    132          // changekey link    <16 byte key>
    133          // changekey network <16 byte key>
    134          // ******************************************************
    135          
    136          // Changes the default link or network key that will be used when
    137          // forming or joining a network.  

   \                                 In section .text, align 2, keep-with-next
    138          void changeKeyCommand(void) 
    139          {
   \                     changeKeyCommand:
   \   00000000   0xB580             PUSH     {R7,LR}
    140            if (EMBER_NO_NETWORK != emberNetworkState()) {
   \   00000002   0x.... 0x....      BL       emberNetworkState
   \   00000006   0xB140             CBZ.N    R0,??changeKeyCommand_0
    141              emberAfCorePrintln("%pstack must be down.", "ERROR: ");
   \   00000008   0x.... 0x....      ADR.W    R2,`?<Constant "ERROR: ">`
   \   0000000C   0x.... 0x....      ADR.W    R1,`?<Constant "%pstack must be down.">`
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0xE8BD 0x4008      POP      {R3,LR}
   \   00000016   0x.... 0x....      B.W      emberAfPrintln
    142            } else {
    143              emberCopyKeyArgument(0, 
    144                                   emberCurrentCommand->name[0] == 'l'
    145                                   ? &cliPreconfiguredLinkKey
    146                                   : &cliNetworkKey);
   \                     ??changeKeyCommand_0:
   \   0000001A   0x....             LDR.N    R1,??DataTable35
   \   0000001C   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_4:
   \   00000020   0x286C             CMP      R0,#+108
   \   00000022   0xBF18             IT       NE 
   \   00000024   0x3110             ADDNE    R1,R1,#+16
   \   00000026   0x2301             MOVS     R3,#+1
   \   00000028   0x2210             MOVS     R2,#+16
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       emberCopyStringArgument
    147              emberAfDebugPrintln("set key");
   \   00000030   0x.... 0x....      ADR.W    R1,`?<Constant "set key">`
   \   00000034   0x2002             MOVS     R0,#+2
   \   00000036   0xE8BD 0x4004      POP      {R2,LR}
   \   0000003A   0x.... 0x....      B.W      emberAfPrintln
    148            }
    149          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   0x....             LDR.N    R0,??DataTable35_1
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x4770             BX       LR
    150          
    151          // Key Establishment commands (cbke <command>) moved to 
    152          //   app/framework/plugin/key-establishment/key-establishment-cli.c
    153          
    154          

   \                                 In section .text, align 2, keep-with-next
    155          void printKeyInfo(void)
    156          {
   \                     printKeyInfo:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    157            int8u entriesUsed;
    158            EmberKeyStruct nwkKey;
    159          
    160          #if !defined(XAP2B)
    161            {
    162              EmberMfgSecurityStruct config;
    163              if (EMBER_SUCCESS == emberGetMfgSecurityConfig(&config)) {
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x.... 0x....      BL       emberGetMfgSecurityConfig
   \   0000000A   0xB940             CBNZ.N   R0,??printKeyInfo_0
    164                if (!(config.keySettings & EMBER_KEY_PERMISSIONS_READING_ALLOWED)) {
   \   0000000C   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000010   0x07C0             LSLS     R0,R0,#+31
   \   00000012   0xD404             BMI.N    ??printKeyInfo_0
    165                  emberAfCorePrintln("\nWARNING:  READING OF KEY VALUES DISABLED BY MFG TOKEN\n");
   \   00000014   0x.... 0x....      ADR.W    R1,`?<Constant "\\nWARNING:  READING OF...">`
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       emberAfPrintln
    166                  emberAfCoreFlush();
    167                }
    168              }
    169            }
    170          #endif
    171          
    172            if ( EMBER_SUCCESS != emberGetKey(EMBER_CURRENT_NETWORK_KEY,
    173                                              &nwkKey)) {
   \                     ??printKeyInfo_0:
   \   0000001E   0xA901             ADD      R1,SP,#+4
   \   00000020   0x2003             MOVS     R0,#+3
   \   00000022   0x.... 0x....      BL       emberGetKey
   \   00000026   0xB120             CBZ.N    R0,??printKeyInfo_1
    174              MEMSET((int8u*)&nwkKey, 0xFF, sizeof(EmberKeyStruct));
   \   00000028   0x2228             MOVS     R2,#+40
   \   0000002A   0x21FF             MOVS     R1,#+255
   \   0000002C   0xA801             ADD      R0,SP,#+4
   \   0000002E   0x.... 0x....      BL       halCommonMemSet
    175            }
    176            emberAfCorePrintln("%p out FC: %4x",
    177                               "NWK Key",
    178                               nwkKey.outgoingFrameCounter);
   \                     ??printKeyInfo_1:
   \   00000032   0x.... 0x....      ADR.W    R4,`?<Constant "%p out FC: %4x">`
   \   00000036   0x.... 0x....      ADR.W    R5,`?<Constant "NWK Key">`
   \   0000003A   0x9B06             LDR      R3,[SP, #+24]
   \   0000003C   0x.... 0x....      BL       ?Subroutine0
    179            emberAfCorePrintln("%p seq num: 0x%x",  
    180                               "NWK Key",
    181                               nwkKey.sequenceNumber);
   \                     ??CrossCallReturnLabel_3:
   \   00000040   0xF89D 0x3020      LDRB     R3,[SP, #+32]
   \   00000044   0x462A             MOV      R2,R5
   \   00000046   0x.... 0x....      ADR.W    R1,`?<Constant "%p seq num: 0x%x">`
   \   0000004A   0x.... 0x....      BL       ??Subroutine0_0
    182            emberAfCorePrint("%p: ", 
    183                             "NWK Key");
   \                     ??CrossCallReturnLabel_1:
   \   0000004E   0x462A             MOV      R2,R5
   \   00000050   0x.... 0x....      ADR.W    R1,`?<Constant "%p: ">`
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0x.... 0x....      BL       emberAfPrint
    184            emberAfPrintZigbeeKey(emberKeyContents(&nwkKey.key));
   \   0000005A   0xF10D 0x0007      ADD      R0,SP,#+7
   \   0000005E   0x.... 0x....      BL       printZigbeeKey
    185            
    186            
    187            emberAfCorePrintln("%p out FC: %4x",
    188                               "Link Key",
    189                               getOutgoingApsFrameCounter());
   \   00000062   0x.... 0x....      BL       getOutgoingApsFrameCounter
   \   00000066   0x.... 0x....      ADR.W    R5,`?<Constant "Link Key">`
   \   0000006A   0x4603             MOV      R3,R0
   \   0000006C   0x.... 0x....      BL       ?Subroutine0
    190            
    191            emberAfCorePrintln("TC %p", "Link Key");
   \                     ??CrossCallReturnLabel_2:
   \   00000070   0x462A             MOV      R2,R5
   \   00000072   0x.... 0x....      ADR.W    R1,`?<Constant "TC %p">`
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0x.... 0x....      BL       emberAfPrintln
    192            emberAfCoreFlush();
    193            printKeyTable(TRUE);
   \   0000007C   0x2001             MOVS     R0,#+1
   \   0000007E   0x.... 0x....      BL       printKeyTable
    194            
    195            emberAfCorePrintln( "%p Table", "Link Key");
   \   00000082   0x462A             MOV      R2,R5
   \   00000084   0x.... 0x....      ADR.W    R1,`?<Constant "%p Table">`
   \   00000088   0x2001             MOVS     R0,#+1
   \   0000008A   0x.... 0x....      BL       emberAfPrintln
    196            emberAfCoreFlush();
    197            entriesUsed = printKeyTable(FALSE);
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x.... 0x....      BL       printKeyTable
   \   00000094   0x4604             MOV      R4,R0
    198            
    199            emberAfCorePrintln("%d/%d entries used.", 
    200                               entriesUsed,
    201                               emberAfGetKeyTableSize());
   \   00000096   0x.... 0x....      BL       emberAfGetKeyTableSize
   \   0000009A   0x4603             MOV      R3,R0
   \   0000009C   0x4622             MOV      R2,R4
   \   0000009E   0x.... 0x....      ADR.W    R1,`?<Constant "%d/%d entries used.">`
   \   000000A2   0x.... 0x....      BL       ??Subroutine0_0
    202            emberAfCoreFlush();
    203          }
   \                     ??CrossCallReturnLabel_0:
   \   000000A6   0xB00B             ADD      SP,SP,#+44
   \   000000A8   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   0x462A             MOV      R2,R5
   \   00000002   0x4621             MOV      R1,R4
   \                     ??Subroutine0_0:
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x.... 0x....      B.W      emberAfPrintln
    204          

   \                                 In section .text, align 2, keep-with-next
    205          int8u printKeyTable(boolean preconfiguredKey)
    206          {
   \                     printKeyTable:
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB08C             SUB      SP,SP,#+48
   \   00000006   0x4604             MOV      R4,R0
    207            int8u i;
    208            int8u entriesUsed = 0;
   \   00000008   0x2500             MOVS     R5,#+0
    209            int8u loopCount = (preconfiguredKey ? 1 : emberAfGetKeyTableSize());
   \   0000000A   0x2C00             CMP      R4,#+0
   \   0000000C   0xBF14             ITE      NE 
   \   0000000E   0x2001             MOVNE    R0,#+1
   \   00000010   0x.... 0x....      BLEQ     emberAfGetKeyTableSize
   \   00000014   0x9000             STR      R0,[SP, #+0]
    210          
    211            emberAfDebugPrintln( "Index IEEE Address         In FC     Type  Auth  Key");
   \   00000016   0x.... 0x....      ADR.W    R1,`?<Constant "Index IEEE Address   ...">`
   \   0000001A   0x2002             MOVS     R0,#+2
   \   0000001C   0x.... 0x....      BL       emberAfPrintln
    212          
    213            for ( i = 0; i < loopCount; i++ ) {
   \   00000020   0x2700             MOVS     R7,#+0
   \   00000022   0x.... 0x....      ADR.W    R6,`?<Constant "%c     %c     ">`
   \   00000026   0x.... 0x....      ADR.W    R10,`?<Constant "  %4x  ">`
   \   0000002A   0x.... 0x....      ADR.W    R8,`?<Constant "%d     ">`
   \   0000002E   0x.... 0x....      ADR.W    R9,`?<Constant "-     ">`
   \   00000032   0xE009             B.N      ??printKeyTable_0
    214              EmberKeyStruct entry;
    215          
    216              if (preconfiguredKey) {
    217                i = 0xFE; // last
    218          
    219                // Try to get whatever key type is stored in the preconfigured key slot.
    220                if ( (EMBER_SUCCESS !=
    221                      emberGetKey(EMBER_TRUST_CENTER_MASTER_KEY, &entry))
    222                     && (EMBER_SUCCESS
    223                         != emberGetKey(EMBER_TRUST_CENTER_LINK_KEY, &entry)) ) {
    224                  continue;
    225                }
    226              } else if ( EMBER_SUCCESS != emberGetKeyTableEntry(i, &entry) )
    227                continue;
    228          
    229              if (!preconfiguredKey) {
    230                emberAfCorePrint("%d     ", i);
    231              } else {
    232                emberAfCorePrint("-     ");
    233              }
    234              emberAfCoreDebugExec(emberAfPrintBigEndianEui64(entry.partnerEUI64));
    235              emberAfCorePrint("  %4x  ", entry.incomingFrameCounter);
    236              emberAfCorePrint("%c     %c     ",
    237                            (( entry.type == EMBER_APPLICATION_MASTER_KEY
    238                               || entry.type == EMBER_TRUST_CENTER_MASTER_KEY )
    239                             ? 'M'
    240                             : 'L' ),
    241                            ( entry.bitmask & EMBER_KEY_IS_AUTHORIZED 
    242                              ? 'y'
    243                              : 'n' ));
   \                     ??printKeyTable_1:
   \   00000034   0x4631             MOV      R1,R6
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x.... 0x....      BL       emberAfPrint
    244              
    245              emberAfPrintZigbeeKey(emberKeyContents(&(entry.key)));
   \   0000003C   0xF10D 0x0007      ADD      R0,SP,#+7
   \   00000040   0x.... 0x....      BL       printZigbeeKey
    246          
    247              emberAfCoreFlush();
    248              entriesUsed++;
   \   00000044   0x1C6D             ADDS     R5,R5,#+1
   \                     ??printKeyTable_2:
   \   00000046   0x1C7F             ADDS     R7,R7,#+1
   \                     ??printKeyTable_0:
   \   00000048   0xB2FF             UXTB     R7,R7
   \   0000004A   0x9800             LDR      R0,[SP, #+0]
   \   0000004C   0x4287             CMP      R7,R0
   \   0000004E   0xDA38             BGE.N    ??printKeyTable_3
   \   00000050   0xB31C             CBZ.N    R4,??printKeyTable_4
   \   00000052   0x27FE             MOVS     R7,#+254
   \   00000054   0xA901             ADD      R1,SP,#+4
   \   00000056   0x2002             MOVS     R0,#+2
   \   00000058   0x.... 0x....      BL       emberGetKey
   \   0000005C   0xB128             CBZ.N    R0,??printKeyTable_5
   \   0000005E   0xA901             ADD      R1,SP,#+4
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x.... 0x....      BL       emberGetKey
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD1ED             BNE.N    ??printKeyTable_2
   \                     ??printKeyTable_5:
   \   0000006A   0x4649             MOV      R1,R9
   \   0000006C   0x2001             MOVS     R0,#+1
   \   0000006E   0x.... 0x....      BL       emberAfPrint
   \                     ??printKeyTable_6:
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0x.... 0x....      BL       emberAfPrintEnabled
   \   00000078   0xB118             CBZ.N    R0,??printKeyTable_7
   \   0000007A   0xF10D 0x0021      ADD      R0,SP,#+33
   \   0000007E   0x.... 0x....      BL       emberAfPrintBigEndianEui64
   \                     ??printKeyTable_7:
   \   00000082   0x9A07             LDR      R2,[SP, #+28]
   \   00000084   0x4651             MOV      R1,R10
   \   00000086   0x2001             MOVS     R0,#+1
   \   00000088   0x.... 0x....      BL       emberAfPrint
   \   0000008C   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000090   0x06C0             LSLS     R0,R0,#+27
   \   00000092   0xBF4C             ITE      MI 
   \   00000094   0x2379             MOVMI    R3,#+121
   \   00000096   0x236E             MOVPL    R3,#+110
   \   00000098   0xE00B             B.N      ??printKeyTable_8
   \                     ??printKeyTable_4:
   \   0000009A   0xA901             ADD      R1,SP,#+4
   \   0000009C   0x4638             MOV      R0,R7
   \   0000009E   0x.... 0x....      BL       emberGetKeyTableEntry
   \   000000A2   0x2800             CMP      R0,#+0
   \   000000A4   0xD1CF             BNE.N    ??printKeyTable_2
   \   000000A6   0x463A             MOV      R2,R7
   \   000000A8   0x4641             MOV      R1,R8
   \   000000AA   0x2001             MOVS     R0,#+1
   \   000000AC   0x.... 0x....      BL       emberAfPrint
   \   000000B0   0xE7DF             B.N      ??printKeyTable_6
    249            }
   \                     ??printKeyTable_8:
   \   000000B2   0xF89D 0x0006      LDRB     R0,[SP, #+6]
   \   000000B6   0x2806             CMP      R0,#+6
   \   000000B8   0xBF16             ITET     NE 
   \   000000BA   0x2802             CMPNE    R0,#+2
   \   000000BC   0x224D             MOVEQ    R2,#+77
   \   000000BE   0x224C             MOVNE    R2,#+76
   \   000000C0   0xE7B8             B.N      ??printKeyTable_1
    250          
    251            return entriesUsed;
   \                     ??printKeyTable_3:
   \   000000C2   0xB2E8             UXTB     R0,R5
   \   000000C4   0xB00C             ADD      SP,SP,#+48
   \   000000C6   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    252          }
    253          

   \                                 In section .text, align 2, keep-with-next
    254          int32u getOutgoingApsFrameCounter(void)
    255          {
   \                     getOutgoingApsFrameCounter:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    256            EmberKeyStruct entry;
    257            if (emberGetKey(EMBER_TRUST_CENTER_MASTER_KEY, &entry) != EMBER_SUCCESS
    258                && emberGetKey(EMBER_TRUST_CENTER_LINK_KEY, &entry) != EMBER_SUCCESS) {
   \   00000004   0xA900             ADD      R1,SP,#+0
   \   00000006   0x2002             MOVS     R0,#+2
   \   00000008   0x.... 0x....      BL       emberGetKey
   \   0000000C   0xB138             CBZ.N    R0,??getOutgoingApsFrameCounter_0
   \   0000000E   0xA900             ADD      R1,SP,#+0
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       emberGetKey
   \   00000016   0xB110             CBZ.N    R0,??getOutgoingApsFrameCounter_0
    259              return 0xFFFFFFFFUL;
   \   00000018   0xF04F 0x30FF      MOV      R0,#-1
   \   0000001C   0xE000             B.N      ??getOutgoingApsFrameCounter_1
    260            }
    261            return entry.outgoingFrameCounter;
   \                     ??getOutgoingApsFrameCounter_0:
   \   0000001E   0x9805             LDR      R0,[SP, #+20]
   \                     ??getOutgoingApsFrameCounter_1:
   \   00000020   0xB00B             ADD      SP,SP,#+44
   \   00000022   0xBD00             POP      {PC}             ;; return
    262          }
    263          
    264          #if !defined(XAP2B)

   \                                 In section .text, align 2, keep-with-next
    265          void getSetMfgToken(void)
    266          {
   \                     getSetMfgToken:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    267            EmberMfgSecurityStruct config;
    268            EmberStatus status;
    269          
    270            if (emberCurrentCommand->name[0] == 'g') {
   \   00000004   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_5:
   \   00000008   0x2867             CMP      R0,#+103
   \   0000000A   0xD124             BNE.N    ??getSetMfgToken_0
    271              status = emberGetMfgSecurityConfig(&config);
   \   0000000C   0xA800             ADD      R0,SP,#+0
   \   0000000E   0x.... 0x....      BL       emberGetMfgSecurityConfig
   \   00000012   0x0004             MOVS     R4,R0
    272              if (status == EMBER_SUCCESS) {
   \   00000014   0xD118             BNE.N    ??getSetMfgToken_1
    273                emberAfSecurityPrintln("EmberKeySettings: 0x%2X", config.keySettings);
   \   00000016   0xF8BD 0x2000      LDRH     R2,[SP, #+0]
   \   0000001A   0x.... 0x....      ADR.W    R1,`?<Constant "EmberKeySettings: 0x%2X">`
   \   0000001E   0x2008             MOVS     R0,#+8
   \   00000020   0x.... 0x....      BL       emberAfPrintln
    274                emberAfSecurityPrintln("  Permissions: %p", 
    275                                       ((config.keySettings & EMBER_KEY_PERMISSIONS_READING_ALLOWED)
    276                                        ? "Reading Allowed"
    277                                        : ((config.keySettings & EMBER_KEY_PERMISSIONS_HASHING_ALLOWED)
    278                                           ? "Hashing only"
    279                                           : "NONE")));
   \   00000024   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000028   0x07C0             LSLS     R0,R0,#+31
   \   0000002A   0xBF48             IT       MI 
   \   0000002C   0x.... 0x....      ADRMI.W  R2,`?<Constant "Reading Allowed">`
   \   00000030   0xD407             BMI.N    ??getSetMfgToken_2
   \   00000032   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000036   0x0780             LSLS     R0,R0,#+30
   \   00000038   0xBF4C             ITE      MI 
   \   0000003A   0x.... 0x....      ADRMI.W  R2,`?<Constant "Hashing only">`
   \   0000003E   0x.... 0x....      ADRPL.W  R2,`?<Constant "NONE">`
   \                     ??getSetMfgToken_2:
   \   00000042   0x.... 0x....      ADR.W    R1,`?<Constant "  Permissions: %p">`
   \   00000046   0xE018             B.N      ??getSetMfgToken_3
    280              } else {
    281                emberAfSecurityPrintln("Error: Failed to get config, status: 0x%X", status);
   \                     ??getSetMfgToken_1:
   \   00000048   0x4622             MOV      R2,R4
   \   0000004A   0x.... 0x....      ADR.W    R1,`?<Constant "Error: Failed to get ...">`
   \   0000004E   0x2008             MOVS     R0,#+8
   \   00000050   0x.... 0x....      BL       emberAfPrintln
   \   00000054   0xE00E             B.N      ??getSetMfgToken_4
    282              }
    283            } else {
    284              int32u magicNumber = emberUnsignedCommandArgument(0);
   \                     ??getSetMfgToken_0:
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   0000005C   0x4604             MOV      R4,R0
    285              config.keySettings = (EmberKeySettings)emberUnsignedCommandArgument(1);
   \   0000005E   0x2001             MOVS     R0,#+1
   \   00000060   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000064   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    286              status = emberSetMfgSecurityConfig(magicNumber, &config);
   \   00000068   0xA900             ADD      R1,SP,#+0
   \   0000006A   0x4620             MOV      R0,R4
   \   0000006C   0x.... 0x....      BL       emberSetMfgSecurityConfig
   \   00000070   0x0004             MOVS     R4,R0
    287            }
    288          
    289            if (status != EMBER_SUCCESS) {
   \   00000072   0xD005             BEQ.N    ??getSetMfgToken_5
    290              emberAfSecurityPrintln("Failed: 0x%X", status);
   \                     ??getSetMfgToken_4:
   \   00000074   0x4622             MOV      R2,R4
   \   00000076   0x.... 0x....      ADR.W    R1,`?<Constant "Failed: 0x%X">`
   \                     ??getSetMfgToken_3:
   \   0000007A   0x2008             MOVS     R0,#+8
   \   0000007C   0x.... 0x....      BL       emberAfPrintln
    291            }
    292          }
   \                     ??getSetMfgToken_5:
   \   00000080   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35:
   \   00000000   0x........         DC32     cliPreconfiguredLinkKey

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_1:
   \   00000000   0x........         DC32     emberCurrentCommand

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%pstack must be down.">`:
   \   00000000   0x25 0x70          DC8 "%pstack must be down."
   \              0x73 0x74    
   \              0x61 0x63    
   \              0x6B 0x20    
   \              0x6D 0x75    
   \              0x73 0x74    
   \              0x20 0x62    
   \              0x65 0x20    
   \              0x64 0x6F    
   \              0x77 0x6E    
   \              0x2E 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "ERROR: ">`:
   \   00000000   0x45 0x52          DC8 "ERROR: "
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "get">`:
   \   00000000   0x67 0x65          DC8 "get"
   \              0x74 0x00    

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000   0x00               DC8 ""

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Print the MFG securit...">`:
   \   00000000   0x50 0x72          DC8 "Print the MFG security config token"
   \              0x69 0x6E    
   \              0x74 0x20    
   \              0x74 0x68    
   \              0x65 0x20    
   \              0x4D 0x46    
   \              0x47 0x20    
   \              0x73 0x65    
   \              0x63 0x75    
   \              0x72 0x69    
   \              0x74 0x79    
   \              0x20 0x63    
   \              0x6F 0x6E    
   \              0x66 0x69    
   \              0x67 0x20    
   \              0x74 0x6F    
   \              0x6B 0x65    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "set key">`:
   \   00000000   0x73 0x65          DC8 "set key"
   \              0x74 0x20    
   \              0x6B 0x65    
   \              0x79 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nWARNING:  READING OF...">`:
   \   00000000   0x0A 0x57          DC8 0AH, 57H, 41H, 52H, 4EH, 49H, 4EH, 47H
   \              0x41 0x52    
   \              0x4E 0x49    
   \              0x4E 0x47    
   \   00000008   0x3A 0x20          DC8 3AH, 20H, 20H, 52H, 45H, 41H, 44H, 49H
   \              0x20 0x52    
   \              0x45 0x41    
   \              0x44 0x49    
   \   00000010   0x4E 0x47          DC8 4EH, 47H, 20H, 4FH, 46H, 20H, 4BH, 45H
   \              0x20 0x4F    
   \              0x46 0x20    
   \              0x4B 0x45    
   \   00000018   0x59 0x20          DC8 59H, 20H, 56H, 41H, 4CH, 55H, 45H, 53H
   \              0x56 0x41    
   \              0x4C 0x55    
   \              0x45 0x53    
   \   00000020   0x20 0x44          DC8 20H, 44H, 49H, 53H, 41H, 42H, 4CH, 45H
   \              0x49 0x53    
   \              0x41 0x42    
   \              0x4C 0x45    
   \   00000028   0x44 0x20          DC8 44H, 20H, 42H, 59H, 20H, 4DH, 46H, 47H
   \              0x42 0x59    
   \              0x20 0x4D    
   \              0x46 0x47    
   \   00000030   0x20 0x54          DC8 20H, 54H, 4FH, 4BH, 45H, 4EH, 0AH, 0
   \              0x4F 0x4B    
   \              0x45 0x4E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%p out FC: %4x">`:
   \   00000000   0x25 0x70          DC8 "%p out FC: %4x"
   \              0x20 0x6F    
   \              0x75 0x74    
   \              0x20 0x46    
   \              0x43 0x3A    
   \              0x20 0x25    
   \              0x34 0x78    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "NWK Key">`:
   \   00000000   0x4E 0x57          DC8 "NWK Key"
   \              0x4B 0x20    
   \              0x4B 0x65    
   \              0x79 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%p seq num: 0x%x">`:
   \   00000000   0x25 0x70          DC8 "%p seq num: 0x%x"
   \              0x20 0x73    
   \              0x65 0x71    
   \              0x20 0x6E    
   \              0x75 0x6D    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%p: ">`:
   \   00000000   0x25 0x70          DC8 "%p: "
   \              0x3A 0x20    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Link Key">`:
   \   00000000   0x4C 0x69          DC8 "Link Key"
   \              0x6E 0x6B    
   \              0x20 0x4B    
   \              0x65 0x79    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "TC %p">`:
   \   00000000   0x54 0x43          DC8 "TC %p"
   \              0x20 0x25    
   \              0x70 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%p Table">`:
   \   00000000   0x25 0x70          DC8 "%p Table"
   \              0x20 0x54    
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%d/%d entries used.">`:
   \   00000000   0x25 0x64          DC8 "%d/%d entries used."
   \              0x2F 0x25    
   \              0x64 0x20    
   \              0x65 0x6E    
   \              0x74 0x72    
   \              0x69 0x65    
   \              0x73 0x20    
   \              0x75 0x73    
   \              0x65 0x64    
   \              0x2E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Index IEEE Address   ...">`:
   \   00000000   0x49 0x6E          DC8 49H, 6EH, 64H, 65H, 78H, 20H, 49H, 45H
   \              0x64 0x65    
   \              0x78 0x20    
   \              0x49 0x45    
   \   00000008   0x45 0x45          DC8 45H, 45H, 20H, 41H, 64H, 64H, 72H, 65H
   \              0x20 0x41    
   \              0x64 0x64    
   \              0x72 0x65    
   \   00000010   0x73 0x73          DC8 73H, 73H, 20H, 20H, 20H, 20H, 20H, 20H
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \   00000018   0x20 0x20          DC8 20H, 20H, 20H, 49H, 6EH, 20H, 46H, 43H
   \              0x20 0x49    
   \              0x6E 0x20    
   \              0x46 0x43    
   \   00000020   0x20 0x20          DC8 20H, 20H, 20H, 20H, 20H, 54H, 79H, 70H
   \              0x20 0x20    
   \              0x20 0x54    
   \              0x79 0x70    
   \   00000028   0x65 0x20          DC8 65H, 20H, 20H, 41H, 75H, 74H, 68H, 20H
   \              0x20 0x41    
   \              0x75 0x74    
   \              0x68 0x20    
   \   00000030   0x20 0x4B          DC8 20H, 4BH, 65H, 79H, 0
   \              0x65 0x79    
   \              0x00         
   \   00000035   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%d     ">`:
   \   00000000   0x25 0x64          DC8 "%d     "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "-     ">`:
   \   00000000   0x2D 0x20          DC8 "-     "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  %4x  ">`:
   \   00000000   0x20 0x20          DC8 "  %4x  "
   \              0x25 0x34    
   \              0x78 0x20    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%c     %c     ">`:
   \   00000000   0x25 0x63          DC8 "%c     %c     "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x25    
   \              0x63 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "EmberKeySettings: 0x%2X">`:
   \   00000000   0x45 0x6D          DC8 "EmberKeySettings: 0x%2X"
   \              0x62 0x65    
   \              0x72 0x4B    
   \              0x65 0x79    
   \              0x53 0x65    
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x73    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  Permissions: %p">`:
   \   00000000   0x20 0x20          DC8 "  Permissions: %p"
   \              0x50 0x65    
   \              0x72 0x6D    
   \              0x69 0x73    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x73 0x3A    
   \              0x20 0x25    
   \              0x70 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Reading Allowed">`:
   \   00000000   0x52 0x65          DC8 "Reading Allowed"
   \              0x61 0x64    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x41 0x6C    
   \              0x6C 0x6F    
   \              0x77 0x65    
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Hashing only">`:
   \   00000000   0x48 0x61          DC8 "Hashing only"
   \              0x73 0x68    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6F 0x6E    
   \              0x6C 0x79    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "NONE">`:
   \   00000000   0x4E 0x4F          DC8 "NONE"
   \              0x4E 0x45    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Error: Failed to get ...">`:
   \   00000000   0x45 0x72          DC8 "Error: Failed to get config, status: 0x%X"
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x46    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x20    
   \              0x74 0x6F    
   \              0x20 0x67    
   \              0x65 0x74    
   \              0x20 0x63    
   \              0x6F 0x6E    
   \              0x66 0x69    
   \              0x67 0x2C    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x58 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Failed: 0x%X">`:
   \   00000000   0x46 0x61          DC8 "Failed: 0x%X"
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "set">`:
   \   00000000   0x73 0x65          DC8 "set"
   \              0x74 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "wv">`:
   \   00000000   0x77 0x76          DC8 "wv"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Set the MFG Security ...">`:
   \   00000000   0x53 0x65          DC8 53H, 65H, 74H, 20H, 74H, 68H, 65H, 20H
   \              0x74 0x20    
   \              0x74 0x68    
   \              0x65 0x20    
   \   00000008   0x4D 0x46          DC8 4DH, 46H, 47H, 20H, 53H, 65H, 63H, 75H
   \              0x47 0x20    
   \              0x53 0x65    
   \              0x63 0x75    
   \   00000010   0x72 0x69          DC8 72H, 69H, 74H, 79H, 20H, 63H, 6FH, 6EH
   \              0x74 0x79    
   \              0x20 0x63    
   \              0x6F 0x6E    
   \   00000018   0x66 0x69          DC8 66H, 69H, 67H, 20H, 74H, 6FH, 6BH, 65H
   \              0x67 0x20    
   \              0x74 0x6F    
   \              0x6B 0x65    
   \   00000020   0x6E 0x2E          DC8 6EH, 2EH, 20H, 20H, 43H, 41H, 4EH, 4EH
   \              0x20 0x20    
   \              0x43 0x41    
   \              0x4E 0x4E    
   \   00000028   0x4F 0x54          DC8 4FH, 54H, 20H, 42H, 45H, 20H, 55H, 4EH
   \              0x20 0x42    
   \              0x45 0x20    
   \              0x55 0x4E    
   \   00000030   0x53 0x45          DC8 53H, 45H, 54H, 20H, 42H, 59H, 20H, 43H
   \              0x54 0x20    
   \              0x42 0x59    
   \              0x20 0x43    
   \   00000038   0x4C 0x49          DC8 4CH, 49H, 2EH, 0
   \              0x2E 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "mfg-token">`:
   \   00000000   0x6D 0x66          DC8 "mfg-token"
   \              0x67 0x2D    
   \              0x74 0x6F    
   \              0x6B 0x65    
   \              0x6E 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Get/set the MFG Secur...">`:
   \   00000000   0x47 0x65          DC8 "Get/set the MFG Security config token"
   \              0x74 0x2F    
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x74 0x68    
   \              0x65 0x20    
   \              0x4D 0x46    
   \              0x47 0x20    
   \              0x53 0x65    
   \              0x63 0x75    
   \              0x72 0x69    
   \              0x74 0x79    
   \              0x20 0x63    
   \              0x6F 0x6E    
   \              0x66 0x69    
   \              0x67 0x20    
   \              0x74 0x6F    
   \              0x6B 0x65    
   \              0x6E 0x00    
   \   00000026   0x00 0x00          DC8 0, 0
    293          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  changeKeyCommand
              0 -> emberAfPrintln
              8 -> emberCopyStringArgument
              8 -> emberNetworkState
       48  getOutgoingApsFrameCounter
             48 -> emberGetKey
       16  getSetMfgToken
             16 -> emberAfPrintln
             16 -> emberGetMfgSecurityConfig
             16 -> emberSetMfgSecurityConfig
             16 -> emberUnsignedCommandArgument
       56  printKeyInfo
             56 -> emberAfGetKeyTableSize
             56 -> emberAfPrint
             56 -> emberAfPrintln
             56 -> emberGetKey
             56 -> emberGetMfgSecurityConfig
             56 -> getOutgoingApsFrameCounter
             56 -> halCommonMemSet
             56 -> printKeyTable
             56 -> printZigbeeKey
       80  printKeyTable
             80 -> emberAfGetKeyTableSize
             80 -> emberAfPrint
             80 -> emberAfPrintBigEndianEui64
             80 -> emberAfPrintEnabled
             80 -> emberAfPrintln
             80 -> emberGetKey
             80 -> emberGetKeyTableEntry
             80 -> printZigbeeKey


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?<Constant "  %4x  ">
      20  ?<Constant "  Permissions: %p">
       1  ?<Constant "">
      16  ?<Constant "%c     %c     ">
       8  ?<Constant "%d     ">
      20  ?<Constant "%d/%d entries used.">
      12  ?<Constant "%p Table">
      16  ?<Constant "%p out FC: %4x">
      20  ?<Constant "%p seq num: 0x%x">
       8  ?<Constant "%p: ">
      24  ?<Constant "%pstack must be down.">
       8  ?<Constant "-     ">
       8  ?<Constant "ERROR: ">
      24  ?<Constant "EmberKeySettings: 0x%2X">
      44  ?<Constant "Error: Failed to get ...">
      16  ?<Constant "Failed: 0x%X">
      40  ?<Constant "Get/set the MFG Secur...">
      16  ?<Constant "Hashing only">
      56  ?<Constant "Index IEEE Address   ...">
      12  ?<Constant "Link Key">
       8  ?<Constant "NONE">
       8  ?<Constant "NWK Key">
      36  ?<Constant "Print the MFG securit...">
      16  ?<Constant "Reading Allowed">
      60  ?<Constant "Set the MFG Security ...">
       8  ?<Constant "TC %p">
      56  ?<Constant "\nWARNING:  READING OF...">
       4  ?<Constant "get">
      12  ?<Constant "mfg-token">
       8  ?<Constant "set key">
       4  ?<Constant "set">
       4  ?<Constant "wv">
       4  ??DataTable35
       4  ??DataTable35_1
      10  ?Subroutine0
      10  ?Subroutine1
      62  changeKeyCommand
      32  cliPreconfiguredLinkKey
          cliNetworkKey
      40  emAfSecurityCommands
      36  getOutgoingApsFrameCounter
     130  getSetMfgToken
      60  mfgToken
     170  printKeyInfo
     202  printKeyTable

 
    32 bytes in section .data
   261 bytes in section .rodata
 1 068 bytes in section .text
 
 1 068 bytes of CODE  memory
   261 bytes of CONST memory
    32 bytes of DATA  memory

Errors: none
Warnings: none
