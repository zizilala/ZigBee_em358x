###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.2.53884/W32 for ARM     04/Feb/2015  16:38:22 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\util\zigbee-framewo #
#                    rk\zigbee-device-library.c                               #
#    Command line =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\util\zigbee-framewo #
#                    rk\zigbee-device-library.c -D                            #
#                    "GENERATED_TOKEN_HEADER=\"app/builder/DoorSensor_SM6011/ #
#                    DoorSensor_SM6011_tokens.h\"" -D                         #
#                    "ZA_GENERATED_HEADER=\"app/builder/DoorSensor_SM6011/Doo #
#                    rSensor_SM6011.h\"" -D LOCAL_STORAGE_BTL -D              #
#                    "BOARD_HEADER=\"app\builder\DoorSensor_SM6011\DoorSensor #
#                    _SM6011_board.h\"" -D "PLATFORM_HEADER=\"hal/micro/corte #
#                    xm3/compiler/iar.h\"" -D CORTEXM3 -D                     #
#                    CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3585 -D PHY_EM3XX -D  #
#                    "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\ #
#                    "" -D "CONFIGURATION_HEADER=\"app/framework/util/config. #
#                    h\"" -D "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/D #
#                    oorSensor_SM6011/DoorSensor_SM6011_endpoint_config.h\""  #
#                    -D "__SOURCEFILE__=\"zigbee-device-library.c\"" -lC      #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \ --diag_suppress Pa050 -o C:\Ember\EmberZNet5.3.0-GA\em #
#                    35x\build\DoorSensor_SM6011\ --debug --endian=little     #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\util\zigbee-framewo #
#                    rk\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\Door #
#                    Sensor_SM6011\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app\b #
#                    uilder\DoorSensor_SM6011\..\..\..\ -I                    #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\app\framework\include\ -I                #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app #
#                    \builder\DoorSensor_SM6011\..\..\..\stack\ -I            #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\hal\ -I C:\Ember\EmberZNet5.3.0-GA\em35x #
#                    \app\builder\DoorSensor_SM6011\..\..\..\hal\..\ -Ohz     #
#                    --use_c++_inline                                         #
#    List file    =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \zigbee-device-library.lst                               #
#    Object file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \zigbee-device-library.o                                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\Ember\EmberZNet5.3.0-GA\em35x\app\util\zigbee-framework\zigbee-device-library.c
      1          // File: zigbee-device-library.c
      2          //
      3          // Description: ZigBee Device Object (ZDO) functions not provided by the stack.
      4          //
      5          //
      6          // Copyright 2007 by Ember Corporation.  All rights reserved.               *80*
      7          
      8          #include PLATFORM_HEADER
      9          #include "stack/include/ember.h"
     10          #include "hal/hal.h"
     11          #include "zigbee-device-common.h"
     12          #include "zigbee-device-library.h"
     13          
     14          static EmberStatus sendZigDevRequestBuffer(EmberNodeId destination,
     15                                                     int16u clusterId,
     16                                                     EmberApsOption options,
     17                                                     EmberMessageBuffer request);
     18          

   \                                 In section .text, align 2, keep-with-next
     19          EmberStatus emberMatchDescriptorsRequest(EmberNodeId target,
     20                                                   int16u profile,
     21                                                   EmberMessageBuffer inClusters,
     22                                                   EmberMessageBuffer outClusters,
     23                                                   EmberApsOption options)
     24          {
   \                     emberMatchDescriptorsRequest:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
   \   00000006   0x4682             MOV      R10,R0
   \   00000008   0x460C             MOV      R4,R1
   \   0000000A   0x4615             MOV      R5,R2
   \   0000000C   0x469B             MOV      R11,R3
     25            int8u inCount = (inClusters == EMBER_NULL_MESSAGE_BUFFER
     26                             ? 0
     27                             : emberMessageBufferLength(inClusters) 
     28                             / 2); // Clusters are 2 bytes long
   \   0000000E   0x....             LDR.N    R0,??DataTable3
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x2DFF             CMP      R5,#+255
   \   00000014   0xBF0E             ITEE     EQ 
   \   00000016   0x2700             MOVEQ    R7,#+0
   \   00000018   0x5C29             LDRBNE   R1,[R5, R0]
   \   0000001A   0x084F             LSRNE    R7,R1,#+1
     29            int8u outCount = (outClusters == EMBER_NULL_MESSAGE_BUFFER
     30                              ? 0
     31                              : emberMessageBufferLength(outClusters)
     32                              / 2); // Clusters are 2 bytes long
   \   0000001C   0xF1BB 0x0FFF      CMP      R11,#+255
   \   00000020   0xBF0E             ITEE     EQ 
   \   00000022   0xF04F 0x0800      MOVEQ    R8,#+0
   \   00000026   0xF81B 0x0000      LDRBNE   R0,[R11, R0]
   \   0000002A   0xEA4F 0x0850      LSRNE    R8,R0,#+1
     33            EmberMessageBuffer request;
     34            int8u offset = ZDO_MESSAGE_OVERHEAD + 5;
     35            int8u contents[ZDO_MESSAGE_OVERHEAD + 5];  // Add 2 bytes for NWK Address 
     36                                                       // Add 2 bytes for Profile Id
     37                                                       // Add 1 byte for in Cluster Count
     38          
     39            EmberStatus result;
     40            int8u i;
     41            
     42            contents[0] = emberNextZigDevRequestSequence();
   \   0000002E   0x.... 0x....      BL       emberNextZigDevRequestSequence
   \   00000032   0xF88D 0x0000      STRB     R0,[SP, #+0]
     43            contents[1] = LOW_BYTE(target);
   \   00000036   0xF88D 0xA001      STRB     R10,[SP, #+1]
     44            contents[2] = HIGH_BYTE(target);
   \   0000003A   0xEA4F 0x201A      LSR      R0,R10,#+8
   \   0000003E   0xF88D 0x0002      STRB     R0,[SP, #+2]
     45            contents[3] = LOW_BYTE(profile);
   \   00000042   0xF88D 0x4003      STRB     R4,[SP, #+3]
     46            contents[4] = HIGH_BYTE(profile);
   \   00000046   0x0A20             LSRS     R0,R4,#+8
   \   00000048   0xF88D 0x0004      STRB     R0,[SP, #+4]
     47            contents[5] = inCount;
   \   0000004C   0xF88D 0x7005      STRB     R7,[SP, #+5]
     48          
     49            request = emberFillLinkedBuffers(contents, offset);
   \   00000050   0x2106             MOVS     R1,#+6
   \   00000052   0xA800             ADD      R0,SP,#+0
   \   00000054   0x.... 0x....      BL       emberFillLinkedBuffers
   \   00000058   0x4681             MOV      R9,R0
     50            if (request == EMBER_NULL_MESSAGE_BUFFER)
   \   0000005A   0xF1B9 0x0FFF      CMP      R9,#+255
   \   0000005E   0xD008             BEQ.N    ??emberMatchDescriptorsRequest_0
     51              return EMBER_NO_BUFFERS;
     52          
     53            if (emberSetLinkedBuffersLength(request,
     54                                            offset + 
     55                                            (inCount * 2) + // Times 2 for 2 byte Clusters
     56                                            1 +             // Out Cluster Count
     57                                            (outCount * 2)) // Times 2 for 2 byte Clusters
     58                != EMBER_SUCCESS)
   \   00000060   0xEB08 0x0007      ADD      R0,R8,R7
   \   00000064   0x0040             LSLS     R0,R0,#+1
   \   00000066   0x1DC1             ADDS     R1,R0,#+7
   \   00000068   0xB2C9             UXTB     R1,R1
   \   0000006A   0x4648             MOV      R0,R9
   \   0000006C   0x.... 0x....      BL       emberSetLinkedBuffersLength
   \   00000070   0xB108             CBZ.N    R0,??emberMatchDescriptorsRequest_1
     59              return EMBER_NO_BUFFERS;
   \                     ??emberMatchDescriptorsRequest_0:
   \   00000072   0x2018             MOVS     R0,#+24
   \   00000074   0xE046             B.N      ??emberMatchDescriptorsRequest_2
     60            for (i = 0; i < inCount; i++) {
   \                     ??emberMatchDescriptorsRequest_1:
   \   00000076   0x2400             MOVS     R4,#+0
   \   00000078   0xE013             B.N      ??emberMatchDescriptorsRequest_3
     61              emberSetLinkedBuffersByte(request,
     62                                        (i * 2) + offset,
     63                                        emberGetLinkedBuffersByte(inClusters, (i * 2)));
   \                     ??emberMatchDescriptorsRequest_4:
   \   0000007A   0x0061             LSLS     R1,R4,#+1
   \   0000007C   0xB2C9             UXTB     R1,R1
   \   0000007E   0x4628             MOV      R0,R5
   \   00000080   0x.... 0x....      BL       emberGetLinkedBuffersByte
   \   00000084   0x0066             LSLS     R6,R4,#+1
   \   00000086   0x4602             MOV      R2,R0
   \   00000088   0x1DB1             ADDS     R1,R6,#+6
   \   0000008A   0x.... 0x....      BL       ?Subroutine1
     64              emberSetLinkedBuffersByte(request,
     65                                        (i * 2) + offset + 1,
     66                                        emberGetLinkedBuffersByte(inClusters, 
     67                                                                  (i * 2) + 1));
   \                     ??CrossCallReturnLabel_7:
   \   0000008E   0x1C71             ADDS     R1,R6,#+1
   \   00000090   0xB2C9             UXTB     R1,R1
   \   00000092   0x4628             MOV      R0,R5
   \   00000094   0x.... 0x....      BL       emberGetLinkedBuffersByte
   \   00000098   0x4602             MOV      R2,R0
   \   0000009A   0x1DF1             ADDS     R1,R6,#+7
   \   0000009C   0x.... 0x....      BL       ?Subroutine1
     68            }
   \                     ??CrossCallReturnLabel_6:
   \   000000A0   0x1C64             ADDS     R4,R4,#+1
   \                     ??emberMatchDescriptorsRequest_3:
   \   000000A2   0x42BC             CMP      R4,R7
   \   000000A4   0xDBE9             BLT.N    ??emberMatchDescriptorsRequest_4
     69            offset += (inCount * 2);
   \   000000A6   0x0078             LSLS     R0,R7,#+1
   \   000000A8   0x1D85             ADDS     R5,R0,#+6
   \   000000AA   0xB2ED             UXTB     R5,R5
     70            emberSetLinkedBuffersByte(request, offset, outCount);
   \   000000AC   0x4642             MOV      R2,R8
   \   000000AE   0x4629             MOV      R1,R5
   \   000000B0   0x4648             MOV      R0,R9
   \   000000B2   0x.... 0x....      BL       emberSetLinkedBuffersByte
     71            offset++;
   \   000000B6   0x1C6D             ADDS     R5,R5,#+1
   \   000000B8   0xB2ED             UXTB     R5,R5
     72            for (i = 0; i < outCount; i++) {
   \   000000BA   0x2700             MOVS     R7,#+0
   \   000000BC   0xE014             B.N      ??emberMatchDescriptorsRequest_5
     73              emberSetLinkedBuffersByte(request,
     74                                        (i * 2) + offset,
     75                                        emberGetLinkedBuffersByte(outClusters, (i * 2)));
   \                     ??emberMatchDescriptorsRequest_6:
   \   000000BE   0x007C             LSLS     R4,R7,#+1
   \   000000C0   0xB2E1             UXTB     R1,R4
   \   000000C2   0x4658             MOV      R0,R11
   \   000000C4   0x.... 0x....      BL       emberGetLinkedBuffersByte
   \   000000C8   0x4602             MOV      R2,R0
   \   000000CA   0x007E             LSLS     R6,R7,#+1
   \   000000CC   0x19A9             ADDS     R1,R5,R6
   \   000000CE   0x.... 0x....      BL       ?Subroutine1
     76              emberSetLinkedBuffersByte(request,
     77                                        (i * 2) + offset + 1,
     78                                        emberGetLinkedBuffersByte(outClusters,
     79                                                                  (i * 2) + 1));
   \                     ??CrossCallReturnLabel_5:
   \   000000D2   0x1C71             ADDS     R1,R6,#+1
   \   000000D4   0xB2C9             UXTB     R1,R1
   \   000000D6   0x4658             MOV      R0,R11
   \   000000D8   0x.... 0x....      BL       emberGetLinkedBuffersByte
   \   000000DC   0x4602             MOV      R2,R0
   \   000000DE   0x1960             ADDS     R0,R4,R5
   \   000000E0   0x1C41             ADDS     R1,R0,#+1
   \   000000E2   0x.... 0x....      BL       ?Subroutine1
     80            }
   \                     ??CrossCallReturnLabel_4:
   \   000000E6   0x1C7F             ADDS     R7,R7,#+1
   \                     ??emberMatchDescriptorsRequest_5:
   \   000000E8   0x4547             CMP      R7,R8
   \   000000EA   0xDBE8             BLT.N    ??emberMatchDescriptorsRequest_6
     81          
     82            result = sendZigDevRequestBuffer(target,
     83                                             MATCH_DESCRIPTORS_REQUEST,
     84                                             options,
     85                                             request);
   \   000000EC   0x464B             MOV      R3,R9
   \   000000EE   0xF8BD 0x2030      LDRH     R2,[SP, #+48]
   \   000000F2   0x2106             MOVS     R1,#+6
   \   000000F4   0x4650             MOV      R0,R10
   \   000000F6   0x.... 0x....      BL       sendZigDevRequestBuffer
   \   000000FA   0x4604             MOV      R4,R0
     86            emberReleaseMessageBuffer(request);
   \   000000FC   0x4648             MOV      R0,R9
   \   000000FE   0x.... 0x....      BL       emReleaseMessageBuffer
     87            return result;
   \   00000102   0x4620             MOV      R0,R4
   \                     ??emberMatchDescriptorsRequest_2:
   \   00000104   0xE8BD 0x8FFE      POP      {R1-R11,PC}      ;; return
     88          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   0xB2C9             UXTB     R1,R1
   \   00000002   0x4648             MOV      R0,R9
   \   00000004   0x.... 0x....      B.W      emberSetLinkedBuffersByte
     89          
     90          

   \                                 In section .text, align 2, keep-with-next
     91          EmberStatus emberEndDeviceBindRequest(int8u endpoint,
     92                                                EmberApsOption options)
     93          {
   \                     emberEndDeviceBindRequest:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB088             SUB      SP,SP,#+32
   \   00000006   0x4604             MOV      R4,R0
   \   00000008   0x4688             MOV      R8,R1
     94            EmberMessageBuffer request;
     95            EmberStatus result;
     96            int8u contents[ZDO_MESSAGE_OVERHEAD + 14];
     97            EmberEndpointDescription descriptor;
     98            int8u i;
     99            
    100            if (!emberGetEndpointDescription(endpoint, &descriptor)) {
   \   0000000A   0xA901             ADD      R1,SP,#+4
   \   0000000C   0x.... 0x....      BL       emberGetEndpointDescription
   \   00000010   0xB908             CBNZ.N   R0,??emberEndDeviceBindRequest_0
    101              return EMBER_INVALID_ENDPOINT;
   \   00000012   0x20A3             MOVS     R0,#+163
   \   00000014   0xE05D             B.N      ??emberEndDeviceBindRequest_1
    102            }
    103            
    104            contents[0]  = emberNextZigDevRequestSequence();
   \                     ??emberEndDeviceBindRequest_0:
   \   00000016   0x.... 0x....      BL       emberNextZigDevRequestSequence
   \   0000001A   0xF88D 0x000C      STRB     R0,[SP, #+12]
    105            contents[1]  = LOW_BYTE(emberGetNodeId());
   \   0000001E   0x.... 0x....      BL       emberGetNodeId
   \   00000022   0xF88D 0x000D      STRB     R0,[SP, #+13]
    106            contents[2]  = HIGH_BYTE(emberGetNodeId());
   \   00000026   0x.... 0x....      BL       emberGetNodeId
   \   0000002A   0x0A00             LSRS     R0,R0,#+8
   \   0000002C   0xF88D 0x000E      STRB     R0,[SP, #+14]
    107            MEMCOPY(contents + 3, emberGetEui64(), 8);
   \   00000030   0x2208             MOVS     R2,#+8
   \   00000032   0x....             LDR.N    R1,??DataTable3_1
   \   00000034   0xF10D 0x000F      ADD      R0,SP,#+15
   \   00000038   0x.... 0x....      BL       halCommonMemCopy
    108            contents[11] = endpoint;
   \   0000003C   0xF88D 0x4017      STRB     R4,[SP, #+23]
    109            contents[12] = LOW_BYTE(descriptor.profileId);
   \   00000040   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000044   0xF88D 0x0018      STRB     R0,[SP, #+24]
    110            contents[13] = HIGH_BYTE(descriptor.profileId);
   \   00000048   0x0A00             LSRS     R0,R0,#+8
   \   0000004A   0xF88D 0x0019      STRB     R0,[SP, #+25]
    111            contents[14] = descriptor.inputClusterCount;
   \   0000004E   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   00000052   0xF88D 0x001A      STRB     R0,[SP, #+26]
    112          
    113            request = emberFillLinkedBuffers(contents, sizeof(contents));
   \   00000056   0x210F             MOVS     R1,#+15
   \   00000058   0xA803             ADD      R0,SP,#+12
   \   0000005A   0x.... 0x....      BL       emberFillLinkedBuffers
   \   0000005E   0x4606             MOV      R6,R0
    114            if (request == EMBER_NULL_MESSAGE_BUFFER)
   \   00000060   0x2EFF             CMP      R6,#+255
   \   00000062   0xBF08             IT       EQ 
   \   00000064   0x2018             MOVEQ    R0,#+24
    115              return EMBER_NO_BUFFERS;
   \   00000066   0xD034             BEQ.N    ??emberEndDeviceBindRequest_1
    116            for (i = 0; i < descriptor.inputClusterCount; i++) {
   \   00000068   0x2700             MOVS     R7,#+0
   \   0000006A   0xE00A             B.N      ??emberEndDeviceBindRequest_2
    117              int16u clusterId = emberGetEndpointCluster(endpoint,
    118                                                         EMBER_INPUT_CLUSTER_LIST,
    119                                                         i);
   \                     ??emberEndDeviceBindRequest_3:
   \   0000006C   0x463A             MOV      R2,R7
   \   0000006E   0x2100             MOVS     R1,#+0
   \   00000070   0x4620             MOV      R0,R4
   \   00000072   0x.... 0x....      BL       emberGetEndpointCluster
   \   00000076   0x.... 0x....      BL       ?Subroutine0
    120              int8u temp = LOW_BYTE(clusterId);
    121              emberAppendToLinkedBuffers(request,
    122                                         &temp,
    123                                         1);
    124              temp = HIGH_BYTE(clusterId);
   \                     ??CrossCallReturnLabel_3:
   \   0000007A   0x1228             ASRS     R0,R5,#+8
   \   0000007C   0x.... 0x....      BL       ??Subroutine0_0
    125              emberAppendToLinkedBuffers(request,
    126                                         &temp,
    127                                         1);
    128            }
   \                     ??CrossCallReturnLabel_1:
   \   00000080   0x1C7F             ADDS     R7,R7,#+1
   \                     ??emberEndDeviceBindRequest_2:
   \   00000082   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   00000086   0xB2FF             UXTB     R7,R7
   \   00000088   0x4287             CMP      R7,R0
   \   0000008A   0xD3EF             BCC.N    ??emberEndDeviceBindRequest_3
    129            emberAppendToLinkedBuffers(request,
    130                                       &descriptor.outputClusterCount,
    131                                       1);
   \   0000008C   0x2201             MOVS     R2,#+1
   \   0000008E   0xF10D 0x010A      ADD      R1,SP,#+10
   \   00000092   0x4630             MOV      R0,R6
   \   00000094   0x.... 0x....      BL       emberAppendToLinkedBuffers
    132            for (i = 0; i < descriptor.outputClusterCount; i++) {
   \   00000098   0x2700             MOVS     R7,#+0
   \   0000009A   0xE00A             B.N      ??emberEndDeviceBindRequest_4
    133              int16u clusterId = emberGetEndpointCluster(endpoint,
    134                                                         EMBER_OUTPUT_CLUSTER_LIST,
    135                                                         i);
   \                     ??emberEndDeviceBindRequest_5:
   \   0000009C   0x463A             MOV      R2,R7
   \   0000009E   0x2101             MOVS     R1,#+1
   \   000000A0   0x4620             MOV      R0,R4
   \   000000A2   0x.... 0x....      BL       emberGetEndpointCluster
   \   000000A6   0x.... 0x....      BL       ?Subroutine0
    136              int8u temp = LOW_BYTE(clusterId);
    137              emberAppendToLinkedBuffers(request,
    138                                         &temp,
    139                                         1);
    140              temp = HIGH_BYTE(clusterId);
   \                     ??CrossCallReturnLabel_2:
   \   000000AA   0x1228             ASRS     R0,R5,#+8
   \   000000AC   0x.... 0x....      BL       ??Subroutine0_0
    141              emberAppendToLinkedBuffers(request,
    142                                         &temp,
    143                                         1);
    144            }
   \                     ??CrossCallReturnLabel_0:
   \   000000B0   0x1C7F             ADDS     R7,R7,#+1
   \                     ??emberEndDeviceBindRequest_4:
   \   000000B2   0xF89D 0x000A      LDRB     R0,[SP, #+10]
   \   000000B6   0xB2FF             UXTB     R7,R7
   \   000000B8   0x4287             CMP      R7,R0
   \   000000BA   0xD3EF             BCC.N    ??emberEndDeviceBindRequest_5
    145            result = sendZigDevRequestBuffer(EMBER_ZIGBEE_COORDINATOR_ADDRESS,
    146                                             END_DEVICE_BIND_REQUEST,
    147                                             options,
    148                                             request);
   \   000000BC   0x4633             MOV      R3,R6
   \   000000BE   0x4642             MOV      R2,R8
   \   000000C0   0x2120             MOVS     R1,#+32
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x.... 0x....      BL       sendZigDevRequestBuffer
   \   000000C8   0x4604             MOV      R4,R0
    149          
    150            if (request != EMBER_NULL_MESSAGE_BUFFER)
    151              emberReleaseMessageBuffer(request);
   \   000000CA   0x4630             MOV      R0,R6
   \   000000CC   0x.... 0x....      BL       emReleaseMessageBuffer
    152            return result;
   \   000000D0   0x4620             MOV      R0,R4
   \                     ??emberEndDeviceBindRequest_1:
   \   000000D2   0xB008             ADD      SP,SP,#+32
   \   000000D4   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    153          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   0x4605             MOV      R5,R0
   \                     ??Subroutine0_0:
   \   00000002   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0xA900             ADD      R1,SP,#+0
   \   0000000A   0x4630             MOV      R0,R6
   \   0000000C   0x.... 0x....      B.W      emberAppendToLinkedBuffers
    154          

   \                                 In section .text, align 2, keep-with-next
    155          EmberStatus emberSendZigDevRequest(EmberNodeId destination,
    156                                             int16u clusterId,
    157                                             EmberApsOption options,
    158                                             int8u *contents,
    159                                             int8u length)
    160          {
   \                     emberSendZigDevRequest:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4605             MOV      R5,R0
   \   00000006   0x460E             MOV      R6,R1
   \   00000008   0x4690             MOV      R8,R2
   \   0000000A   0x461F             MOV      R7,R3
   \   0000000C   0x9C06             LDR      R4,[SP, #+24]
    161            EmberMessageBuffer message;
    162            EmberStatus result;
    163          
    164            contents[0] = emberNextZigDevRequestSequence();
   \   0000000E   0x.... 0x....      BL       emberNextZigDevRequestSequence
   \   00000012   0x7038             STRB     R0,[R7, #+0]
    165          
    166            message = emberFillLinkedBuffers(contents, length);
   \   00000014   0x4621             MOV      R1,R4
   \   00000016   0x4638             MOV      R0,R7
   \   00000018   0x.... 0x....      BL       emberFillLinkedBuffers
   \   0000001C   0x4604             MOV      R4,R0
    167          
    168            if (message == EMBER_NULL_MESSAGE_BUFFER)
   \   0000001E   0x2CFF             CMP      R4,#+255
   \   00000020   0xBF08             IT       EQ 
   \   00000022   0x2018             MOVEQ    R0,#+24
    169              return EMBER_NO_BUFFERS;
   \   00000024   0xD00A             BEQ.N    ??emberSendZigDevRequest_0
    170            else {
    171              result = sendZigDevRequestBuffer(destination,
    172                                               clusterId,
    173                                               options,
    174                                               message);
   \   00000026   0x4623             MOV      R3,R4
   \   00000028   0x4642             MOV      R2,R8
   \   0000002A   0x4631             MOV      R1,R6
   \   0000002C   0x4628             MOV      R0,R5
   \   0000002E   0x.... 0x....      BL       sendZigDevRequestBuffer
   \   00000032   0x4605             MOV      R5,R0
    175              emberReleaseMessageBuffer(message);
   \   00000034   0x4620             MOV      R0,R4
   \   00000036   0x.... 0x....      BL       emReleaseMessageBuffer
    176              return result;
   \   0000003A   0x4628             MOV      R0,R5
   \                     ??emberSendZigDevRequest_0:
   \   0000003C   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    177            }
    178          }
    179          

   \                                 In section .text, align 2, keep-with-next
    180          static EmberStatus sendZigDevRequestBuffer(EmberNodeId destination,
    181                                                     int16u clusterId,
    182                                                     EmberApsOption options,
    183                                                     EmberMessageBuffer request)
    184          {
   \                     sendZigDevRequestBuffer:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
    185            EmberApsFrame apsFrame;
    186          
    187            apsFrame.sourceEndpoint = EMBER_ZDO_ENDPOINT;
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0xF8AD 0x4004      STRH     R4,[SP, #+4]
    188            apsFrame.destinationEndpoint = EMBER_ZDO_ENDPOINT;
    189            apsFrame.clusterId = clusterId;
   \   0000000A   0xF8AD 0x1002      STRH     R1,[SP, #+2]
    190            apsFrame.profileId = EMBER_ZDO_PROFILE_ID;
   \   0000000E   0xF8AD 0x4000      STRH     R4,[SP, #+0]
    191            apsFrame.options = options;
   \   00000012   0xF8AD 0x2006      STRH     R2,[SP, #+6]
    192          
    193            if (destination == EMBER_BROADCAST_ADDRESS
    194                || destination == EMBER_RX_ON_WHEN_IDLE_BROADCAST_ADDRESS
    195                || destination == EMBER_SLEEPY_BROADCAST_ADDRESS) 
   \   00000016   0xF64F 0x71FC      MOVW     R1,#+65532
   \   0000001A   0x4288             CMP      R0,R1
   \   0000001C   0xBF1F             ITTTT    NE 
   \   0000001E   0xF64F 0x71FD      MOVWNE   R1,#+65533
   \   00000022   0x4288             CMPNE    R0,R1
   \   00000024   0xF64F 0x71FF      MOVWNE   R1,#+65535
   \   00000028   0x4288             CMPNE    R0,R1
   \   0000002A   0xD105             BNE.N    ??sendZigDevRequestBuffer_0
    196              return emberSendBroadcast(destination, 
    197          		              &apsFrame, 
    198          			      emberGetZigDevRequestRadius(), 
    199          			      request);
   \   0000002C   0x....             LDR.N    R1,??DataTable3_2
   \   0000002E   0x780A             LDRB     R2,[R1, #+0]
   \   00000030   0xA900             ADD      R1,SP,#+0
   \   00000032   0x.... 0x....      BL       emberSendBroadcast
   \   00000036   0xE004             B.N      ??sendZigDevRequestBuffer_1
    200            else
    201              return emberSendUnicast(EMBER_OUTGOING_DIRECT,
    202                                      destination,
    203                                      &apsFrame,
    204                                      request);
   \                     ??sendZigDevRequestBuffer_0:
   \   00000038   0xAA00             ADD      R2,SP,#+0
   \   0000003A   0x4601             MOV      R1,R0
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x.... 0x....      BL       emberSendUnicast
   \                     ??sendZigDevRequestBuffer_1:
   \   00000042   0xB004             ADD      SP,SP,#+16
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
    205          }
    206          

   \                                 In section .text, align 2, keep-with-next
    207          EmberNodeId emberDecodeAddressResponse(EmberMessageBuffer response,
    208                                                 EmberEUI64 eui64Return)
    209          {
   \                     emberDecodeAddressResponse:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x460C             MOV      R4,R1
    210            int8u contents[11];
    211            if (emberMessageBufferLength(response) < ZDO_MESSAGE_OVERHEAD + 11)
   \   00000006   0xF64F 0x75FF      MOVW     R5,#+65535
   \   0000000A   0x....             LDR.N    R1,??DataTable3
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x5C41             LDRB     R1,[R0, R1]
   \   00000010   0x290C             CMP      R1,#+12
   \   00000012   0xD318             BCC.N    ??emberDecodeAddressResponse_0
    212              return EMBER_NULL_NODE_ID;
    213            emberCopyFromLinkedBuffers(response, ZDO_MESSAGE_OVERHEAD, contents, 11);
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x9100             STR      R1,[SP, #+0]
   \   00000018   0x230B             MOVS     R3,#+11
   \   0000001A   0x2201             MOVS     R2,#+1
   \   0000001C   0x4601             MOV      R1,R0
   \   0000001E   0xA801             ADD      R0,SP,#+4
   \   00000020   0x.... 0x....      BL       emReallyCopyToLinkedBuffers
    214            if (contents[0] == EMBER_ZDP_SUCCESS) {
   \   00000024   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   00000028   0xB968             CBNZ.N   R0,??emberDecodeAddressResponse_0
    215              MEMCOPY(eui64Return, contents + 1, EUI64_SIZE);
   \   0000002A   0x2208             MOVS     R2,#+8
   \   0000002C   0xF10D 0x0105      ADD      R1,SP,#+5
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0x.... 0x....      BL       halCommonMemCopy
    216              return HIGH_LOW_TO_INT(contents[10], contents[9]);
   \   00000036   0xF89D 0x000E      LDRB     R0,[SP, #+14]
   \   0000003A   0xF89D 0x100D      LDRB     R1,[SP, #+13]
   \   0000003E   0xEB01 0x2000      ADD      R0,R1,R0, LSL #+8
   \   00000042   0xB280             UXTH     R0,R0
   \   00000044   0xE000             B.N      ??emberDecodeAddressResponse_1
    217            } else
    218              return EMBER_NULL_NODE_ID;
   \                     ??emberDecodeAddressResponse_0:
   \   00000046   0x4628             MOV      R0,R5
   \                     ??emberDecodeAddressResponse_1:
   \   00000048   0xB005             ADD      SP,SP,#+20
   \   0000004A   0xBD30             POP      {R4,R5,PC}       ;; return
    219          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     emMessageBufferLengths

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     emLocalEui64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     zigDevRequestRadius

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       32  emberDecodeAddressResponse
             32 -> emReallyCopyToLinkedBuffers
             32 -> halCommonMemCopy
       56  emberEndDeviceBindRequest
             56 -> emReleaseMessageBuffer
             56 -> emberAppendToLinkedBuffers
             56 -> emberFillLinkedBuffers
             56 -> emberGetEndpointCluster
             56 -> emberGetEndpointDescription
             56 -> emberGetNodeId
             56 -> emberNextZigDevRequestSequence
             56 -> halCommonMemCopy
             56 -> sendZigDevRequestBuffer
       48  emberMatchDescriptorsRequest
             48 -> emReleaseMessageBuffer
             48 -> emberFillLinkedBuffers
             48 -> emberGetLinkedBuffersByte
             48 -> emberNextZigDevRequestSequence
             48 -> emberSetLinkedBuffersByte
             48 -> emberSetLinkedBuffersLength
             48 -> sendZigDevRequestBuffer
       24  emberSendZigDevRequest
             24 -> emReleaseMessageBuffer
             24 -> emberFillLinkedBuffers
             24 -> emberNextZigDevRequestSequence
             24 -> sendZigDevRequestBuffer
       24  sendZigDevRequestBuffer
             24 -> emberSendBroadcast
             24 -> emberSendUnicast


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
      16  ?Subroutine0
       8  ?Subroutine1
      76  emberDecodeAddressResponse
     216  emberEndDeviceBindRequest
     264  emberMatchDescriptorsRequest
      64  emberSendZigDevRequest
      70  sendZigDevRequestBuffer

 
 726 bytes in section .text
 
 726 bytes of CODE memory

Errors: none
Warnings: none
