// This file is generated by Ember Desktop.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef __EMBER_AF_ENUMS__
#define __EMBER_AF_ENUMS__


/**
 * @addtogroup enums Application Framework V2 Enums Reference
 * This header provides Application Framework enum definitions.
 * @{
 */
/** @name Enums */
// @{

typedef enum {
  EMBER_ZCL_11073_CONNECT_REQUEST_CONNECT_CONTROL_PREEMPTIBLE  = 0x01
} EmberAf11073ConnectRequestConnectControl;

typedef enum {
  EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_DISCONNECTED       = 0x00,
  EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_CONNECTED          = 0x01,
  EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_NOT_AUTHORIZED     = 0x02,
  EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_RECONNECT_REQUEST  = 0x03,
  EMBER_ZCL_11073_TUNNEL_CONNECTION_STATUS_ALREADY_CONNECTED  = 0x04
} EmberAf11073TunnelConnectionStatus;

typedef enum {
  EMBER_ZCL_ALERT_COUNT_TYPE_UNSTRUCTURED  = 0x00
} EmberAfAlertCountType;

typedef enum {
  EMBER_ZCL_ALERT_STRUCTURE_CATEGORY_WARNING  = 0x0100,
  EMBER_ZCL_ALERT_STRUCTURE_CATEGORY_DANGER   = 0x0200,
  EMBER_ZCL_ALERT_STRUCTURE_CATEGORY_FAILURE  = 0x0300
} EmberAfAlertStructureCategory;

typedef enum {
  EMBER_ZCL_ALERT_STRUCTURE_PRESENCE_RECOVERY_PRESENCE  = 0x0000,
  EMBER_ZCL_ALERT_STRUCTURE_PRESENCE_RECOVERY_RECOVERY  = 0x1000
} EmberAfAlertStructurePresenceRecovery;

typedef enum {
  EMBER_ZCL_ALTERNATE_COST_UNIT_KG_OF_CO2_PER_UNIT_OF_MEASURE  = 0x02
} EmberAfAlternateCostUnit;

typedef enum {
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_RESERVED            = 0x00,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_GREEN               = 0x01,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_1                   = 0x02,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_2                   = 0x03,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_3                   = 0x04,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_4                   = 0x05,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_5                   = 0x06,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_EMERGENCY           = 0x07,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_PLANNED_OUTAGE      = 0x08,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_SERVICE_DISCONNECT  = 0x09,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED1    = 0x0A,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED2    = 0x0B,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED3    = 0x0C,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED4    = 0x0D,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED5    = 0x0E,
  EMBER_ZCL_AMI_CRITICALITY_LEVEL_UTILITY_DEFINED6    = 0x0F
} EmberAfAmiCriticalityLevel;

typedef enum {
  EMBER_ZCL_AMI_EVENT_STATUS_LOAD_CONTROL_EVENT_COMMAND_RX                           = 0x01,
  EMBER_ZCL_AMI_EVENT_STATUS_EVENT_STARTED                                           = 0x02,
  EMBER_ZCL_AMI_EVENT_STATUS_EVENT_COMPLETED                                         = 0x03,
  EMBER_ZCL_AMI_EVENT_STATUS_USER_HAS_CHOOSE_TO_OPT_OUT                              = 0x04,
  EMBER_ZCL_AMI_EVENT_STATUS_USER_HAS_CHOOSE_TO_OPT_IN                               = 0x05,
  EMBER_ZCL_AMI_EVENT_STATUS_THE_EVENT_HAS_BEEN_CANCELED                             = 0x06,
  EMBER_ZCL_AMI_EVENT_STATUS_THE_EVENT_HAS_BEEN_SUPERSEDED                           = 0x07,
  EMBER_ZCL_AMI_EVENT_STATUS_EVENT_PARTIALLY_COMPLETED_WITH_USER_OPT_OUT             = 0x08,
  EMBER_ZCL_AMI_EVENT_STATUS_EVENT_PARTIALLY_COMPLETED_DUE_TO_USER_OPT_IN            = 0x09,
  EMBER_ZCL_AMI_EVENT_STATUS_EVENT_COMPLETED_NO_USER_PARTICIPATION_PREVIOUS_OPT_OUT  = 0x0A,
  EMBER_ZCL_AMI_EVENT_STATUS_REJECTED_INVALID_CANCEL_COMMAND                         = 0xF8,
  EMBER_ZCL_AMI_EVENT_STATUS_REJECTED_INVALID_CANCEL_COMMAND_INVALID_EFFECTIVE_TIME  = 0xF9,
  EMBER_ZCL_AMI_EVENT_STATUS_REJECTED_EVENT_EXPIRED                                  = 0xFB,
  EMBER_ZCL_AMI_EVENT_STATUS_REJECTED_INVALID_CANCEL_UNDEFINED_EVENT                 = 0xFD,
  EMBER_ZCL_AMI_EVENT_STATUS_LOAD_CONTROL_EVENT_COMMAND_REJECTED                     = 0xFE
} EmberAfAmiEventStatus;

typedef enum {
  EMBER_ZCL_AMI_GET_PROFILE_STATUS_SUCCESS                                        = 0x00,
  EMBER_ZCL_AMI_GET_PROFILE_STATUS_UNDEFINED_INTERVAL_CHANNEL_REQUESTED           = 0x01,
  EMBER_ZCL_AMI_GET_PROFILE_STATUS_INTERVAL_CHANNEL_NOT_SUPPORTED                 = 0x02,
  EMBER_ZCL_AMI_GET_PROFILE_STATUS_INVALID_END_TIME                               = 0x03,
  EMBER_ZCL_AMI_GET_PROFILE_STATUS_MORE_PERIODS_REQUESTED_THAN_CAN_BE_RETURNED    = 0x04,
  EMBER_ZCL_AMI_GET_PROFILE_STATUS_NO_INTERVALS_AVAILABLE_FOR_THE_REQUESTED_TIME  = 0x05
} EmberAfAmiGetProfileStatus;

typedef enum {
  EMBER_ZCL_AMI_INTERVAL_CHANNEL_CONSUMPTION_DELIVERED  = 0x00,
  EMBER_ZCL_AMI_INTERVAL_CHANNEL_CONSUMPTION_RECEIVED   = 0x01
} EmberAfAmiIntervalChannel;

typedef enum {
  EMBER_ZCL_AMI_INTERVAL_PERIOD_DAILY       = 0x00,
  EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES60   = 0x01,
  EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES30   = 0x02,
  EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES15   = 0x03,
  EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES10   = 0x04,
  EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES7P5  = 0x05,
  EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES5    = 0x06,
  EMBER_ZCL_AMI_INTERVAL_PERIOD_MINUTES2P5  = 0x07
} EmberAfAmiIntervalPeriod;

typedef enum {
  EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_SUCCESS            = 0x00,
  EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_UNKNOWN_ISSUER     = 0x01,
  EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_BAD_KEY_CONFIRM    = 0x02,
  EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_BAD_MESSAGE        = 0x03,
  EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_NO_RESOURCES       = 0x04,
  EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_UNSUPPORTED_SUITE  = 0x05,
  EMBER_ZCL_AMI_KEY_ESTABLISHMENT_STATUS_INVALID_KEY_USAGE  = 0x06
} EmberAfAmiKeyEstablishmentStatus;

typedef enum {
  EMBER_ZCL_AMI_REGISTRATION_STATE_UNREGISTERED                    = 0x00,
  EMBER_ZCL_AMI_REGISTRATION_STATE_JOINING_NETWORK                 = 0x01,
  EMBER_ZCL_AMI_REGISTRATION_STATE_JOINED_NETWORK                  = 0x02,
  EMBER_ZCL_AMI_REGISTRATION_STATE_SUBMITTED_REGISTRATION_REQUEST  = 0x03,
  EMBER_ZCL_AMI_REGISTRATION_STATE_REGISTRATION_REJECTED           = 0x04,
  EMBER_ZCL_AMI_REGISTRATION_STATE_REGISTERED                      = 0x05,
  EMBER_ZCL_AMI_REGISTRATION_STATE_REGISTERATION_NOT_POSSIBLE      = 0x06
} EmberAfAmiRegistrationState;

typedef enum {
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_KILO_WATT_HOURS                 = 0x00,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_CUBIC_METER_PER_HOUR            = 0x01,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_CUBIC_FEET_PER_HOUR             = 0x02,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_CENTUM_CUBIC_FEET_PER_HOUR      = 0x03,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_US_GALLONS_PER_HOUR             = 0x04,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_IMPERIAL_GALLONS_PER_HOUR       = 0x05,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_BT_US_OR_BTU_PER_HOUR           = 0x06,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_LITERS_OR_LITERS_PER_HOUR       = 0x07,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_KPA_GAUGE                       = 0x08,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_KPA_ABSOLUTE                    = 0x09,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_MCF_OR_MCF_PER_SECOND           = 0x0A,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_UNITLESS                        = 0x0B,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_MJ_OR_MJ_PER_SECOND             = 0x0C,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_KILO_WATT_HOURS_BCD             = 0x80,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_CUBIC_METER_PER_HOUR_BCD        = 0x81,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_CUBIC_FEET_PER_HOUR_BCD         = 0x82,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_CENTUM_CUBIC_FEET_PER_HOUR_BCD  = 0x83,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_US_GALLONS_PER_HOUR_BCD         = 0x84,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_IMPERIAL_GALLONS_PER_HOUR_BCD   = 0x85,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_BT_US_OR_BTU_PER_HOUR_BCD       = 0x86,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_LITERS_OR_LITERS_PER_HOUR_BCD   = 0x87,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_KPA_GUAGE_BCD                   = 0x88,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_KPA_ABSOLUTE_BCD                = 0x89,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_MCF_OR_MCF_PER_SECOND_BCD       = 0x8A,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_UNITLESS_BCD                    = 0x8B,
  EMBER_ZCL_AMI_UNIT_OF_MEASURE_MJ_OR_MJ_PER_SECOND_BCD         = 0x8C
} EmberAfAmiUnitOfMeasure;

typedef enum {
  EMBER_ZCL_ANONYMOUS_DATA_STATE_NO_SOURCE_FOUND  = 0x00,
  EMBER_ZCL_ANONYMOUS_DATA_STATE_SOURCE_FOUND     = 0x01
} EmberAfAnonymousDataState;

typedef enum {
  EMBER_ZCL_APPLIANCE_STATUS_OFF                          = 0x01,
  EMBER_ZCL_APPLIANCE_STATUS_STAND_BY                     = 0x02,
  EMBER_ZCL_APPLIANCE_STATUS_PROGRAMMED                   = 0x03,
  EMBER_ZCL_APPLIANCE_STATUS_PROGRAMMED_WAITING_TO_START  = 0x04,
  EMBER_ZCL_APPLIANCE_STATUS_RUNNING                      = 0x05,
  EMBER_ZCL_APPLIANCE_STATUS_PAUSE                        = 0x06,
  EMBER_ZCL_APPLIANCE_STATUS_END_PROGRAMMED               = 0x07,
  EMBER_ZCL_APPLIANCE_STATUS_FAILURE                      = 0x08,
  EMBER_ZCL_APPLIANCE_STATUS_PROGRAMME_INTERRUPTED        = 0x09,
  EMBER_ZCL_APPLIANCE_STATUS_IDLE                         = 0x0A,
  EMBER_ZCL_APPLIANCE_STATUS_RINSE_HOLD                   = 0x0B,
  EMBER_ZCL_APPLIANCE_STATUS_SERVICE                      = 0x0C,
  EMBER_ZCL_APPLIANCE_STATUS_SUPERFREEZING                = 0x0D,
  EMBER_ZCL_APPLIANCE_STATUS_SUPERCOOLING                 = 0x0E,
  EMBER_ZCL_APPLIANCE_STATUS_SUPERHEATING                 = 0x0F
} EmberAfApplianceStatus;

typedef enum {
  EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_DENY_WRITE                = 0x00,
  EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_NORMAL        = 0x01,
  EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_OF_READ_ONLY  = 0x02,
  EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_UNSUPPORTED_ATTRIBUTE     = 0x86,
  EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_INVALID_VALUE             = 0x87,
  EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_READ_ONLY                 = 0x88,
  EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_INVALID_DATA_TYPE         = 0x8D
} EmberAfAttributeWritePermission;

typedef enum {
  EMBER_ZCL_BATTERY_SIZE_NO_BATTERY  = 0x00,
  EMBER_ZCL_BATTERY_SIZE_BUILT_IN    = 0x01,
  EMBER_ZCL_BATTERY_SIZE_OTHER       = 0x02,
  EMBER_ZCL_BATTERY_SIZE_AA          = 0x03,
  EMBER_ZCL_BATTERY_SIZE_AAA         = 0x04,
  EMBER_ZCL_BATTERY_SIZE_C           = 0x05,
  EMBER_ZCL_BATTERY_SIZE_D           = 0x06,
  EMBER_ZCL_BATTERY_SIZE_UNKNOWN     = 0xFF
} EmberAfBatterySize;

typedef enum {
  EMBER_ZCL_BILLING_PERIOD_DURATION_UNITS_MINUTES  = 0x000000,
  EMBER_ZCL_BILLING_PERIOD_DURATION_UNITS_DAYS     = 0x400000,
  EMBER_ZCL_BILLING_PERIOD_DURATION_UNITS_WEEKS    = 0x800000,
  EMBER_ZCL_BILLING_PERIOD_DURATION_UNITS_MONTHS   = 0xC00000
} EmberAfBillingPeriodDurationUnits;

typedef enum {
  EMBER_ZCL_BLOCK_NO_BLOCKS_IN_USE  = 0x00,
  EMBER_ZCL_BLOCK_BLOCK1            = 0x01,
  EMBER_ZCL_BLOCK_BLOCK2            = 0x02,
  EMBER_ZCL_BLOCK_BLOCK3            = 0x03,
  EMBER_ZCL_BLOCK_BLOCK4            = 0x04,
  EMBER_ZCL_BLOCK_BLOCK5            = 0x05,
  EMBER_ZCL_BLOCK_BLOCK6            = 0x06,
  EMBER_ZCL_BLOCK_BLOCK7            = 0x07,
  EMBER_ZCL_BLOCK_BLOCK8            = 0x08,
  EMBER_ZCL_BLOCK_BLOCK9            = 0x09,
  EMBER_ZCL_BLOCK_BLOCK10           = 0x0A,
  EMBER_ZCL_BLOCK_BLOCK11           = 0x0B,
  EMBER_ZCL_BLOCK_BLOCK12           = 0x0C,
  EMBER_ZCL_BLOCK_BLOCK13           = 0x0D,
  EMBER_ZCL_BLOCK_BLOCK14           = 0x0E,
  EMBER_ZCL_BLOCK_BLOCK15           = 0x0F,
  EMBER_ZCL_BLOCK_BLOCK16           = 0x10
} EmberAfBlock;

typedef enum {
  EMBER_ZCL_BLOCK_PERIOD_CONTROL_PRICE_ACKNOWLEDGEMENT_PRICE_ACKNOWLEDGEMENT_REQUIRED      = 0x00,
  EMBER_ZCL_BLOCK_PERIOD_CONTROL_PRICE_ACKNOWLEDGEMENT_PRICE_ACKNOWLEDGEMENT_NOT_REQUIRED  = 0x01
} EmberAfBlockPeriodControlPriceAcknowledgement;

typedef enum {
  EMBER_ZCL_BLOCK_PERIOD_DURATION_UNITS_MINUTES  = 0x000000,
  EMBER_ZCL_BLOCK_PERIOD_DURATION_UNITS_DAYS     = 0x400000,
  EMBER_ZCL_BLOCK_PERIOD_DURATION_UNITS_WEEKS    = 0x800000,
  EMBER_ZCL_BLOCK_PERIOD_DURATION_UNITS_MONTHS   = 0xC00000
} EmberAfBlockPeriodDurationUnits;

typedef enum {
  EMBER_ZCL_C_O2_UNIT_KILOGRAM_PER_KILOWATT_HOUR  = 0x01,
  EMBER_ZCL_C_O2_UNIT_GALLONS_OF_GASOLINE         = 0x02,
  EMBER_ZCL_C_O2_UNIT_THERMS_OF_NATURAL_GAS       = 0x03
} EmberAfCO2Unit;

typedef enum {
  EMBER_ZCL_CALENDAR_TIME_REFERENCE_STANDARD_TIME  = 0x00,
  EMBER_ZCL_CALENDAR_TIME_REFERENCE_LOCAL_TIME     = 0x01
} EmberAfCalendarTimeReference;

typedef enum {
  EMBER_ZCL_CALENDAR_TYPE_DELIVERED_CALENDAR               = 0x00,
  EMBER_ZCL_CALENDAR_TYPE_RECEIVED_CALENDAR                = 0x01,
  EMBER_ZCL_CALENDAR_TYPE_DELIVERED_AND_RECEIVED_CALENDAR  = 0x02,
  EMBER_ZCL_CALENDAR_TYPE_FRIENDLY_CREDIT_CALENDAR         = 0x03,
  EMBER_ZCL_CALENDAR_TYPE_AUXILLIARY_LOAD_SWITCH_CALENDAR  = 0x04
} EmberAfCalendarType;

typedef enum {
  EMBER_ZCL_CALORIFIC_VALUE_UNIT_MEGAJOULE_PER_CUBIC_METER  = 0x01,
  EMBER_ZCL_CALORIFIC_VALUE_UNIT_MEGAJOULE_PER_KILOGRAM     = 0x02
} EmberAfCalorificValueUnit;

typedef enum {
  EMBER_ZCL_CECED_SPECIFICATION_VERSION_COMPLIANT_WITH_V10_NOT_CERTIFIED  = 0x10,
  EMBER_ZCL_CECED_SPECIFICATION_VERSION_COMPLIANT_WITH_V10_CERTIFIED      = 0x1A
} EmberAfCecedSpecificationVersion;

typedef enum {
  EMBER_ZCL_CHANGE_DEBT_DEBT_TYPE_TYPE1_ABSOLUTE     = 0x00,
  EMBER_ZCL_CHANGE_DEBT_DEBT_TYPE_TYPE1_INCREMENTAL  = 0x01,
  EMBER_ZCL_CHANGE_DEBT_DEBT_TYPE_TYPE2_ABSOLUTE     = 0x02,
  EMBER_ZCL_CHANGE_DEBT_DEBT_TYPE_TYPE2_INCREMENTAL  = 0x03,
  EMBER_ZCL_CHANGE_DEBT_DEBT_TYPE_TYPE3_ABSOLUTE     = 0x04,
  EMBER_ZCL_CHANGE_DEBT_DEBT_TYPE_TYPE3_INCREMENTAL  = 0x05
} EmberAfChangeDebtDebtType;

typedef enum {
  EMBER_ZCL_CHANGE_REPORTING_PROFILE_UNITS_MINUTES  = 0x000000,
  EMBER_ZCL_CHANGE_REPORTING_PROFILE_UNITS_DAYS     = 0x400000,
  EMBER_ZCL_CHANGE_REPORTING_PROFILE_UNITS_WEEKS    = 0x800000,
  EMBER_ZCL_CHANGE_REPORTING_PROFILE_UNITS_MONTHS   = 0xC00000
} EmberAfChangeReportingProfileUnits;

typedef enum {
  EMBER_ZCL_COLOR_LOOP_ACTION_DEACTIVATE                                   = 0x00,
  EMBER_ZCL_COLOR_LOOP_ACTION_ACTIVATE_FROM_COLOR_LOOP_START_ENHANCED_HUE  = 0x01,
  EMBER_ZCL_COLOR_LOOP_ACTION_ACTIVATE_FROM_ENHANCED_CURRENT_HUE           = 0x02
} EmberAfColorLoopAction;

typedef enum {
  EMBER_ZCL_COLOR_LOOP_DIRECTION_DECREMENT_HUE  = 0x00,
  EMBER_ZCL_COLOR_LOOP_DIRECTION_INCREMENT_HUE  = 0x01
} EmberAfColorLoopDirection;

typedef enum {
  EMBER_ZCL_COLOR_MODE_CURRENT_HUE_AND_CURRENT_SATURATION  = 0x00,
  EMBER_ZCL_COLOR_MODE_CURRENT_X_AND_CURRENT_Y             = 0x01,
  EMBER_ZCL_COLOR_MODE_COLOR_TEMPERATURE                   = 0x02
} EmberAfColorMode;

typedef enum {
  EMBER_ZCL_COMMAND_IDENTIFICATION_START                   = 0x01,
  EMBER_ZCL_COMMAND_IDENTIFICATION_STOP                    = 0x02,
  EMBER_ZCL_COMMAND_IDENTIFICATION_PAUSE                   = 0x03,
  EMBER_ZCL_COMMAND_IDENTIFICATION_START_SUPERFREEZING     = 0x04,
  EMBER_ZCL_COMMAND_IDENTIFICATION_STOP_SUPERFREEZING      = 0x05,
  EMBER_ZCL_COMMAND_IDENTIFICATION_START_SUPERCOOLING      = 0x06,
  EMBER_ZCL_COMMAND_IDENTIFICATION_STOP_SUPERCOOLING       = 0x07,
  EMBER_ZCL_COMMAND_IDENTIFICATION_DISABLE_GAS             = 0x08,
  EMBER_ZCL_COMMAND_IDENTIFICATION_ENABLE_GAS              = 0x09,
  EMBER_ZCL_COMMAND_IDENTIFICATION_ENABLE_ENERGY_CONTROL   = 0x0A,
  EMBER_ZCL_COMMAND_IDENTIFICATION_DISABLE_ENERGY_CONTROL  = 0x0B
} EmberAfCommandIdentification;

typedef enum {
  EMBER_ZCL_COMMISSIONING_STARTUP_CONTROL_NO_ACTION           = 0x00,
  EMBER_ZCL_COMMISSIONING_STARTUP_CONTROL_FORM_NETWORK        = 0x01,
  EMBER_ZCL_COMMISSIONING_STARTUP_CONTROL_REJOIN_NETWORK      = 0x02,
  EMBER_ZCL_COMMISSIONING_STARTUP_CONTROL_START_FROM_SCRATCH  = 0x03
} EmberAfCommissioningStartupControl;

typedef enum {
  EMBER_ZCL_CPP_EVENT_RESPONSE_CPP_AUTH_ACCEPTED  = 0x01,
  EMBER_ZCL_CPP_EVENT_RESPONSE_CPP_AUTH_REJECTED  = 0x02
} EmberAfCppEventResponseCppAuth;

typedef enum {
  EMBER_ZCL_CREDIT_ADJUSTMENT_TYPE_CREDIT_INCREMENTAL  = 0x00,
  EMBER_ZCL_CREDIT_ADJUSTMENT_TYPE_CREDIT_ABSOLUTE     = 0x01
} EmberAfCreditAdjustmentType;

typedef enum {
  EMBER_ZCL_CREDIT_PAYMENT_STATUS_PENDING             = 0x00,
  EMBER_ZCL_CREDIT_PAYMENT_STATUS_RECEIVED_PAID       = 0x01,
  EMBER_ZCL_CREDIT_PAYMENT_STATUS_OVERDUE             = 0x02,
  EMBER_ZCL_CREDIT_PAYMENT_STATUS_2_PAYMENTS_OVERDUE  = 0x03,
  EMBER_ZCL_CREDIT_PAYMENT_STATUS_3_PAYMENTS_OVERDUE  = 0x04
} EmberAfCreditPaymentStatus;

typedef enum {
  EMBER_ZCL_DATA_QUALITY_ID_ALL_DATA_CERTIFIED                        = 0x0000,
  EMBER_ZCL_DATA_QUALITY_ID_ONLY_INSTANTANEOUS_POWER_NOT_CERTIFIED    = 0x0001,
  EMBER_ZCL_DATA_QUALITY_ID_ONLY_CUMULATED_CONSUMPTION_NOT_CERTIFIED  = 0x0002,
  EMBER_ZCL_DATA_QUALITY_ID_NOT_CERTIFIED_DATA                        = 0x0003
} EmberAfDataQualityId;

typedef enum {
  EMBER_ZCL_DEBT_RECOVERY_METHOD_TIME_BASED      = 0x00,
  EMBER_ZCL_DEBT_RECOVERY_METHOD_BALANCE_BASED   = 0x01,
  EMBER_ZCL_DEBT_RECOVERY_METHOD_CATCH_UP_BASED  = 0x02
} EmberAfDebtRecoveryMethod;

typedef enum {
  EMBER_ZCL_DEHUMIDIFCATION_LOCKOUT_NOT_ALLOWED  = 0x00,
  EMBER_ZCL_DEHUMIDIFCATION_LOCKOUT_ALLOWED      = 0x01
} EmberAfDehumidifcationLockout;

typedef enum {
  EMBER_ZCL_DEVICE_INFORMATION_RECORD_SORT_NOT_SORTED       = 0x00,
  EMBER_ZCL_DEVICE_INFORMATION_RECORD_SORT_TOP_OF_THE_LIST  = 0x01
} EmberAfDeviceInformationRecordSort;

typedef enum {
  EMBER_ZCL_DEVICE_STATUS2_STRUCTURE_IRIS_SYMPTOM_CODE  = 0x20
} EmberAfDeviceStatus2Structure;

typedef enum {
  EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_KEYPAD         = 0x00,
  EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_RF             = 0x01,
  EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_MANUAL         = 0x02,
  EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_RFID           = 0x03,
  EMBER_ZCL_DOOR_LOCK_EVENT_SOURCE_INDETERMINATE  = 0xFF
} EmberAfDoorLockEventSource;

typedef enum {
  EMBER_ZCL_DOOR_LOCK_EVENT_TYPE_OPERATION    = 0x00,
  EMBER_ZCL_DOOR_LOCK_EVENT_TYPE_PROGRAMMING  = 0x01,
  EMBER_ZCL_DOOR_LOCK_EVENT_TYPE_ALARM        = 0x02
} EmberAfDoorLockEventType;

typedef enum {
  EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_NORMAL_MODE             = 0x00,
  EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_VACATION_MODE           = 0x01,
  EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_PRIVACY_MODE            = 0x02,
  EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_NO_RF_LOCK_OR_UNLOCK    = 0x03,
  EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_LOCAL_PROGRAMMING_MODE  = 0x04,
  EMBER_ZCL_DOOR_LOCK_OPERATING_MODE_PASSAGE_MODE            = 0x05
} EmberAfDoorLockOperatingMode;

typedef enum {
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_UNKNOWN_OR_MFG_SPECIFIC   = 0x00,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_LOCK                      = 0x01,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_UNLOCK                    = 0x02,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_LOCK_INVALID_PIN_OR_ID    = 0x03,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_LOCK_INVALID_SCHEDULE     = 0x04,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_UNLOCK_INVALID_PIN_OR_ID  = 0x05,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_UNLOCK_INVALID_SCHEDULE   = 0x06,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_ONE_TOUCH_LOCK            = 0x07,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_KEY_LOCK                  = 0x08,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_KEY_UNLOCK                = 0x09,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_AUTO_LOCK                 = 0x0A,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_SCHEDULE_LOCK             = 0x0B,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_SCHEDULE_UNLOCK           = 0x0C,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_MANUAL_LOCK               = 0x0D,
  EMBER_ZCL_DOOR_LOCK_OPERATION_EVENT_CODE_MANUAL_UNLOCK             = 0x0E
} EmberAfDoorLockOperationEventCode;

typedef enum {
  EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_UNKNOWN_OR_MFG_SPECIFIC  = 0x00,
  EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_MASTER_CODE_CHANGED      = 0x01,
  EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_PIN_ADDED                = 0x02,
  EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_PIN_DELETED              = 0x03,
  EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_PIN_CHANGED              = 0x04,
  EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_ID_ADDED                 = 0x05,
  EMBER_ZCL_DOOR_LOCK_PROGRAMMING_EVENT_CODE_ID_DELETED               = 0x06
} EmberAfDoorLockProgrammingEventCode;

typedef enum {
  EMBER_ZCL_DOOR_LOCK_SECURITY_LEVEL_NETWORK_SECURITY  = 0x00,
  EMBER_ZCL_DOOR_LOCK_SECURITY_LEVEL_APS_SECURITY      = 0x01
} EmberAfDoorLockSecurityLevel;

typedef enum {
  EMBER_ZCL_DOOR_LOCK_SET_PIN_OR_ID_STATUS_SUCCESS               = 0x00,
  EMBER_ZCL_DOOR_LOCK_SET_PIN_OR_ID_STATUS_GENERAL_FAILURE       = 0x01,
  EMBER_ZCL_DOOR_LOCK_SET_PIN_OR_ID_STATUS_MEMORY_FULL           = 0x02,
  EMBER_ZCL_DOOR_LOCK_SET_PIN_OR_ID_STATUS_DUPLICATE_CODE_ERROR  = 0x03
} EmberAfDoorLockSetPinOrIdStatus;

typedef enum {
  EMBER_ZCL_DOOR_LOCK_SOUND_VOLUME_SILENT  = 0x00,
  EMBER_ZCL_DOOR_LOCK_SOUND_VOLUME_LOW     = 0x01,
  EMBER_ZCL_DOOR_LOCK_SOUND_VOLUME_HIGH    = 0x02
} EmberAfDoorLockSoundVolume;

typedef enum {
  EMBER_ZCL_DOOR_LOCK_STATE_NOT_FULLY_LOCKED  = 0x00,
  EMBER_ZCL_DOOR_LOCK_STATE_LOCKED            = 0x01,
  EMBER_ZCL_DOOR_LOCK_STATE_UNLOCKED          = 0x02
} EmberAfDoorLockState;

typedef enum {
  EMBER_ZCL_DOOR_LOCK_TYPE_DEAD_BOLT       = 0x00,
  EMBER_ZCL_DOOR_LOCK_TYPE_MAGNETIC        = 0x01,
  EMBER_ZCL_DOOR_LOCK_TYPE_MORTISE         = 0x02,
  EMBER_ZCL_DOOR_LOCK_TYPE_RIM             = 0x03,
  EMBER_ZCL_DOOR_LOCK_TYPE_LATCH_BOLT      = 0x04,
  EMBER_ZCL_DOOR_LOCK_TYPE_CYLINDRICAL     = 0x05,
  EMBER_ZCL_DOOR_LOCK_TYPE_TUBULAR         = 0x06,
  EMBER_ZCL_DOOR_LOCK_TYPE_INTERCONNECTED  = 0x07,
  EMBER_ZCL_DOOR_LOCK_TYPE_DEAD_LATCH      = 0x08,
  EMBER_ZCL_DOOR_LOCK_TYPE_OTHER           = 0x09
} EmberAfDoorLockType;

typedef enum {
  EMBER_ZCL_DOOR_LOCK_USER_STATUS_AVAILABLE          = 0x00,
  EMBER_ZCL_DOOR_LOCK_USER_STATUS_OCCUPIED_ENABLED   = 0x01,
  EMBER_ZCL_DOOR_LOCK_USER_STATUS_OCCUPIED_DISABLED  = 0x03,
  EMBER_ZCL_DOOR_LOCK_USER_STATUS_NOT_SUPPORTED      = 0xFF
} EmberAfDoorLockUserStatus;

typedef enum {
  EMBER_ZCL_DOOR_LOCK_USER_TYPE_UNRESTRICTED        = 0x00,
  EMBER_ZCL_DOOR_LOCK_USER_TYPE_ONE_TIME_USER       = 0x01,
  EMBER_ZCL_DOOR_LOCK_USER_TYPE_USER_WITH_SCHEDULE  = 0x02,
  EMBER_ZCL_DOOR_LOCK_USER_TYPE_MASTER_USER         = 0x03,
  EMBER_ZCL_DOOR_LOCK_USER_TYPE_NOT_SUPPORTED       = 0xFF
} EmberAfDoorLockUserType;

typedef enum {
  EMBER_ZCL_DOOR_STATE_OPEN               = 0x00,
  EMBER_ZCL_DOOR_STATE_CLOSED             = 0x01,
  EMBER_ZCL_DOOR_STATE_ERROR_JAMMED       = 0x02,
  EMBER_ZCL_DOOR_STATE_ERROR_FORCED_OPEN  = 0x03,
  EMBER_ZCL_DOOR_STATE_ERROR_UNSPECIFIED  = 0x04
} EmberAfDoorState;

typedef enum {
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_LOW_VOLTAGE_L1            = 0x40,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_HIGH_VOLTAGE_L1           = 0x41,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_LOW_VOLTAGE_L2            = 0x42,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_HIGH_VOLTAGE_L2           = 0x43,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_LOW_VOLTAGE_L3            = 0x44,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_HIGH_VOLTAGE_L3           = 0x45,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_OVER_CURRENT_L1           = 0x46,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_OVER_CURRENT_L2           = 0x47,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_OVER_CURRENT_L3           = 0x48,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_LOW_L1      = 0x49,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_HIGH_L1     = 0x4A,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_LOW_L2      = 0x4B,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_HIGH_L2     = 0x4C,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_LOW_L3      = 0x4D,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_FREQUENCY_TOO_HIGH_L3     = 0x4E,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_GROUND_FAULT              = 0x4F,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_ELECTRIC_TAMPER_DETECT    = 0x50,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_TERMINAL_COVER_REMOVED    = 0x51,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_INCORRECT_POLARITY        = 0x52,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_CURRENT_WITH_NO_VOLTAGE   = 0x53,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_LIMIT_THRESHOLD_EXCEEDED  = 0x54,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_UNDER_VOLTAGE             = 0x55,
  EMBER_ZCL_ELECTRICITY_ALARM_GROUPS_OVER_VOLTAGE              = 0x56
} EmberAfElectricityAlarmGroups;

typedef enum {
  EMBER_ZCL_ENHANCED_COLOR_MODE_CURRENT_HUE_AND_CURRENT_SATURATION           = 0x00,
  EMBER_ZCL_ENHANCED_COLOR_MODE_CURRENT_X_AND_CURRENT_Y                      = 0x01,
  EMBER_ZCL_ENHANCED_COLOR_MODE_COLOR_TEMPERATURE                            = 0x02,
  EMBER_ZCL_ENHANCED_COLOR_MODE_ENHANCED_CURRENT_HUE_AND_CURRENT_SATURATION  = 0x03
} EmberAfEnhancedColorMode;

typedef enum {
  EMBER_ZCL_EVENT_CONFIGURATION_DO_NOT_LOG               = 0x00,
  EMBER_ZCL_EVENT_CONFIGURATION_LOG_IN_TO_TAMPER         = 0x01,
  EMBER_ZCL_EVENT_CONFIGURATION_LOG_IN_TO_FAULT          = 0x02,
  EMBER_ZCL_EVENT_CONFIGURATION_LOG_IN_TO_GENERAL_EVENT  = 0x03,
  EMBER_ZCL_EVENT_CONFIGURATION_LOG_IN_TO_LOG4           = 0x04,
  EMBER_ZCL_EVENT_CONFIGURATION_LOG_IN_TO_LOG5           = 0x05,
  EMBER_ZCL_EVENT_CONFIGURATION_LOG_IN_TO_LOG6           = 0x06
} EmberAfEventConfiguration;

typedef enum {
  EMBER_ZCL_EVENT_ID_METER_COVER_REMOVED                    = 0x00,
  EMBER_ZCL_EVENT_ID_METER_COVER_CLOSED                     = 0x01,
  EMBER_ZCL_EVENT_ID_STRONG_MAGNETIC_FIELD                  = 0x02,
  EMBER_ZCL_EVENT_ID_NO_STRONG_MAGNETIC_FIELD               = 0x03,
  EMBER_ZCL_EVENT_ID_BATTERY_FAILURE                        = 0x04,
  EMBER_ZCL_EVENT_ID_LOW_BATTERY                            = 0x05,
  EMBER_ZCL_EVENT_ID_PROGRAM_MEMORY_ERROR                   = 0x06,
  EMBER_ZCL_EVENT_ID_RAM_ERROR                              = 0x07,
  EMBER_ZCL_EVENT_ID_NV_MEMORY_ERROR                        = 0x08,
  EMBER_ZCL_EVENT_ID_MEASUREMENT_SYSTEM_ERROR               = 0x09,
  EMBER_ZCL_EVENT_ID_WATCHDOG_ERROR                         = 0x0A,
  EMBER_ZCL_EVENT_ID_SUPPLY_DISCONNECT_FAILURE              = 0x0B,
  EMBER_ZCL_EVENT_ID_SUPPLY_CONNECT_FAILURE                 = 0x0C,
  EMBER_ZCL_EVENT_ID_MEASURMENT_SOFTWARE_CHANGED            = 0x0D,
  EMBER_ZCL_EVENT_ID_DST_ENABLED                            = 0x0E,
  EMBER_ZCL_EVENT_ID_DST_DISABLED                           = 0x0F,
  EMBER_ZCL_EVENT_ID_CLOCK_ADJ_BACKWARD                     = 0x10,
  EMBER_ZCL_EVENT_ID_CLOCK_ADJ_FORWARD                      = 0x11,
  EMBER_ZCL_EVENT_ID_CLOCK_INVALID                          = 0x12,
  EMBER_ZCL_EVENT_ID_COMMS_ERROR_HAN                        = 0x13,
  EMBER_ZCL_EVENT_ID_COMMS_OK_HAN                           = 0x14,
  EMBER_ZCL_EVENT_ID_FRAUD_ATTEMPT                          = 0x15,
  EMBER_ZCL_EVENT_ID_POWER_LOSS                             = 0x16,
  EMBER_ZCL_EVENT_ID_INCORRECT_PROTOCOL                     = 0x17,
  EMBER_ZCL_EVENT_ID_UNUSUAL_HAN_TRAFFIC                    = 0x18,
  EMBER_ZCL_EVENT_ID_UNEXPECTED_CLOCK_CHANGE                = 0x19,
  EMBER_ZCL_EVENT_ID_COMMS_USING_UNAUTHENTICATED_COMPONENT  = 0x1A,
  EMBER_ZCL_EVENT_ID_ERROR_REG_CLEAR                        = 0x1B,
  EMBER_ZCL_EVENT_ID_ALARM_REG_CLEAR                        = 0x1C,
  EMBER_ZCL_EVENT_ID_UNEXPECTED_HW_RESET                    = 0x1D,
  EMBER_ZCL_EVENT_ID_UNEXPECTED_PROGRAM_EXECUTION           = 0x1E,
  EMBER_ZCL_EVENT_ID_EVENT_LOG_CLEARED                      = 0x1F,
  EMBER_ZCL_EVENT_ID_MANUAL_DISCONNECT                      = 0x20,
  EMBER_ZCL_EVENT_ID_MANUAL_CONNECT                         = 0x21,
  EMBER_ZCL_EVENT_ID_REMOTE_DISCONNECTION                   = 0x22,
  EMBER_ZCL_EVENT_ID_LOCAL_DISCONNECTION                    = 0x23,
  EMBER_ZCL_EVENT_ID_LIMIT_THRESHOLD_EXCEEDED               = 0x24,
  EMBER_ZCL_EVENT_ID_LIMIT_THRESHOLD_OK                     = 0x25,
  EMBER_ZCL_EVENT_ID_LIMIT_THRESHOLD_CHANGED                = 0x26,
  EMBER_ZCL_EVENT_ID_MAXIMUM_DEMAND_EXCEEDED                = 0x27,
  EMBER_ZCL_EVENT_ID_PROFILE_CLEARED                        = 0x28,
  EMBER_ZCL_EVENT_ID_FIRMWARE_READY_FOR_ACTIVATION          = 0x29,
  EMBER_ZCL_EVENT_ID_FIRMWARE_ACTIVATED                     = 0x2A,
  EMBER_ZCL_EVENT_ID_PATCH_FAILURE                          = 0x2B,
  EMBER_ZCL_EVENT_ID_TOU_TARIFF_ACTIVATION                  = 0x2C,
  EMBER_ZCL_EVENT_ID_8X8_TARIFFACTIVATED                    = 0x2D,
  EMBER_ZCL_EVENT_ID_SINGLE_TARIFF_RATE_ACTIVATED           = 0x2E,
  EMBER_ZCL_EVENT_ID_ASYNCHRONOUS_BILLING_OCCURRED          = 0x2F,
  EMBER_ZCL_EVENT_ID_SYNCHRONOUS_BILLING_OCCURRED           = 0x30,
  EMBER_ZCL_EVENT_ID_INCORRECT_POLARITY                     = 0x80,
  EMBER_ZCL_EVENT_ID_CURRENT_NO_VOLTAGE                     = 0x81,
  EMBER_ZCL_EVENT_ID_UNDER_VOLTAGE                          = 0x82,
  EMBER_ZCL_EVENT_ID_OVER_VOLTAGE                           = 0x83,
  EMBER_ZCL_EVENT_ID_NORMAL_VOLTAGE                         = 0x84,
  EMBER_ZCL_EVENT_ID_PF_BELOW_THRESHOLD                     = 0x85,
  EMBER_ZCL_EVENT_ID_PF_ABOVE_THRESHOLD                     = 0x86,
  EMBER_ZCL_EVENT_ID_TERMINAL_COVER_REMOVED                 = 0x87,
  EMBER_ZCL_EVENT_ID_TERMINAL_COVER_CLOSED                  = 0x88,
  EMBER_ZCL_EVENT_ID_REVERSE_FLOW                           = 0xA0,
  EMBER_ZCL_EVENT_ID_TILT_TAMPER                            = 0xA1,
  EMBER_ZCL_EVENT_ID_BATTERY_COVER_REMOVED                  = 0xA2,
  EMBER_ZCL_EVENT_ID_BATTERY_COVER_CLOSED                   = 0xA3,
  EMBER_ZCL_EVENT_ID_EXCESS_FLOW                            = 0xA4,
  EMBER_ZCL_EVENT_ID_EMERGENCY_CREDIT_IN_USE                = 0xC0,
  EMBER_ZCL_EVENT_ID_EMERGENCY_CREDIT_EXHAUSTED             = 0xC1,
  EMBER_ZCL_EVENT_ID_ZERO_CREDIT_EC_NOT_SELECTED            = 0xC2,
  EMBER_ZCL_EVENT_ID_SUPPLY_ON                              = 0xC3,
  EMBER_ZCL_EVENT_ID_SUPPLY_OFF_AARMED                      = 0xC4,
  EMBER_ZCL_EVENT_ID_SUPPLY_OFF                             = 0xC5,
  EMBER_ZCL_EVENT_ID_DISCOUNT_APPLIED                       = 0xC6,
  EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_A                = 0xE0,
  EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_B                = 0xE1,
  EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_C                = 0xE2,
  EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_D                = 0xE3,
  EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_E                = 0xE4,
  EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_F                = 0xE5,
  EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_G                = 0xE6,
  EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_H                = 0xE7,
  EMBER_ZCL_EVENT_ID_MANUFACTURER_SPECIFIC_I                = 0xE8
} EmberAfEventId;

typedef enum {
  EMBER_ZCL_EVENT_IDENTIFICATION_END_OF_CYCLE         = 0x01,
  EMBER_ZCL_EVENT_IDENTIFICATION_TEMPERATURE_REACHED  = 0x04,
  EMBER_ZCL_EVENT_IDENTIFICATION_END_OF_COOKING       = 0x05,
  EMBER_ZCL_EVENT_IDENTIFICATION_SWITCHING_OFF        = 0x06,
  EMBER_ZCL_EVENT_IDENTIFICATION_WRONG_DATA           = 0x07
} EmberAfEventIdentification;

typedef enum {
  EMBER_ZCL_EZ_MODE_COMMISSIONING_CLUSTER_TYPE_SERVER  = 0x00,
  EMBER_ZCL_EZ_MODE_COMMISSIONING_CLUSTER_TYPE_CLIENT  = 0x01
} EmberAfEzModeCommissioningClusterType;

typedef enum {
  EMBER_ZCL_FAN_MODE_OFF     = 0x00,
  EMBER_ZCL_FAN_MODE_LOW     = 0x01,
  EMBER_ZCL_FAN_MODE_MEDIUM  = 0x02,
  EMBER_ZCL_FAN_MODE_HIGH    = 0x03,
  EMBER_ZCL_FAN_MODE_ON      = 0x04,
  EMBER_ZCL_FAN_MODE_AUTO    = 0x05,
  EMBER_ZCL_FAN_MODE_SMART   = 0x06
} EmberAfFanMode;

typedef enum {
  EMBER_ZCL_FAN_MODE_SEQUENCE_LOW_MED_HIGH       = 0x00,
  EMBER_ZCL_FAN_MODE_SEQUENCE_LOW_HIGH           = 0x01,
  EMBER_ZCL_FAN_MODE_SEQUENCE_LOW_MED_HIGH_AUTO  = 0x02,
  EMBER_ZCL_FAN_MODE_SEQUENCE_LOW_HIGH_AUTO      = 0x03,
  EMBER_ZCL_FAN_MODE_SEQUENCE_ON_AUTO            = 0x04
} EmberAfFanModeSequence;

typedef enum {
  EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_BATTERY_COVER_REMOVED  = 0xA0,
  EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_TILT_TAMPER            = 0xA1,
  EMBER_ZCL_GAS_SPECIFIC_ALARM_GROUPS_EXCESS_FLOW            = 0xA2
} EmberAfGasSpecificAlarmGroups;

typedef enum {
  EMBER_ZCL_GENERIC_ALARM_GROUP_LOW_CREDIT                  = 0x00,
  EMBER_ZCL_GENERIC_ALARM_GROUP_NO_CREDIT_ZERO_CREDIT       = 0x01,
  EMBER_ZCL_GENERIC_ALARM_GROUP_CREDIT_EXHAUSTED            = 0x02,
  EMBER_ZCL_GENERIC_ALARM_GROUP_EMERGENCY_CREDIT_ENABLED    = 0x03,
  EMBER_ZCL_GENERIC_ALARM_GROUP_EMERGENCY_CREDIT_EXHAUSTED  = 0x04
} EmberAfGenericAlarmGroup;

typedef enum {
  EMBER_ZCL_GENERIC_ALARM_GROUPS_CHECK_METER                      = 0x00,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_LOW_BATTERY                      = 0x01,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_TAMPER_DETECT                    = 0x02,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_LEAK_DETECT                      = 0x05,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_SERVICE_DISCONNECT               = 0x06,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_METER_COVER_REMOVED              = 0x08,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_STRONG_MAGNETIC_FIELD_DETECTED   = 0x09,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_BATTERY_FAILURE                  = 0x0A,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_PROGRAM_MEMORY_ERROR             = 0x0B,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_RAM_ERROR                        = 0x0C,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_NV_MEMORY_ERROR                  = 0x0D,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_MEASUREMENT_SYSTEM_ERROR         = 0x0E,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_WATCHDOG_ERROR                   = 0x0F,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_SUPPLY_DISCONNECT_FAILURE        = 0x10,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_SUPPLY_CONNECT_FAILURE           = 0x11,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_MEASUREMENT_SW_CHANGED_TAMPERED  = 0x12,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_DAY_LIGHT_SAVING_ENABLED         = 0x13,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_CLOCK_INVALID                    = 0x14,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_COMMUNICATIONS_TAMPER            = 0x15
} EmberAfGenericAlarmGroups;

typedef enum {
  EMBER_ZCL_GENERIC_ALARM_GROUPS_ELECTRICITY_POWER_FAILURE  = 0x03,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_ELECTRICITY_POWER_QUALITY  = 0x04
} EmberAfGenericAlarmGroupsElectricity;

typedef enum {
  EMBER_ZCL_GENERIC_ALARM_GROUPS_GAS_LOW_PRESSURE  = 0x04,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_GAS_REVERSE_FLOW  = 0x07
} EmberAfGenericAlarmGroupsGas;

typedef enum {
  EMBER_ZCL_GENERIC_ALARM_GROUPS_HEAT_COOLING_TEMPERATURE_SENSOR  = 0x03,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_HEAT_COOLING_BURST_DETECT        = 0x04,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_HEAT_COOLING_FLOW_SENSOR         = 0x07
} EmberAfGenericAlarmGroupsHeatCooling;

typedef enum {
  EMBER_ZCL_GENERIC_ALARM_GROUPS_WATER_WATER_PIPE_EMPTY    = 0x03,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_WATER_WATER_LOW_PRESSURE  = 0x04,
  EMBER_ZCL_GENERIC_ALARM_GROUPS_WATER_WATER_REVERSE_FLOW  = 0x07
} EmberAfGenericAlarmGroupsWater;

typedef enum {
  EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_BURST_DETECT                     = 0x70,
  EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_PRESSURE_TOO_LOW                 = 0x71,
  EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_PRESSURE_TOO_HIGH                = 0x72,
  EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_FLOW_SENSOR_COMMUNICATION_ERROR  = 0x73,
  EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_FLOW_SENSOR_MEASUREMENT_FAULT    = 0x74,
  EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_FLOW_SENSOR_REVERSE_FLOW         = 0x75,
  EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_FLOW_SENSOR_AIR_DETECT           = 0x76,
  EMBER_ZCL_GENERIC_FLOW_PRESSURE_ALARM_GROUPS_PIPE_EMPTY                       = 0x77
} EmberAfGenericFlowPressureAlarmGroups;

typedef enum {
  EMBER_ZCL_GET_DEBT_REPAYMENTY_LOG_DEBT_TYPE_DEBT1  = 0x00,
  EMBER_ZCL_GET_DEBT_REPAYMENTY_LOG_DEBT_TYPE_DEBT2  = 0x01,
  EMBER_ZCL_GET_DEBT_REPAYMENTY_LOG_DEBT_TYPE_DEBT3  = 0x02
} EmberAfGetDebtRepaymentyLogDebtType;

typedef enum {
  EMBER_ZCL_HEAT_AND_COOLING_SPECIFIC_ALARM_GROUPS_INLET_TEMPERATURE_SENSOR_FAULT   = 0x90,
  EMBER_ZCL_HEAT_AND_COOLING_SPECIFIC_ALARM_GROUPS_OUTLET_TEMPERATURE_SENSOR_FAULT  = 0x91
} EmberAfHeatAndCoolingSpecificAlarmGroups;

typedef enum {
  EMBER_ZCL_HUE_DIRECTION_SHORTEST_DISTANCE  = 0x00,
  EMBER_ZCL_HUE_DIRECTION_LONGEST_DISTANCE   = 0x01,
  EMBER_ZCL_HUE_DIRECTION_UP                 = 0x02,
  EMBER_ZCL_HUE_DIRECTION_DOWN               = 0x03
} EmberAfHueDirection;

typedef enum {
  EMBER_ZCL_HUE_MOVE_MODE_STOP  = 0x00,
  EMBER_ZCL_HUE_MOVE_MODE_UP    = 0x01,
  EMBER_ZCL_HUE_MOVE_MODE_DOWN  = 0x03
} EmberAfHueMoveMode;

typedef enum {
  EMBER_ZCL_HUE_STEP_MODE_UP    = 0x01,
  EMBER_ZCL_HUE_STEP_MODE_DOWN  = 0x03
} EmberAfHueStepMode;

typedef enum {
  EMBER_ZCL_IAS_ACE_ALARM_STATUS_NO_ALARM         = 0x00,
  EMBER_ZCL_IAS_ACE_ALARM_STATUS_BURGLAR          = 0x01,
  EMBER_ZCL_IAS_ACE_ALARM_STATUS_FIRE             = 0x02,
  EMBER_ZCL_IAS_ACE_ALARM_STATUS_EMERGENCY        = 0x03,
  EMBER_ZCL_IAS_ACE_ALARM_STATUS_POLICE_PANIC     = 0x04,
  EMBER_ZCL_IAS_ACE_ALARM_STATUS_FIRE_PANIC       = 0x05,
  EMBER_ZCL_IAS_ACE_ALARM_STATUS_EMERGENCY_PANIC  = 0x06
} EmberAfIasAceAlarmStatus;

typedef enum {
  EMBER_ZCL_IAS_ACE_ARM_MODE_DISARM                      = 0x00,
  EMBER_ZCL_IAS_ACE_ARM_MODE_ARM_DAY_HOME_ZONES_ONLY     = 0x01,
  EMBER_ZCL_IAS_ACE_ARM_MODE_ARM_NIGHT_SLEEP_ZONES_ONLY  = 0x02,
  EMBER_ZCL_IAS_ACE_ARM_MODE_ARM_ALL_ZONES               = 0x03
} EmberAfIasAceArmMode;

typedef enum {
  EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ALL_ZONES_DISARMED            = 0x00,
  EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ONLY_DAY_HOME_ZONES_ARMED     = 0x01,
  EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ONLY_NIGHT_SLEEP_ZONES_ARMED  = 0x02,
  EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ALL_ZONES_ARMED               = 0x03,
  EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_INVALID_ARM_DISARM_CODE       = 0x04,
  EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_NOT_READY_TO_ARM              = 0x05,
  EMBER_ZCL_IAS_ACE_ARM_NOTIFICATION_ALREADY_DISARMED              = 0x06
} EmberAfIasAceArmNotification;

typedef enum {
  EMBER_ZCL_IAS_ACE_AUDIBLE_NOTIFICATION_MUTE           = 0x00,
  EMBER_ZCL_IAS_ACE_AUDIBLE_NOTIFICATION_DEFAULT_SOUND  = 0x01
} EmberAfIasAceAudibleNotification;

typedef enum {
  EMBER_ZCL_IAS_ACE_BYPASS_RESULT_ZONE_BYPASSED            = 0x00,
  EMBER_ZCL_IAS_ACE_BYPASS_RESULT_ZONE_NOT_BYPASSED        = 0x01,
  EMBER_ZCL_IAS_ACE_BYPASS_RESULT_NOT_ALLOWED              = 0x02,
  EMBER_ZCL_IAS_ACE_BYPASS_RESULT_INVALID_ZONE_ID          = 0x03,
  EMBER_ZCL_IAS_ACE_BYPASS_RESULT_UNKNOWN_ZONE_ID          = 0x04,
  EMBER_ZCL_IAS_ACE_BYPASS_RESULT_INVALID_ARM_DISARM_CODE  = 0x05
} EmberAfIasAceBypassResult;

typedef enum {
  EMBER_ZCL_IAS_ACE_PANEL_STATUS_PANEL_DISARMED    = 0x00,
  EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMED_STAY        = 0x01,
  EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMED_NIGHT       = 0x02,
  EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMED_AWAY        = 0x03,
  EMBER_ZCL_IAS_ACE_PANEL_STATUS_EXIT_DELAY        = 0x04,
  EMBER_ZCL_IAS_ACE_PANEL_STATUS_ENTRY_DELAY       = 0x05,
  EMBER_ZCL_IAS_ACE_PANEL_STATUS_NOT_READY_TO_ARM  = 0x06,
  EMBER_ZCL_IAS_ACE_PANEL_STATUS_IN_ALARM          = 0x07,
  EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMING_STAY       = 0x08,
  EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMING_NIGHT      = 0x09,
  EMBER_ZCL_IAS_ACE_PANEL_STATUS_ARMING_AWAY       = 0x0A
} EmberAfIasAcePanelStatus;

typedef enum {
  EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_SUCCESS           = 0x00,
  EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_NOT_SUPPORTED     = 0x01,
  EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_NO_ENROLL_PERMIT  = 0x02,
  EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_TOO_MANY_ZONES    = 0x03
} EmberAfIasEnrollResponseCode;

typedef enum {
  EMBER_ZCL_IAS_ZONE_STATE_NOT_ENROLLED  = 0x00,
  EMBER_ZCL_IAS_ZONE_STATE_ENROLLED      = 0x01
} EmberAfIasZoneState;

typedef enum {
  EMBER_ZCL_IAS_ZONE_TYPE_STANDARD_CIE               = 0x0000,
  EMBER_ZCL_IAS_ZONE_TYPE_MOTION_SENSOR              = 0x000D,
  EMBER_ZCL_IAS_ZONE_TYPE_CONTACT_SWITCH             = 0x0015,
  EMBER_ZCL_IAS_ZONE_TYPE_FIRE_SENSOR                = 0x0028,
  EMBER_ZCL_IAS_ZONE_TYPE_WATER_SENSOR               = 0x002A,
  EMBER_ZCL_IAS_ZONE_TYPE_GAS_SENSOR                 = 0x002B,
  EMBER_ZCL_IAS_ZONE_TYPE_PERSONAL_EMERGENCY_DEVICE  = 0x002C,
  EMBER_ZCL_IAS_ZONE_TYPE_VIBRATION_MOVEMENT_SENSOR  = 0x002D,
  EMBER_ZCL_IAS_ZONE_TYPE_REMOTE_CONTROL             = 0x010F,
  EMBER_ZCL_IAS_ZONE_TYPE_KEY_FOB                    = 0x0115,
  EMBER_ZCL_IAS_ZONE_TYPE_KEYPAD                     = 0x021D,
  EMBER_ZCL_IAS_ZONE_TYPE_STANDARD_WARNING_DEVICE    = 0x0225,
  EMBER_ZCL_IAS_ZONE_TYPE_GLASS_BREAK_SENSOR         = 0x0226,
  EMBER_ZCL_IAS_ZONE_TYPE_CARBON_MONOXIDE_SENSOR     = 0x0227
} EmberAfIasZoneType;

typedef enum {
  EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_BLINK           = 0x00,
  EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_BREATHE         = 0x01,
  EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_OKAY            = 0x02,
  EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_CHANNEL_CHANGE  = 0x0B,
  EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_FINISH_EFFECT   = 0xFE,
  EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_STOP_EFFECT     = 0xFF
} EmberAfIdentifyEffectIdentifier;

typedef enum {
  EMBER_ZCL_IDENTIFY_EFFECT_VARIANT_DEFAULT  = 0x00
} EmberAfIdentifyEffectVariant;

typedef enum {
  EMBER_ZCL_KEY_INDEX_DEVELOPMENT    = 0x00,
  EMBER_ZCL_KEY_INDEX_MASTER         = 0x04,
  EMBER_ZCL_KEY_INDEX_CERTIFICATION  = 0x0F
} EmberAfKeyIndex;

typedef enum {
  EMBER_ZCL_KEYPAD_LOCKOUT_NO_LOCKOUT           = 0x00,
  EMBER_ZCL_KEYPAD_LOCKOUT_LEVEL_ONE_LOCKOUT    = 0x01,
  EMBER_ZCL_KEYPAD_LOCKOUT_LEVEL_TWO_LOCKOUT    = 0x02,
  EMBER_ZCL_KEYPAD_LOCKOUT_LEVEL_THREE_LOCKOUT  = 0x03,
  EMBER_ZCL_KEYPAD_LOCKOUT_LEVEL_FOUR_LOCKOUT   = 0x04,
  EMBER_ZCL_KEYPAD_LOCKOUT_LEVELFIVE_LOCKOUT    = 0x05
} EmberAfKeypadLockout;

typedef enum {
  EMBER_ZCL_LEVEL_STATUS_ON_TARGET     = 0x00,
  EMBER_ZCL_LEVEL_STATUS_BELOW_TARGET  = 0x01,
  EMBER_ZCL_LEVEL_STATUS_ABOVE_TARGET  = 0x02
} EmberAfLevelStatus;

typedef enum {
  EMBER_ZCL_LOCATION_METHOD_LATERATION         = 0x00,
  EMBER_ZCL_LOCATION_METHOD_SIGNPOSTING        = 0x01,
  EMBER_ZCL_LOCATION_METHOD_RF_FINGERPRINTING  = 0x02,
  EMBER_ZCL_LOCATION_METHOD_OUT_OF_BAND        = 0x03
} EmberAfLocationMethod;

typedef enum {
  EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_EXTENDED_STATUS_FLAG_A  = 0xF0,
  EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_EXTENDED_STATUS_FLAG_B  = 0xF1,
  EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_EXTENDED_STATUS_FLAG_C  = 0xF2,
  EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_EXTENDED_STATUS_FLAG_D  = 0xF3,
  EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_EXTENDED_STATUS_FLAG_E  = 0xF4,
  EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_EXTENDED_STATUS_FLAG_F  = 0xF5,
  EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_EXTENDED_STATUS_FLAG_G  = 0xF6,
  EMBER_ZCL_MANUFACTURER_SPECIFIC_ALARM_GROUPS_MANUFACTURER_SPECIFIC_EXTENDED_STATUS_FLAG_H  = 0xF7
} EmberAfManufacturerSpecificAlarmGroups;

typedef enum {
  EMBER_ZCL_MEASUREMENT_LIGHT_SENSOR_TYPE_PHOTODIODE  = 0x00,
  EMBER_ZCL_MEASUREMENT_LIGHT_SENSOR_TYPE_CMOS        = 0x01
} EmberAfMeasurementLightSensorType;

typedef enum {
  EMBER_ZCL_MESSAGING_CONTROL_CONFIRMATION_NOT_REQUIRED  = 0x00,
  EMBER_ZCL_MESSAGING_CONTROL_CONFIRMATION_REQUIRED      = 0x80
} EmberAfMessagingControlConfirmation;

typedef enum {
  EMBER_ZCL_MESSAGING_CONTROL_IMPORTANCE_LOW       = 0x00,
  EMBER_ZCL_MESSAGING_CONTROL_IMPORTANCE_MEDIUM    = 0x04,
  EMBER_ZCL_MESSAGING_CONTROL_IMPORTANCE_HIGH      = 0x08,
  EMBER_ZCL_MESSAGING_CONTROL_IMPORTANCE_CRITICAL  = 0x0C
} EmberAfMessagingControlImportance;

typedef enum {
  EMBER_ZCL_MESSAGING_CONTROL_TRANSMISSION_NORMAL                = 0x00,
  EMBER_ZCL_MESSAGING_CONTROL_TRANSMISSION_NORMAL_AND_ANONYMOUS  = 0x01,
  EMBER_ZCL_MESSAGING_CONTROL_TRANSMISSION_ANONYMOUS             = 0x02,
  EMBER_ZCL_MESSAGING_CONTROL_TRANSMISSION_RESERVED              = 0x03
} EmberAfMessagingControlTransmission;

typedef enum {
  EMBER_ZCL_METER_DEVICE_TYPE_ELECTRIC_METER           = 0x00,
  EMBER_ZCL_METER_DEVICE_TYPE_GAS_METER                = 0x01,
  EMBER_ZCL_METER_DEVICE_TYPE_WATER_METER              = 0x02,
  EMBER_ZCL_METER_DEVICE_TYPE_THERMAL_METER            = 0x03,
  EMBER_ZCL_METER_DEVICE_TYPE_PRESSURE_METER           = 0x04,
  EMBER_ZCL_METER_DEVICE_TYPE_HEAT_METER               = 0x05,
  EMBER_ZCL_METER_DEVICE_TYPE_COOLING_METER            = 0x06,
  EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_GAS_METER       = 0x80,
  EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_WATER_METER     = 0x81,
  EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_THERMAL_METER   = 0x82,
  EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_PRESSURE_METER  = 0x83,
  EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_HEAT_METER      = 0x84,
  EMBER_ZCL_METER_DEVICE_TYPE_MIRRORED_COOLING_METER   = 0x85,
  EMBER_ZCL_METER_DEVICE_TYPE_UNDEFINED_MIRROR_METER   = 0xFE
} EmberAfMeterDeviceType;

typedef enum {
  EMBER_ZCL_METER_TYPE_ID_UTILITY_PRIMARY_METER     = 0x0000,
  EMBER_ZCL_METER_TYPE_ID_UTILITY_PRODUCTION_METER  = 0x0001,
  EMBER_ZCL_METER_TYPE_ID_UTILITY_SECONDARY_METER   = 0x0002,
  EMBER_ZCL_METER_TYPE_ID_PRIVATE_PRIMARY_METER     = 0x0100,
  EMBER_ZCL_METER_TYPE_ID_PRIVATE_PRODUCTION_METER  = 0x0101,
  EMBER_ZCL_METER_TYPE_ID_PRIVATE_SECONDARY_METERS  = 0x0102,
  EMBER_ZCL_METER_TYPE_ID_GENERIC_METER             = 0x0110
} EmberAfMeterTypeId;

typedef enum {
  EMBER_ZCL_METERING_ALARM_CODE_CHECK_METER                                  = 0x00,
  EMBER_ZCL_METERING_ALARM_CODE_LOW_BATTERY                                  = 0x01,
  EMBER_ZCL_METERING_ALARM_CODE_TAMPER_DETECT                                = 0x02,
  EMBER_ZCL_METERING_ALARM_CODE_POWER_FAILURE_PIPE_EMPTY_TEMPERATURE_SENSOR  = 0x03,
  EMBER_ZCL_METERING_ALARM_CODE_POWER_QUALITY_LOW_PRESSURE_BURST_DETECT      = 0x04,
  EMBER_ZCL_METERING_ALARM_CODE_LEAK_DETECT                                  = 0x05,
  EMBER_ZCL_METERING_ALARM_CODE_SERVICE_DISCONNECT                           = 0x06,
  EMBER_ZCL_METERING_ALARM_CODE_REVERSE_FLOW_FLOW_SENSOR                     = 0x07,
  EMBER_ZCL_METERING_ALARM_CODE_LOW_VOLTAGE_L1                               = 0x10,
  EMBER_ZCL_METERING_ALARM_CODE_HIGH_VOLTAGE_L1                              = 0x11,
  EMBER_ZCL_METERING_ALARM_CODE_LOW_VOLTAGE_L2                               = 0x12,
  EMBER_ZCL_METERING_ALARM_CODE_HIGH_VOLTAGE_L2                              = 0x13,
  EMBER_ZCL_METERING_ALARM_CODE_LOW_VOLTAGE_L3                               = 0x14,
  EMBER_ZCL_METERING_ALARM_CODE_HIGH_VOLTAGE_L3                              = 0x15,
  EMBER_ZCL_METERING_ALARM_CODE_OVER_CURRENT_L1                              = 0x16,
  EMBER_ZCL_METERING_ALARM_CODE_OVER_CURRENT_L2                              = 0x17,
  EMBER_ZCL_METERING_ALARM_CODE_OVER_CURRENT_L3                              = 0x18,
  EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_LOW_L1                         = 0x19,
  EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_HIGH_L1                        = 0x1A,
  EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_LOW_L2                         = 0x1B,
  EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_HIGH_L2                        = 0x1C,
  EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_LOW_L3                         = 0x1D,
  EMBER_ZCL_METERING_ALARM_CODE_FREQUENCY_TOO_HIGH_L3                        = 0x1E,
  EMBER_ZCL_METERING_ALARM_CODE_GROUND_FAULT                                 = 0x1F,
  EMBER_ZCL_METERING_ALARM_CODE_ELECTRIC_TAMPER_DETECT                       = 0x20,
  EMBER_ZCL_METERING_ALARM_CODE_BURST_DETECT                                 = 0x30,
  EMBER_ZCL_METERING_ALARM_CODE_PRESSURE_TOO_LOW                             = 0x31,
  EMBER_ZCL_METERING_ALARM_CODE_PRESSURE_TOO_HIGH                            = 0x32,
  EMBER_ZCL_METERING_ALARM_CODE_FLOW_SENSOR_COMMUNICATION_ERROR              = 0x33,
  EMBER_ZCL_METERING_ALARM_CODE_FLOW_SENSOR_MEASUREMENT_FAULT                = 0x34,
  EMBER_ZCL_METERING_ALARM_CODE_FLOW_SENSOR_REVERSE_FLOW                     = 0x35,
  EMBER_ZCL_METERING_ALARM_CODE_FLOW_SENSOR_AIR_DETECT                       = 0x36,
  EMBER_ZCL_METERING_ALARM_CODE_PIPE_EMPTY                                   = 0x37,
  EMBER_ZCL_METERING_ALARM_CODE_INLET_TEMPERATURE_SENSOR_FAULT               = 0x50,
  EMBER_ZCL_METERING_ALARM_CODE_OUTLET_TEMPERATURE_SENSOR_FAULT              = 0x51
} EmberAfMeteringAlarmCode;

typedef enum {
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_NO_BLOCKS_IN_USE  = 0x00,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK1            = 0x01,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK2            = 0x02,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK3            = 0x03,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK4            = 0x04,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK5            = 0x05,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK6            = 0x06,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK7            = 0x07,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK8            = 0x08,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK9            = 0x09,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK10           = 0x0A,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK11           = 0x0B,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK12           = 0x0C,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK13           = 0x0D,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK14           = 0x0E,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK15           = 0x0F,
  EMBER_ZCL_METERING_BLOCK_ENUMERATIONS_BLOCK16           = 0x10
} EmberAfMeteringBlockEnumerations;

typedef enum {
  EMBER_ZCL_METERING_DEVICE_TYPE_ELECTRIC_METERING                             = 0x00,
  EMBER_ZCL_METERING_DEVICE_TYPE_GAS_METERING                                  = 0x01,
  EMBER_ZCL_METERING_DEVICE_TYPE_WATER_METERING                                = 0x02,
  EMBER_ZCL_METERING_DEVICE_TYPE_THERMAL_METERING                              = 0x03,
  EMBER_ZCL_METERING_DEVICE_TYPE_PRESSURE_METERING                             = 0x04,
  EMBER_ZCL_METERING_DEVICE_TYPE_HEAT_METERING                                 = 0x05,
  EMBER_ZCL_METERING_DEVICE_TYPE_COOLING_METERING                              = 0x06,
  EMBER_ZCL_METERING_DEVICE_TYPE_ELECTRIC_VEHICLE_CHARGING_METERING            = 0x07,
  EMBER_ZCL_METERING_DEVICE_TYPE_PV_GENERATION_METERING                        = 0x08,
  EMBER_ZCL_METERING_DEVICE_TYPE_WIND_TURBINE_GENERATION_METERING              = 0x09,
  EMBER_ZCL_METERING_DEVICE_TYPE_WATER_TURBINE_GENERATION_METERING             = 0x0A,
  EMBER_ZCL_METERING_DEVICE_TYPE_MICRO_GENERATION_METERING                     = 0x0B,
  EMBER_ZCL_METERING_DEVICE_TYPE_SOLAR_HOT_WATER_GENERATION_METERING           = 0x0C,
  EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_GAS_METERING                         = 0x80,
  EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_WATER_METERING                       = 0x81,
  EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_THERMAL_METERING                     = 0x82,
  EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_PRESSURE_METERING                    = 0x83,
  EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_HEAT_METERING                        = 0x84,
  EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_COOLING_METERING                     = 0x85,
  EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_ELECTRIC_VEHICLE_CHARGING_METERING   = 0x86,
  EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_PV_GENERATION_METERING               = 0x87,
  EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_WIND_TURBINE_GENERATION_METERING     = 0x88,
  EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_WATER_TURBINE_GENERATION_METERING    = 0x89,
  EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_MICRO_GENERATION_METERING            = 0x8A,
  EMBER_ZCL_METERING_DEVICE_TYPE_MIRRORED_SOLAR_HOT_WATER_GENERATION_METERING  = 0x8B
} EmberAfMeteringDeviceType;

typedef enum {
  EMBER_ZCL_METERING_SUPPLY_STATUS_SUPPLY_OFF        = 0x00,
  EMBER_ZCL_METERING_SUPPLY_STATUS_SUPPLY_OFF_ARMED  = 0x01,
  EMBER_ZCL_METERING_SUPPLY_STATUS_SUPPLY_ON         = 0x02
} EmberAfMeteringSupplyStatus;

typedef enum {
  EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_KELVIN          = 0x00,
  EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_CELSIUS         = 0x01,
  EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_FAHRENHEIT      = 0x02,
  EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_KELVIN_BCD      = 0x80,
  EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_CELSIUS_BCD     = 0x81,
  EMBER_ZCL_METERING_TEMPERATURE_UNIT_OF_MEASURE_FAHRENHEIT_BCD  = 0x82
} EmberAfMeteringTemperatureUnitOfMeasure;

typedef enum {
  EMBER_ZCL_MOVE_MODE_UP    = 0x00,
  EMBER_ZCL_MOVE_MODE_DOWN  = 0x01
} EmberAfMoveMode;

typedef enum {
  EMBER_ZCL_OCCUPANCY_SENSOR_TYPE_PIR                 = 0x00,
  EMBER_ZCL_OCCUPANCY_SENSOR_TYPE_ULTRASONIC          = 0x01,
  EMBER_ZCL_OCCUPANCY_SENSOR_TYPE_PIR_AND_ULTRASONIC  = 0x02
} EmberAfOccupancySensorType;

typedef enum {
  EMBER_ZCL_ON_OFF_DELAYED_ALL_OFF_EFFECT_VARIANT_FADE_TO_OFF_IN_0P8_SECONDS                                         = 0x00,
  EMBER_ZCL_ON_OFF_DELAYED_ALL_OFF_EFFECT_VARIANT_NO_FADE                                                            = 0x01,
  EMBER_ZCL_ON_OFF_DELAYED_ALL_OFF_EFFECT_VARIANT_50_PERCENT_DIM_DOWN_IN_0P8_SECONDS_THEN_FADE_TO_OFF_IN_12_SECONDS  = 0x02
} EmberAfOnOffDelayedAllOffEffectVariant;

typedef enum {
  EMBER_ZCL_ON_OFF_DYING_LIGHT_EFFECT_VARIANT_20_PERCENTER_DIM_UP_IN_0P5_SECONDS_THEN_FADE_TO_OFF_IN_1_SECOND  = 0x00
} EmberAfOnOffDyingLightEffectVariant;

typedef enum {
  EMBER_ZCL_ON_OFF_EFFECT_IDENTIFIER_DELAYED_ALL_OFF  = 0x00,
  EMBER_ZCL_ON_OFF_EFFECT_IDENTIFIER_DYING_LIGHT      = 0x01
} EmberAfOnOffEffectIdentifier;

typedef enum {
  EMBER_ZCL_OPERATING_MODE_NORMAL     = 0x00,
  EMBER_ZCL_OPERATING_MODE_CONFIGURE  = 0x01
} EmberAfOperatingMode;

typedef enum {
  EMBER_ZCL_ORIGINATING_DEVICE_ENERGY_SERVICE_INTERFACE    = 0x00,
  EMBER_ZCL_ORIGINATING_DEVICE_METER                       = 0x01,
  EMBER_ZCL_ORIGINATING_DEVICE_IN_PREMISES_DISPLAY_DEVICE  = 0x02
} EmberAfOriginatingDevice;

typedef enum {
  EMBER_ZCL_PASSWORD_LEVEL_PASSWORD1  = 0x01,
  EMBER_ZCL_PASSWORD_LEVEL_PASSWORD2  = 0x02,
  EMBER_ZCL_PASSWORD_LEVEL_PASSWORD3  = 0x03,
  EMBER_ZCL_PASSWORD_LEVEL_PASSWORD4  = 0x04
} EmberAfPasswordLevel;

typedef enum {
  EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_CURRENT_BILLING_PERIOD     = 0x00,
  EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_CURRENT_CONSOLIDATED_BILL  = 0x01,
  EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_ONE_MONTH                  = 0x02,
  EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_ONE_QUARTER                = 0x03,
  EMBER_ZCL_PAYMENT_DISCOUNT_DURATION_ONE_YEAR                   = 0x04
} EmberAfPaymentDiscountDuration;

typedef enum {
  EMBER_ZCL_PHYSICAL_ENVIRONMENT_UNSPECIFIED                    = 0x00,
  EMBER_ZCL_PHYSICAL_ENVIRONMENT_FIRST_PROFILE_SPECIFIED_VALUE  = 0x01,
  EMBER_ZCL_PHYSICAL_ENVIRONMENT_LAST_PROFILE_SPECIFIED_VALUE   = 0x7F,
  EMBER_ZCL_PHYSICAL_ENVIRONMENT_UNKNOWN                        = 0xFF
} EmberAfPhysicalEnvironment;

typedef enum {
  EMBER_ZCL_POWER_PROFILE_STATE_POWER_PROFILE_WAITING_TO_START  = 0x01,
  EMBER_ZCL_POWER_PROFILE_STATE_POWER_PROFILE_STARTED           = 0x02,
  EMBER_ZCL_POWER_PROFILE_STATE_ENERGY_PHASE_RUNNING            = 0x03,
  EMBER_ZCL_POWER_PROFILE_STATE_ENERGY_PHASE_ENDED              = 0x04,
  EMBER_ZCL_POWER_PROFILE_STATE_ENERGY_PHASE_WAITING_TO_START   = 0x05,
  EMBER_ZCL_POWER_PROFILE_STATE_ENERGY_PHASE_STARTED            = 0x06,
  EMBER_ZCL_POWER_PROFILE_STATE_POWER_PROFILE_ENDED             = 0x07,
  EMBER_ZCL_POWER_PROFILE_STATE_PROFILE_READY_FOR_SCHEDULING    = 0x08,
  EMBER_ZCL_POWER_PROFILE_STATE_POWER_PROFILE_SCHEDULED         = 0x09
} EmberAfPowerProfileState;

typedef enum {
  EMBER_ZCL_POWER_SOURCE_UNKNOWN                          = 0x00,
  EMBER_ZCL_POWER_SOURCE_SINGLE_PHASE_MAINS               = 0x01,
  EMBER_ZCL_POWER_SOURCE_THREE_PHASE_MAINS                = 0x02,
  EMBER_ZCL_POWER_SOURCE_BATTERY                          = 0x03,
  EMBER_ZCL_POWER_SOURCE_DC_SOURCE                        = 0x04,
  EMBER_ZCL_POWER_SOURCE_EMERGENCY_MAINS_CONSTANT_POWER   = 0x05,
  EMBER_ZCL_POWER_SOURCE_EMERGENCY_MAINS_TRANSFER_SWITCH  = 0x06,
  EMBER_ZCL_POWER_SOURCE_BATTERY_BACKUP                   = 0x80
} EmberAfPowerSource;

typedef enum {
  EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_PHYSICAL_ATTACK_ON_THE_PREPAY_METER    = 0x20,
  EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_ELECTRONIC_ATTACK_ON_THE_PREPAY_METER  = 0x21,
  EMBER_ZCL_PREPAY_EVENT_ALARM_GROUP_DISCOUNT_APPLIED                       = 0x22
} EmberAfPrepayEventAlarmGroup;

typedef enum {
  EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_SUPPLY_ON                                      = 0x10,
  EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_SUPPLY_ARM                                     = 0x11,
  EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_SUPPLY_OFF                                     = 0x12,
  EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_DISCONNECTION_FAILURE_SHUT_OFF_MECHANISM_FAIL  = 0x13,
  EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_DISCONNECTED_DUE_TO_TAMPER_DETECTED            = 0x14,
  EMBER_ZCL_PREPAY_SWITCH_ALARM_GROUP_REMOTE_DISCONNECTED                            = 0x15
} EmberAfPrepaySwitchAlarmGroup;

typedef enum {
  EMBER_ZCL_PREPAYMENT_ORIGINATING_DEVICE_ENERGY_SERVICE_INTERFACE    = 0x00,
  EMBER_ZCL_PREPAYMENT_ORIGINATING_DEVICE_IN_PREMISES_DISPLAY_DEVICE  = 0x02
} EmberAfPrepaymentOriginatingDevice;

typedef enum {
  EMBER_ZCL_PREPAYMENT_RECOVERY_PERIOD_PER_HOUR     = 0x00,
  EMBER_ZCL_PREPAYMENT_RECOVERY_PERIOD_PER_DAY      = 0x01,
  EMBER_ZCL_PREPAYMENT_RECOVERY_PERIOD_PER_WEEK     = 0x02,
  EMBER_ZCL_PREPAYMENT_RECOVERY_PERIOD_PER_MONTH    = 0x03,
  EMBER_ZCL_PREPAYMENT_RECOVERY_PERIOD_PER_QUARTER  = 0x04
} EmberAfPrepaymentRecoveryPeriod;

typedef enum {
  EMBER_ZCL_PREPAYMENT_SUPPLY_STATUS_SUPPLY_OFF        = 0x00,
  EMBER_ZCL_PREPAYMENT_SUPPLY_STATUS_SUPPLY_OFF_ARMED  = 0x01,
  EMBER_ZCL_PREPAYMENT_SUPPLY_STATUS_SUPPLY_ON         = 0x02
} EmberAfPrepaymentSupplyStatus;

typedef enum {
  EMBER_ZCL_PRICE_CONTROL_ACKNOWLEDGEMENT_NOT_REQUIRED  = 0x00,
  EMBER_ZCL_PRICE_CONTROL_ACKNOWLEDGEMENT_REQUIRED      = 0x01
} EmberAfPriceControlAcknowledgement;

typedef enum {
  EMBER_ZCL_PRICE_TIER_NO_TIER_RELATED     = 0x00,
  EMBER_ZCL_PRICE_TIER_TIER1_PRICE_LABEL   = 0x01,
  EMBER_ZCL_PRICE_TIER_TIER2_PRICE_LABEL   = 0x02,
  EMBER_ZCL_PRICE_TIER_TIER3_PRICE_LABEL   = 0x03,
  EMBER_ZCL_PRICE_TIER_TIER4_PRICE_LABEL   = 0x04,
  EMBER_ZCL_PRICE_TIER_TIER5_PRICE_LABEL   = 0x05,
  EMBER_ZCL_PRICE_TIER_TIER6_PRICE_LABEL   = 0x06,
  EMBER_ZCL_PRICE_TIER_TIER7_PRICE_LABEL   = 0x07,
  EMBER_ZCL_PRICE_TIER_TIER8_PRICE_LABEL   = 0x08,
  EMBER_ZCL_PRICE_TIER_TIER9_PRICE_LABEL   = 0x09,
  EMBER_ZCL_PRICE_TIER_TIER10_PRICE_LABEL  = 0x0A,
  EMBER_ZCL_PRICE_TIER_TIER11_PRICE_LABEL  = 0x0B,
  EMBER_ZCL_PRICE_TIER_TIER12_PRICE_LABEL  = 0x0C,
  EMBER_ZCL_PRICE_TIER_TIER13_PRICE_LABEL  = 0x0D,
  EMBER_ZCL_PRICE_TIER_TIER14_PRICE_LABEL  = 0x0E,
  EMBER_ZCL_PRICE_TIER_TIER15_PRICE_LABEL  = 0x0F
} EmberAfPriceTier;

typedef enum {
  EMBER_ZCL_PRODUCT_TYPE_ID_WHITE_GOODS           = 0x0000,
  EMBER_ZCL_PRODUCT_TYPE_ID_DISHWASHER            = 0x5601,
  EMBER_ZCL_PRODUCT_TYPE_ID_TUMBLE_DRYER          = 0x5602,
  EMBER_ZCL_PRODUCT_TYPE_ID_WASHER_DRYER          = 0x5603,
  EMBER_ZCL_PRODUCT_TYPE_ID_WASHING_MACHINE       = 0x5604,
  EMBER_ZCL_PRODUCT_TYPE_ID_HOBS                  = 0x5E03,
  EMBER_ZCL_PRODUCT_TYPE_ID_INDUCTION_HOBS        = 0x5E09,
  EMBER_ZCL_PRODUCT_TYPE_ID_OVEN                  = 0x5E01,
  EMBER_ZCL_PRODUCT_TYPE_ID_ELECTRICAL_OVEN       = 0x5E06,
  EMBER_ZCL_PRODUCT_TYPE_ID_REFRIGERATOR_FREEZER  = 0x6601
} EmberAfProductTypeId;

typedef enum {
  EMBER_ZCL_PROPOSED_SUPPLY_STATUS_RESERVED          = 0x00,
  EMBER_ZCL_PROPOSED_SUPPLY_STATUS_SUPPLY_OFF_ARMED  = 0x01,
  EMBER_ZCL_PROPOSED_SUPPLY_STATUS_SUPPLY_ON         = 0x02
} EmberAfProposedSupplyStatus;

typedef enum {
  EMBER_ZCL_PUBLISH_CPP_EVENT_CPP_AUTH_PENDING   = 0x00,
  EMBER_ZCL_PUBLISH_CPP_EVENT_CPP_AUTH_ACCEPTED  = 0x01,
  EMBER_ZCL_PUBLISH_CPP_EVENT_CPP_AUTH_REJECTED  = 0x02,
  EMBER_ZCL_PUBLISH_CPP_EVENT_CPP_AUTH_FORCED    = 0x03
} EmberAfPublishCppEventCppAuth;

typedef enum {
  EMBER_ZCL_PUMP_CONTROL_MODE_CONSTANT_SPEED         = 0x00,
  EMBER_ZCL_PUMP_CONTROL_MODE_CONSTANT_PRESSURE      = 0x01,
  EMBER_ZCL_PUMP_CONTROL_MODE_PROPORTIONAL_PRESSURE  = 0x02,
  EMBER_ZCL_PUMP_CONTROL_MODE_CONSTANT_FLOW          = 0x03,
  EMBER_ZCL_PUMP_CONTROL_MODE_CONSTANT_TEMPERATURE   = 0x05,
  EMBER_ZCL_PUMP_CONTROL_MODE_AUTOMATIC              = 0x07
} EmberAfPumpControlMode;

typedef enum {
  EMBER_ZCL_PUMP_OPERATION_MODE_NORMAL   = 0x00,
  EMBER_ZCL_PUMP_OPERATION_MODE_MINIMUM  = 0x01,
  EMBER_ZCL_PUMP_OPERATION_MODE_MAXIMUM  = 0x02,
  EMBER_ZCL_PUMP_OPERATION_MODE_LOCAL    = 0x03
} EmberAfPumpOperationMode;

typedef enum {
  EMBER_ZCL_RECOVERY_FREQUENCY_FIELD_PER_HOUR     = 0x00,
  EMBER_ZCL_RECOVERY_FREQUENCY_FIELD_PER_DAY      = 0x01,
  EMBER_ZCL_RECOVERY_FREQUENCY_FIELD_PER_WEEK     = 0x02,
  EMBER_ZCL_RECOVERY_FREQUENCY_FIELD_PER_MONTH    = 0x03,
  EMBER_ZCL_RECOVERY_FREQUENCY_FIELD_PER_QUARTER  = 0x04
} EmberAfRecoveryFrequencyField;

typedef enum {
  EMBER_ZCL_REGISTER_TIER_NO_TIER_RELATED                               = 0x00,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER1_SUMMATION_DELIVERED_ATTRIBUTE   = 0x01,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER2_SUMMATION_DELIVERED_ATTRIBUTE   = 0x02,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER3_SUMMATION_DELIVERED_ATTRIBUTE   = 0x03,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER4_SUMMATION_DELIVERED_ATTRIBUTE   = 0x04,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER5_SUMMATION_DELIVERED_ATTRIBUTE   = 0x05,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER6_SUMMATION_DELIVERED_ATTRIBUTE   = 0x06,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER7_SUMMATION_DELIVERED_ATTRIBUTE   = 0x07,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER8_SUMMATION_DELIVERED_ATTRIBUTE   = 0x08,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER9_SUMMATION_DELIVERED_ATTRIBUTE   = 0x09,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER10_SUMMATION_DELIVERED_ATTRIBUTE  = 0x0A,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER11_SUMMATION_DELIVERED_ATTRIBUTE  = 0x0B,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER12_SUMMATION_DELIVERED_ATTRIBUTE  = 0x0C,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER13_SUMMATION_DELIVERED_ATTRIBUTE  = 0x0D,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER14_SUMMATION_DELIVERED_ATTRIBUTE  = 0x0E,
  EMBER_ZCL_REGISTER_TIER_CURRENT_TIER15_SUMMATION_DELIVERED_ATTRIBUTE  = 0x0F
} EmberAfRegisterTier;

typedef enum {
  EMBER_ZCL_RELATIVE_HUMIDITY_DISPLAY_NOT_DISPLAYED  = 0x00,
  EMBER_ZCL_RELATIVE_HUMIDITY_DISPLAY_DISPLAYED      = 0x01
} EmberAfRelativeHumidityDisplay;

typedef enum {
  EMBER_ZCL_RELATIVE_HUMIDITY_MODE_MEASURE_LOCALLY           = 0x00,
  EMBER_ZCL_RELATIVE_HUMIDITY_MODE_UPDATED_OVER_THE_NETWORK  = 0x01
} EmberAfRelativeHumidityMode;

typedef enum {
  EMBER_ZCL_REMOTE_ENABLE_FLAGS_DISABLED                           = 0x00,
  EMBER_ZCL_REMOTE_ENABLE_FLAGS_TEMPORARILY_LOCKED_DISABLED        = 0x07,
  EMBER_ZCL_REMOTE_ENABLE_FLAGS_ENABLED_REMOTE_CONTROL             = 0x0F,
  EMBER_ZCL_REMOTE_ENABLE_FLAGS_ENABLED_REMOTE_AND_ENERGY_CONTROL  = 0x01
} EmberAfRemoteEnableFlags;

typedef enum {
  EMBER_ZCL_REPORTING_DIRECTION_REPORTED  = 0x00,
  EMBER_ZCL_REPORTING_DIRECTION_RECEIVED  = 0x01
} EmberAfReportingDirection;

typedef enum {
  EMBER_ZCL_RESULT_TYPE_ACCEPTED                     = 0x00,
  EMBER_ZCL_RESULT_TYPE_REJECTED_INVALID_TOP_UP      = 0x01,
  EMBER_ZCL_RESULT_TYPE_REJECTED_DUPLICATE_TOP_UP    = 0x02,
  EMBER_ZCL_RESULT_TYPE_REJECTED_ERROR               = 0x03,
  EMBER_ZCL_RESULT_TYPE_REJECTED_MAX_CREDIT_REACHED  = 0x04,
  EMBER_ZCL_RESULT_TYPE_REJECTED_KEYPAD_LOCK         = 0x05
} EmberAfResultType;

typedef enum {
  EMBER_ZCL_SATURATION_MOVE_MODE_STOP  = 0x00,
  EMBER_ZCL_SATURATION_MOVE_MODE_UP    = 0x01,
  EMBER_ZCL_SATURATION_MOVE_MODE_DOWN  = 0x03
} EmberAfSaturationMoveMode;

typedef enum {
  EMBER_ZCL_SATURATION_STEP_MODE_UP    = 0x01,
  EMBER_ZCL_SATURATION_STEP_MODE_DOWN  = 0x03
} EmberAfSaturationStepMode;

typedef enum {
  EMBER_ZCL_SENSING_LIGHT_SENSOR_TYPE_PHOTODIODE  = 0x00,
  EMBER_ZCL_SENSING_LIGHT_SENSOR_TYPE_CMOS        = 0x01
} EmberAfSensingLightSensorType;

typedef enum {
  EMBER_ZCL_SETPOINT_ADJUST_MODE_HEAT_SETPOINT            = 0x00,
  EMBER_ZCL_SETPOINT_ADJUST_MODE_COOL_SETPOINT            = 0x01,
  EMBER_ZCL_SETPOINT_ADJUST_MODE_HEAT_AND_COOL_SETPOINTS  = 0x02
} EmberAfSetpointAdjustMode;

typedef enum {
  EMBER_ZCL_SIGNATURE_TYPE_RESERVED  = 0x00,
  EMBER_ZCL_SIGNATURE_TYPE_ECDSA     = 0x01
} EmberAfSignatureType;

typedef enum {
  EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_DEBT_CREDIT_ADDITION                               = 0x00,
  EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_CURRENT_SUMMATION_DELIVERED_AND_RECEIVED_REGISTER  = 0x01,
  EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_TOU_INFORMATION_SET_DELIVERED_REGISTERS            = 0x02,
  EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_TOU_INFORMATION_SET_RECEIVED_REGISTERS             = 0x03,
  EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_BLOCK_INFORMATION_SET_DELIVERED                    = 0x04,
  EMBER_ZCL_SNAPSHOT_PAYLOAD_TYPE_BLOCK_INFORMATION_SET_RECEIVED                     = 0x05
} EmberAfSnapshotPayloadType;

typedef enum {
  EMBER_ZCL_SOURCE_OF_TOP_UP_IPD    = 0x00,
  EMBER_ZCL_SOURCE_OF_TOP_UP_ESI    = 0x01,
  EMBER_ZCL_SOURCE_OF_TOP_UP_METER  = 0x02
} EmberAfSourceOfTopUp;

typedef enum {
  EMBER_ZCL_SQUAWK_LEVEL_LOW_LEVEL        = 0x00,
  EMBER_ZCL_SQUAWK_LEVEL_MEDIUM_LEVEL     = 0x01,
  EMBER_ZCL_SQUAWK_LEVEL_VERY_HIGH_LEVEL  = 0x02
} EmberAfSquawkLevel;

typedef enum {
  EMBER_ZCL_SQUAWK_MODE_SYSTEM_IS_ARMED     = 0x00,
  EMBER_ZCL_SQUAWK_MODE_SYSTEM_IS_DISARMED  = 0x01
} EmberAfSquawkMode;

typedef enum {
  EMBER_ZCL_SQUAWK_STOBE_NO_STROBE   = 0x00,
  EMBER_ZCL_SQUAWK_STOBE_USE_STROBE  = 0x01
} EmberAfSquawkStobe;

typedef enum {
  EMBER_ZCL_START_OF_WEEK_SUNDAY     = 0x00,
  EMBER_ZCL_START_OF_WEEK_MONDAY     = 0x01,
  EMBER_ZCL_START_OF_WEEK_TUESDAY    = 0x02,
  EMBER_ZCL_START_OF_WEEK_WEDNESDAY  = 0x03,
  EMBER_ZCL_START_OF_WEEK_THURSDAY   = 0x04,
  EMBER_ZCL_START_OF_WEEK_FRIDAY     = 0x05,
  EMBER_ZCL_START_OF_WEEK_SATURDAY   = 0x06
} EmberAfStartOfWeek;

typedef enum {
  EMBER_ZCL_STATUS_SUCCESS                       = 0x00,
  EMBER_ZCL_STATUS_FAILURE                       = 0x01,
  EMBER_ZCL_STATUS_REQUEST_DENIED                = 0x70,
  EMBER_ZCL_STATUS_MULTIPLE_REQUEST_NOT_ALLOWED  = 0x71,
  EMBER_ZCL_STATUS_INDICATION_REDIRECTION_TO_AP  = 0x72,
  EMBER_ZCL_STATUS_PREFERENCE_DENIED             = 0x73,
  EMBER_ZCL_STATUS_PREFERENCE_IGNORED            = 0x74,
  EMBER_ZCL_STATUS_NOT_AUTHORIZED                = 0x7E,
  EMBER_ZCL_STATUS_RESERVED_FIELD_NOT_ZERO       = 0x7F,
  EMBER_ZCL_STATUS_MALFORMED_COMMAND             = 0x80,
  EMBER_ZCL_STATUS_UNSUP_CLUSTER_COMMAND         = 0x81,
  EMBER_ZCL_STATUS_UNSUP_GENERAL_COMMAND         = 0x82,
  EMBER_ZCL_STATUS_UNSUP_MANUF_CLUSTER_COMMAND   = 0x83,
  EMBER_ZCL_STATUS_UNSUP_MANUF_GENERAL_COMMAND   = 0x84,
  EMBER_ZCL_STATUS_INVALID_FIELD                 = 0x85,
  EMBER_ZCL_STATUS_UNSUPPORTED_ATTRIBUTE         = 0x86,
  EMBER_ZCL_STATUS_INVALID_VALUE                 = 0x87,
  EMBER_ZCL_STATUS_READ_ONLY                     = 0x88,
  EMBER_ZCL_STATUS_INSUFFICIENT_SPACE            = 0x89,
  EMBER_ZCL_STATUS_DUPLICATE_EXISTS              = 0x8A,
  EMBER_ZCL_STATUS_NOT_FOUND                     = 0x8B,
  EMBER_ZCL_STATUS_UNREPORTABLE_ATTRIBUTE        = 0x8C,
  EMBER_ZCL_STATUS_INVALID_DATA_TYPE             = 0x8D,
  EMBER_ZCL_STATUS_INVALID_SELECTOR              = 0x8E,
  EMBER_ZCL_STATUS_WRITE_ONLY                    = 0x8F,
  EMBER_ZCL_STATUS_INCONSISTENT_STARTUP_STATE    = 0x90,
  EMBER_ZCL_STATUS_DEFINED_OUT_OF_BAND           = 0x91,
  EMBER_ZCL_STATUS_INCONSISTENT                  = 0x92,
  EMBER_ZCL_STATUS_ACTION_DENIED                 = 0x93,
  EMBER_ZCL_STATUS_TIMEOUT                       = 0x94,
  EMBER_ZCL_STATUS_ABORT                         = 0x95,
  EMBER_ZCL_STATUS_INVALID_IMAGE                 = 0x96,
  EMBER_ZCL_STATUS_WAIT_FOR_DATA                 = 0x97,
  EMBER_ZCL_STATUS_NO_IMAGE_AVAILABLE            = 0x98,
  EMBER_ZCL_STATUS_REQUIRE_MORE_IMAGE            = 0x99,
  EMBER_ZCL_STATUS_HARDWARE_FAILURE              = 0xC0,
  EMBER_ZCL_STATUS_SOFTWARE_FAILURE              = 0xC1,
  EMBER_ZCL_STATUS_CALIBRATION_ERROR             = 0xC2
} EmberAfStatus;

typedef enum {
  EMBER_ZCL_STEP_MODE_UP    = 0x00,
  EMBER_ZCL_STEP_MODE_DOWN  = 0x01
} EmberAfStepMode;

typedef enum {
  EMBER_ZCL_SUPPLY_STATUS_SUPPLY_OFF  = 0x00,
  EMBER_ZCL_SUPPLY_STATUS_ARMED       = 0x01,
  EMBER_ZCL_SUPPLY_STATUS_SUPPLY_ON   = 0x02
} EmberAfSupplyStatus;

typedef enum {
  EMBER_ZCL_SWITCH_ACTIONS_ON      = 0x00,
  EMBER_ZCL_SWITCH_ACTIONS_OFF     = 0x01,
  EMBER_ZCL_SWITCH_ACTIONS_TOGGLE  = 0x02
} EmberAfSwitchActions;

typedef enum {
  EMBER_ZCL_SWITCH_TYPE_TOGGLE          = 0x00,
  EMBER_ZCL_SWITCH_TYPE_MOMENTARY       = 0x01,
  EMBER_ZCL_SWITCH_TYPE_MULTI_FUNCTION  = 0x02
} EmberAfSwitchType;

typedef enum {
  EMBER_ZCL_TARIFF_RESOLUTION_PERIOD_NOT_DEFINED     = 0x00,
  EMBER_ZCL_TARIFF_RESOLUTION_PERIOD_BILLING_PERIOD  = 0x01,
  EMBER_ZCL_TARIFF_RESOLUTION_PERIOD_ONE_DAY         = 0x02
} EmberAfTariffResolutionPeriod;

typedef enum {
  EMBER_ZCL_TARIFF_TYPE_DELIVERED_TARIFF               = 0x00,
  EMBER_ZCL_TARIFF_TYPE_RECEIVED_TARIFF                = 0x01,
  EMBER_ZCL_TARIFF_TYPE_DELIVERED_AND_RECEIVED_TARIFF  = 0x02
} EmberAfTariffType;

typedef enum {
  EMBER_ZCL_TEMPERATURE_DISPLAY_MODE_CELSIUS     = 0x00,
  EMBER_ZCL_TEMPERATURE_DISPLAY_MODE_FAHRENHEIT  = 0x01
} EmberAfTemperatureDisplayMode;

typedef enum {
  EMBER_ZCL_TEMPERATURE_SETPOINT_HOLD_SETPOINT_HOLD_OFF  = 0x00,
  EMBER_ZCL_TEMPERATURE_SETPOINT_HOLD_SETPOINT_HOLD_ON   = 0x01
} EmberAfTemperatureSetpointHold;

typedef enum {
  EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_COOLING_ONLY                     = 0x00,
  EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_COOLING_WITH_REHEAT              = 0x01,
  EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_HEATING_ONLY                     = 0x02,
  EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_HEATING_WITH_REHEAT              = 0x03,
  EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_COOLING_AND_HEATING              = 0x04,
  EMBER_ZCL_THERMOSTAT_CONTROL_SEQUENCE_COOLING_AND_HEATING_WITH_REHEAT  = 0x05
} EmberAfThermostatControlSequence;

typedef enum {
  EMBER_ZCL_THERMOSTAT_RUNNING_MODE_OFF   = 0x00,
  EMBER_ZCL_THERMOSTAT_RUNNING_MODE_COOL  = 0x03,
  EMBER_ZCL_THERMOSTAT_RUNNING_MODE_HEAT  = 0x04
} EmberAfThermostatRunningMode;

typedef enum {
  EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_OFF                = 0x00,
  EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_AUTO               = 0x01,
  EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_COOL               = 0x03,
  EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_HEAT               = 0x04,
  EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_EMERGENCY_HEATING  = 0x05,
  EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_PRECOOLING         = 0x06,
  EMBER_ZCL_THERMOSTAT_SYSTEM_MODE_FAN_ONLY           = 0x07
} EmberAfThermostatSystemMode;

typedef enum {
  EMBER_ZCL_TIER_BLOCK_MODE_ACTIVE_BLOCK             = 0x00,
  EMBER_ZCL_TIER_BLOCK_MODE_ACTIVE_BLOCK_PRICE_TIER  = 0x01
} EmberAfTierBlockMode;

typedef enum {
  EMBER_ZCL_TIME_ENCODING_RELATIVE  = 0x00,
  EMBER_ZCL_TIME_ENCODING_ABSOLUTE  = 0x40
} EmberAfTimeEncoding;

typedef enum {
  EMBER_ZCL_TUNNELING_PROTOCOL_ID_DLMS_COSEM    = 0x00,
  EMBER_ZCL_TUNNELING_PROTOCOL_ID_IEC_61107     = 0x01,
  EMBER_ZCL_TUNNELING_PROTOCOL_ID_ANSI_C12      = 0x02,
  EMBER_ZCL_TUNNELING_PROTOCOL_ID_M_BUS         = 0x03,
  EMBER_ZCL_TUNNELING_PROTOCOL_ID_SML           = 0x04,
  EMBER_ZCL_TUNNELING_PROTOCOL_ID_CLIMATE_TALK  = 0x05,
  EMBER_ZCL_TUNNELING_PROTOCOL_ID_TEST          = 0xC7
} EmberAfTunnelingProtocolId;

typedef enum {
  EMBER_ZCL_TUNNELING_TRANSFER_DATA_STATUS_NO_SUCH_TUNNEL  = 0x00,
  EMBER_ZCL_TUNNELING_TRANSFER_DATA_STATUS_WRONG_DEVICE    = 0x01,
  EMBER_ZCL_TUNNELING_TRANSFER_DATA_STATUS_DATA_OVERFLOW   = 0x02
} EmberAfTunnelingTransferDataStatus;

typedef enum {
  EMBER_ZCL_TUNNELING_TUNNEL_STATUS_SUCCESS                     = 0x00,
  EMBER_ZCL_TUNNELING_TUNNEL_STATUS_BUSY                        = 0x01,
  EMBER_ZCL_TUNNELING_TUNNEL_STATUS_NO_MORE_TUNNEL_IDS          = 0x02,
  EMBER_ZCL_TUNNELING_TUNNEL_STATUS_PROTOCOL_NOT_SUPPORTED      = 0x03,
  EMBER_ZCL_TUNNELING_TUNNEL_STATUS_FLOW_CONTROL_NOT_SUPPORTED  = 0x04
} EmberAfTunnelingTunnelStatus;

typedef enum {
  EMBER_ZCL_WARNING_EVENT_WARNING1_OVERALL_POWER_ABOVE_AVAILABLE_POWER_LEVEL                                              = 0x00,
  EMBER_ZCL_WARNING_EVENT_WARNING2_OVERALL_POWER_ABOVE_POWER_THRESHOLD_LEVEL                                              = 0x01,
  EMBER_ZCL_WARNING_EVENT_WARNING3_OVERALL_POWER_BACK_BELOW_THE_AVAILABLE_POWER_LEVEL                                     = 0x02,
  EMBER_ZCL_WARNING_EVENT_WARNING4_OVERALL_POWER_BACK_BELOW_THE_POWER_THRESHOLD_LEVEL                                     = 0x03,
  EMBER_ZCL_WARNING_EVENT_WARNING5_OVERALL_POWER_WILL_BE_POTENTIALLY_ABOVE_AVAILABLE_POWER_LEVEL_IF_THE_APPLIANCE_STARTS  = 0x04
} EmberAfWarningEvent;

typedef enum {
  EMBER_ZCL_WARNING_MODE_STOP             = 0x00,
  EMBER_ZCL_WARNING_MODE_BURGLAR          = 0x01,
  EMBER_ZCL_WARNING_MODE_FIRE             = 0x02,
  EMBER_ZCL_WARNING_MODE_EMERGENCY        = 0x03,
  EMBER_ZCL_WARNING_MODE_POLICE_PANIC     = 0x04,
  EMBER_ZCL_WARNING_MODE_FIRE_PANIC       = 0x05,
  EMBER_ZCL_WARNING_MODE_EMERGENCY_PANIC  = 0x06
} EmberAfWarningMode;

typedef enum {
  EMBER_ZCL_WARNING_STOBE_NO_STROBE   = 0x00,
  EMBER_ZCL_WARNING_STOBE_USE_STROBE  = 0x01
} EmberAfWarningStobe;

typedef enum {
  EMBER_ZCL_ZIGBEE_INFORMATION_LOGICAL_TYPE_COORDINATOR  = 0x00,
  EMBER_ZCL_ZIGBEE_INFORMATION_LOGICAL_TYPE_ROUTER       = 0x01,
  EMBER_ZCL_ZIGBEE_INFORMATION_LOGICAL_TYPE_END_DEVICE   = 0x02
} EmberAfZigbeeInformationLogicalType;

typedef enum {
  EMBER_ZCL_ZLL_STATUS_SUCCESS  = 0x00,
  EMBER_ZCL_ZLL_STATUS_FAILURE  = 0x01
} EmberAfZllStatus;

/** @} END Enums */
/** @} END addtogroup */
#endif // __EMBER_AF_ENUMS__
