###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.2.53884/W32 for ARM     06/Feb/2015  13:53:00 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ia #
#                    s-zone-server\ias-zone-server.c                          #
#    Command line =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ia #
#                    s-zone-server\ias-zone-server.c -D                       #
#                    "GENERATED_TOKEN_HEADER=\"app/builder/DoorSensor_SM6011/ #
#                    DoorSensor_SM6011_tokens.h\"" -D                         #
#                    "ZA_GENERATED_HEADER=\"app/builder/DoorSensor_SM6011/Doo #
#                    rSensor_SM6011.h\"" -D LOCAL_STORAGE_BTL -D              #
#                    "BOARD_HEADER=\"app\builder\DoorSensor_SM6011\DoorSensor #
#                    _SM6011_board.h\"" -D "PLATFORM_HEADER=\"hal/micro/corte #
#                    xm3/compiler/iar.h\"" -D CORTEXM3 -D                     #
#                    CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3585 -D PHY_EM3XX -D  #
#                    "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\ #
#                    "" -D "CONFIGURATION_HEADER=\"app/framework/util/config. #
#                    h\"" -D "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/D #
#                    oorSensor_SM6011/DoorSensor_SM6011_endpoint_config.h\""  #
#                    -D "__SOURCEFILE__=\"ias-zone-server.c\"" -lC            #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \ --diag_suppress Pa050 -o C:\Ember\EmberZNet5.3.0-GA\em #
#                    35x\build\DoorSensor_SM6011\ --debug --endian=little     #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ia #
#                    s-zone-server\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app\b #
#                    uilder\DoorSensor_SM6011\ -I                             #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app #
#                    \builder\DoorSensor_SM6011\..\..\..\app\framework\includ #
#                    e\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorS #
#                    ensor_SM6011\..\..\..\ -I C:\Ember\EmberZNet5.3.0-GA\em3 #
#                    5x\app\builder\DoorSensor_SM6011\..\..\..\stack\ -I      #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\hal\ -I C:\Ember\EmberZNet5.3.0-GA\em35x #
#                    \app\builder\DoorSensor_SM6011\..\..\..\hal\..\ -Ohz     #
#                    --use_c++_inline                                         #
#    List file    =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \ias-zone-server.lst                                     #
#    Object file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \ias-zone-server.o                                       #
#                                                                             #
#                                                                             #
###############################################################################

C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ias-zone-server\ias-zone-server.c
      1          // ias-zone-server.c
      2          
      3          #include "af.h"
      4          #include "ias-zone-server.h"
      5          
      6          //-----------------------------------------------------------------------------
      7          // Globals
      8          

   \                                 In section .bss, align 1
      9          static int8u myEndpoint = 0;
   \                     myEndpoint:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
     10          static int8u clientEndpoint = UNKNOWN_ENDPOINT;
     11          
     12          #define DELAY_TIMER_MS 1000 
     13          
     14          extern int8u* emAfZclBuffer;
     15          
     16          //-----------------------------------------------------------------------------
     17          // Forward declarations
     18          
     19          static void setZoneId(int8u zoneId);
     20          
     21          //-----------------------------------------------------------------------------
     22          // Functions
     23          

   \                                 In section .text, align 2, keep-with-next
     24          static EmberStatus sendToClient(void)
     25          {
   \                     sendToClient:
   \   00000000   0xB53E             PUSH     {R1-R5,LR}
     26            int8u ieeeAddress[EUI64_SIZE];
     27            EmberStatus status = emberAfReadServerAttribute(myEndpoint,
     28                                                            ZCL_IAS_ZONE_CLUSTER_ID,
     29                                                            ZCL_IAS_CIE_ADDRESS_ATTRIBUTE_ID,
     30                                                            ieeeAddress,
     31                                                            EUI64_SIZE);
   \   00000002   0x....             LDR.N    R4,??DataTable23_2
   \   00000004   0x2008             MOVS     R0,#+8
   \   00000006   0x9000             STR      R0,[SP, #+0]
   \   00000008   0xAB01             ADD      R3,SP,#+4
   \   0000000A   0x2210             MOVS     R2,#+16
   \   0000000C   0xF44F 0x61A0      MOV      R1,#+1280
   \   00000010   0x7820             LDRB     R0,[R4, #+0]
   \   00000012   0x.... 0x....      BL       emberAfReadServerAttribute
   \   00000016   0x0005             MOVS     R5,R0
     32            if (EMBER_SUCCESS != status) {
   \   00000018   0xD002             BEQ.N    ??sendToClient_0
     33              emberAfIasZoneClusterPrintln("Error: Failed to get CIE Address attribute.  Cannot send to IAS client.");
   \   0000001A   0x.... 0x....      ADR.W    R1,`?<Constant "Error: Failed to get ...">`
   \   0000001E   0xE021             B.N      ??sendToClient_1
     34              return status;
     35            }
     36            EmberNodeId destNodeId = emberLookupNodeIdByEui64(ieeeAddress);
   \                     ??sendToClient_0:
   \   00000020   0xA801             ADD      R0,SP,#+4
   \   00000022   0x.... 0x....      BL       emberLookupNodeIdByEui64
   \   00000026   0x4605             MOV      R5,R0
     37            if (destNodeId == EMBER_NULL_NODE_ID) {
   \   00000028   0xF64F 0x70FF      MOVW     R0,#+65535
   \   0000002C   0x4285             CMP      R5,R0
   \   0000002E   0xD107             BNE.N    ??sendToClient_2
     38              emberAfIasZoneClusterPrintln("Error: Could not determine node ID for CIE IEEE Address.  Cannot send to IAS Client.");
   \   00000030   0x.... 0x....      ADR.W    R1,`?<Constant "Error: Could not dete...">`
   \   00000034   0xF44F 0x70C0      MOV      R0,#+384
   \   00000038   0x.... 0x....      BL       emberAfPrintln
     39              return EMBER_ERR_FATAL;
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0xBD3E             POP      {R1-R5,PC}
     40            }
     41            emberAfSetCommandEndpoints(myEndpoint, clientEndpoint);
   \                     ??sendToClient_2:
   \   00000040   0x7861             LDRB     R1,[R4, #+1]
   \   00000042   0x7820             LDRB     R0,[R4, #+0]
   \   00000044   0x.... 0x....      BL       emberAfSetCommandEndpoints
     42            emAfZclBuffer[0] |= ZCL_DISABLE_DEFAULT_RESPONSE_MASK;
   \   00000048   0x....             LDR.N    R0,??DataTable23_3
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x7801             LDRB     R1,[R0, #+0]
   \   0000004E   0xF041 0x0110      ORR      R1,R1,#0x10
   \   00000052   0x7001             STRB     R1,[R0, #+0]
     43            status = emberAfSendCommandUnicast(EMBER_OUTGOING_DIRECT,
     44                                                           destNodeId);
   \   00000054   0x4629             MOV      R1,R5
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x.... 0x....      BL       emberAfSendCommandUnicast
   \   0000005C   0x0005             MOVS     R5,R0
     45            if (status != EMBER_SUCCESS) {
   \   0000005E   0xD005             BEQ.N    ??sendToClient_3
     46              emberAfIasZoneClusterPrintln("Error: Failed to send IAS Zone Server message.");
   \   00000060   0x.... 0x....      ADR.W    R1,`?<Constant "Error: Failed to send...">`
   \                     ??sendToClient_1:
   \   00000064   0xF44F 0x70C0      MOV      R0,#+384
   \   00000068   0x.... 0x....      BL       emberAfPrintln
     47            }
     48            return status;
   \                     ??sendToClient_3:
   \   0000006C   0x4628             MOV      R0,R5
   \   0000006E   0xBD3E             POP      {R1-R5,PC}       ;; return
     49          }
     50          
     51          static void enrollWithClient(void)
     52          {
     53            emberAfFillCommandIasZoneClusterZoneEnrollRequest(EMBER_AF_PLUGIN_IAS_ZONE_SERVER_ZONE_TYPE,
     54                                                              EMBER_AF_MANUFACTURER_CODE);
     55            if (EMBER_SUCCESS == sendToClient()) {
     56              emberAfIasZoneClusterPrintln("Sent enroll request to IAS Zone client.");
     57            }
     58          }
     59          

   \                                 In section .text, align 2, keep-with-next
     60          void emberAfIasZoneClusterServerAttributeChangedCallback(int8u endpoint,
     61                                                                   EmberAfAttributeId attributeId)
     62          {
   \                     emberAfIasZoneClusterServerAttributeChangedCallback:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
     63            if (endpoint != myEndpoint
     64                || (attributeId != ZCL_IAS_CIE_ADDRESS_ATTRIBUTE_ID)) {
   \   00000004   0x....             LDR.N    R4,??DataTable23_2
   \   00000006   0x7822             LDRB     R2,[R4, #+0]
   \   00000008   0x4290             CMP      R0,R2
   \   0000000A   0xBF08             IT       EQ 
   \   0000000C   0x2910             CMPEQ    R1,#+16
   \   0000000E   0xD110             BNE.N    ??emberAfIasZoneClusterServerAttributeChangedCa_0
     65              return;
     66            }
     67            clientEndpoint = endpoint;
   \   00000010   0x7060             STRB     R0,[R4, #+1]
     68          
     69            // We need to delay to get around a bug where we can't send a command
     70            // at this point because then the Write Attributes response will not
     71            // be sent.  But we also delay to give the client time to configure us.
     72            emberAfIasZoneClusterPrintln("Sending enrollment after %d ms", DELAY_TIMER_MS);
   \   00000012   0xF44F 0x727A      MOV      R2,#+1000
   \   00000016   0x.... 0x....      ADR.W    R1,`?<Constant "Sending enrollment af...">`
   \   0000001A   0x.... 0x....      BL       ?Subroutine2
     73            emberAfScheduleServerTickExtended(myEndpoint,
     74                                              ZCL_IAS_ZONE_CLUSTER_ID,
     75                                              DELAY_TIMER_MS,
     76                                              EMBER_AF_SHORT_POLL,
     77                                              EMBER_AF_STAY_AWAKE);
   \                     ??CrossCallReturnLabel_6:
   \   0000001E   0x2002             MOVS     R0,#+2
   \   00000020   0x9000             STR      R0,[SP, #+0]
   \   00000022   0x2301             MOVS     R3,#+1
   \   00000024   0xF44F 0x727A      MOV      R2,#+1000
   \   00000028   0xF44F 0x61A0      MOV      R1,#+1280
   \   0000002C   0x7820             LDRB     R0,[R4, #+0]
   \   0000002E   0x.... 0x....      BL       emberAfScheduleServerTickExtended
     78          }
   \                     ??emberAfIasZoneClusterServerAttributeChangedCa_0:
   \   00000032   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2:
   \   00000000   0xF44F 0x70C0      MOV      R0,#+384
   \   00000004   0x.... 0x....      B.W      emberAfPrintln
     79          
     80          static boolean amIEnrolled(void)
     81          {
     82            int8u zoneState = EMBER_ZCL_IAS_ZONE_STATE_NOT_ENROLLED;
     83            emberAfReadServerAttribute(myEndpoint,
     84                                       ZCL_IAS_ZONE_CLUSTER_ID,
     85                                       ZCL_ZONE_STATE_ATTRIBUTE_ID,
     86                                       &zoneState,
     87                                       1);  // int8u size
     88            return (zoneState == EMBER_ZCL_IAS_ZONE_STATE_ENROLLED);
     89          }
     90          

   \                                 In section .text, align 2, keep-with-next
     91          static void updateEnrollState(boolean enrolled)
     92          {
   \                     updateEnrollState:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
   \   00000004   0x0004             MOVS     R4,R0
     93            int8u zoneState = (enrolled
     94                               ? EMBER_ZCL_IAS_ZONE_STATE_ENROLLED
     95                               : EMBER_ZCL_IAS_ZONE_STATE_NOT_ENROLLED);
   \   00000006   0xBF18             IT       NE 
   \   00000008   0x2001             MOVNE    R0,#+1
   \   0000000A   0xF88D 0x0008      STRB     R0,[SP, #+8]
     96            emberAfWriteAttribute(myEndpoint,
     97                                  ZCL_IAS_ZONE_CLUSTER_ID,
     98                                  ZCL_ZONE_STATE_ATTRIBUTE_ID, 
     99                                  CLUSTER_MASK_SERVER,
    100                                  (int8u*)&zoneState,
    101                                  ZCL_INT8U_ATTRIBUTE_TYPE);
   \   0000000E   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_11:
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x.... 0x....      BL       ?Subroutine0
    102            emberAfIasZoneClusterPrintln("IAS Zone Server State: %pEnrolled",
    103                                         (enrolled
    104                                          ? ""
    105                                          : "NOT "));
   \                     ??CrossCallReturnLabel_1:
   \   00000018   0x2C00             CMP      R4,#+0
   \   0000001A   0xBF14             ITE      NE 
   \   0000001C   0x....             ADRNE.N  R2,??DataTable23  ;; ""
   \   0000001E   0x.... 0x....      ADREQ.W  R2,`?<Constant "NOT ">`
   \   00000022   0x.... 0x....      ADR.W    R1,`?<Constant "IAS Zone Server State...">`
   \   00000026   0x.... 0x....      BL       ?Subroutine2
    106          }
   \                     ??CrossCallReturnLabel_5:
   \   0000002A   0xBD1F             POP      {R0-R4,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5:
   \   00000000   0x2020             MOVS     R0,#+32
   \   00000002   0x9001             STR      R0,[SP, #+4]
   \   00000004   0xA802             ADD      R0,SP,#+8
   \   00000006   0x9000             STR      R0,[SP, #+0]
   \   00000008   0x2340             MOVS     R3,#+64
   \   0000000A   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   0xF44F 0x61A0      MOV      R1,#+1280
   \   00000004   0x....             LDR.N    R0,??DataTable23_2
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x.... 0x....      B.W      emberAfWriteAttribute
    107          

   \                                 In section .text, align 2, keep-with-next
    108          boolean emberAfIasZoneClusterZoneEnrollResponseCallback(int8u enrollResponseCode,
    109                                                                  int8u zoneId)
    110          {
   \                     emberAfIasZoneClusterZoneEnrollResponseCallback:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    111            updateEnrollState(enrollResponseCode
    112                              == EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_SUCCESS);
   \   00000006   0x1E40             SUBS     R0,R0,#+1
   \   00000008   0x4180             SBCS     R0,R0,R0
   \   0000000A   0x0FC0             LSRS     R0,R0,#+31
   \   0000000C   0x.... 0x....      BL       updateEnrollState
    113            setZoneId((enrollResponseCode
    114                        == EMBER_ZCL_IAS_ENROLL_RESPONSE_CODE_SUCCESS)
    115                      ? zoneId
    116                      : UNDEFINED_ZONE_ID);
   \   00000010   0xB104             CBZ.N    R4,??emberAfIasZoneClusterZoneEnrollResponseCallba_0
   \   00000012   0x25FF             MOVS     R5,#+255
   \                     ??emberAfIasZoneClusterZoneEnrollResponseCallba_0:
   \   00000014   0x4628             MOV      R0,R5
   \   00000016   0x.... 0x....      BL       setZoneId
    117            return TRUE;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    118          } 
    119          
    120          static EmberStatus sendZoneUpdate(int8u timeSinceStatusOccurredQs)
    121          {
    122            EmberStatus status;
    123            int16u zoneStatus;
    124            if (!amIEnrolled()) {
    125              return EMBER_INVALID_CALL;
    126            }
    127            emberAfReadServerAttribute(myEndpoint,
    128                                       ZCL_IAS_ZONE_CLUSTER_ID,
    129                                       ZCL_ZONE_STATUS_ATTRIBUTE_ID,
    130                                       (int8u*)&zoneStatus,
    131                                       2);  // int16u size  
    132            emberAfFillCommandIasZoneClusterZoneStatusChangeNotification(zoneStatus,
    133                                                                         0, // extended status
    134                                                                            // must be zero per the spec.
    135                                                                         emberAfPluginIasZoneServerGetZoneId(),
    136                                                                         timeSinceStatusOccurredQs);  // known as delay in the spec 
    137            status = sendToClient();
    138            if (EMBER_SUCCESS == status) {
    139              emberAfIasZoneClusterPrintln("Sent zone status update (0x%2X)", zoneStatus);
    140            }
    141            return status;
    142          }
    143          

   \                                 In section .text, align 2, keep-with-next
    144          EmberStatus emberAfPluginIasZoneServerUpdateZoneStatus(int16u newStatus,
    145                                                                 int8u timeSinceStatusOccurredQs)
    146          {
   \                     emberAfPluginIasZoneServerUpdateZoneStatus:
   \   00000000   0xB531             PUSH     {R0,R4,R5,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
   \   00000004   0x460C             MOV      R4,R1
    147            emberAfWriteAttribute(myEndpoint,
    148                                  ZCL_IAS_ZONE_CLUSTER_ID,
    149                                  ZCL_ZONE_STATUS_ATTRIBUTE_ID, 
    150                                  CLUSTER_MASK_SERVER,
    151                                  (int8u*)&newStatus,
    152                                  ZCL_INT16U_ATTRIBUTE_TYPE);  
   \   00000006   0x....             LDR.N    R5,??DataTable23_2
   \   00000008   0x2021             MOVS     R0,#+33
   \   0000000A   0x9001             STR      R0,[SP, #+4]
   \   0000000C   0xA806             ADD      R0,SP,#+24
   \   0000000E   0x9000             STR      R0,[SP, #+0]
   \   00000010   0x2340             MOVS     R3,#+64
   \   00000012   0x2202             MOVS     R2,#+2
   \   00000014   0xF44F 0x61A0      MOV      R1,#+1280
   \   00000018   0x7828             LDRB     R0,[R5, #+0]
   \   0000001A   0x.... 0x....      BL       emberAfWriteAttribute
    153            return sendZoneUpdate(timeSinceStatusOccurredQs);
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x9000             STR      R0,[SP, #+0]
   \   00000028   0xAB01             ADD      R3,SP,#+4
   \   0000002A   0x2200             MOVS     R2,#+0
   \   0000002C   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_8:
   \   00000030   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   00000034   0x2801             CMP      R0,#+1
   \   00000036   0xD120             BNE.N    ??emberAfPluginIasZoneServerUpdateZoneStatus_0
   \   00000038   0x2002             MOVS     R0,#+2
   \   0000003A   0x9000             STR      R0,[SP, #+0]
   \   0000003C   0xAB04             ADD      R3,SP,#+16
   \   0000003E   0x2202             MOVS     R2,#+2
   \   00000040   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_7:
   \   00000044   0x.... 0x....      BL       emberAfPluginIasZoneServerGetZoneId
   \   00000048   0x9403             STR      R4,[SP, #+12]
   \   0000004A   0x9002             STR      R0,[SP, #+8]
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x9001             STR      R0,[SP, #+4]
   \   00000050   0xF8BD 0x0010      LDRH     R0,[SP, #+16]
   \   00000054   0x9000             STR      R0,[SP, #+0]
   \   00000056   0x.... 0x....      ADR.W    R3,`?<Constant "vuuv">`
   \   0000005A   0x2200             MOVS     R2,#+0
   \   0000005C   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_10:
   \   00000060   0x.... 0x....      BL       sendToClient
   \   00000064   0x0004             MOVS     R4,R0
   \   00000066   0xD105             BNE.N    ??CrossCallReturnLabel_4
   \   00000068   0xF8BD 0x2010      LDRH     R2,[SP, #+16]
   \   0000006C   0x.... 0x....      ADR.W    R1,`?<Constant "Sent zone status upda...">`
   \   00000070   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_4:
   \   00000074   0x4620             MOV      R0,R4
   \   00000076   0xB007             ADD      SP,SP,#+28
   \   00000078   0xBD30             POP      {R4,R5,PC}       ;; return
   \                     ??emberAfPluginIasZoneServerUpdateZoneStatus_0:
   \   0000007A   0x2470             MOVS     R4,#+112
   \   0000007C   0xE7FA             B.N      ??CrossCallReturnLabel_4
    154          }
    155          

   \                                 In section .text, align 2, keep-with-next
    156          void emberAfIasZoneClusterServerInitCallback(int8u endpoint)
    157          {
   \                     emberAfIasZoneClusterServerInitCallback:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
   \   00000004   0x4604             MOV      R4,R0
    158            myEndpoint = endpoint;
   \   00000006   0x....             LDR.N    R0,??DataTable23_2
   \   00000008   0x7004             STRB     R4,[R0, #+0]
    159          
    160            int8u ieeeAddress[] = { 0, 0, 0, 0, 0, 0, 0, 0 };
   \   0000000A   0xA803             ADD      R0,SP,#+12
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x2200             MOVS     R2,#+0
   \   00000010   0xC006             STM      R0!,{R1,R2}
    161            emberAfWriteAttribute(endpoint,
    162                                  ZCL_IAS_ZONE_CLUSTER_ID,
    163                                  ZCL_IAS_CIE_ADDRESS_ATTRIBUTE_ID,
    164                                  CLUSTER_MASK_SERVER,
    165                                  (int8u*)ieeeAddress,
    166                                  ZCL_IEEE_ADDRESS_ATTRIBUTE_TYPE);
   \   00000012   0x20F0             MOVS     R0,#+240
   \   00000014   0x9001             STR      R0,[SP, #+4]
   \   00000016   0xA803             ADD      R0,SP,#+12
   \   00000018   0x9000             STR      R0,[SP, #+0]
   \   0000001A   0x2340             MOVS     R3,#+64
   \   0000001C   0x2210             MOVS     R2,#+16
   \   0000001E   0xF44F 0x61A0      MOV      R1,#+1280
   \   00000022   0x4620             MOV      R0,R4
   \   00000024   0x.... 0x....      BL       emberAfWriteAttribute
    167          
    168            int16u zoneType = EMBER_AF_PLUGIN_IAS_ZONE_SERVER_ZONE_TYPE;
   \   00000028   0x.... 0x....      BL       ?Subroutine1
    169            emberAfWriteAttribute(endpoint,
    170                                  ZCL_IAS_ZONE_CLUSTER_ID,
    171                                  ZCL_ZONE_TYPE_ATTRIBUTE_ID, 
    172                                  CLUSTER_MASK_SERVER,
    173                                  (int8u*)&zoneType,
    174                                  ZCL_INT16U_ATTRIBUTE_TYPE);
   \                     ??CrossCallReturnLabel_2:
   \   0000002C   0x4620             MOV      R0,R4
   \   0000002E   0x.... 0x....      BL       emberAfWriteAttribute
    175          
    176            setZoneId(UNDEFINED_ZONE_ID);
   \   00000032   0x20FF             MOVS     R0,#+255
   \   00000034   0x.... 0x....      BL       setZoneId
    177          
    178            updateEnrollState(FALSE);  // enrolled?
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      BL       updateEnrollState
    179          
    180            emberAfPluginIasZoneServerUpdateZoneStatus(0,   // status
    181                                                       0);  // time since status occurred
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x4608             MOV      R0,R1
   \   00000042   0x.... 0x....      BL       emberAfPluginIasZoneServerUpdateZoneStatus
    182          } 
   \   00000046   0xB006             ADD      SP,SP,#+24
   \   00000048   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   0x2015             MOVS     R0,#+21
   \   00000002   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   \   00000006   0x2021             MOVS     R0,#+33
   \   00000008   0x9001             STR      R0,[SP, #+4]
   \   0000000A   0xA802             ADD      R0,SP,#+8
   \   0000000C   0x9000             STR      R0,[SP, #+0]
   \   0000000E   0x2340             MOVS     R3,#+64
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0xF44F 0x61A0      MOV      R1,#+1280
   \   00000016   0x4770             BX       LR
    183          

   \                                 In section .text, align 2, keep-with-next
    184          void emberAfIasZoneClusterServerTickCallback(int8u endpoint)
    185          {
   \                     emberAfIasZoneClusterServerTickCallback:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    186            enrollWithClient();
   \   00000004   0xF241 0x0002      MOVW     R0,#+4098
   \   00000008   0x9001             STR      R0,[SP, #+4]
   \   0000000A   0x2015             MOVS     R0,#+21
   \   0000000C   0x9000             STR      R0,[SP, #+0]
   \   0000000E   0x....             ADR.N    R3,??DataTable23_1  ;; 0x76, 0x76, 0x00, 0x00
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_9:
   \   00000016   0x.... 0x....      BL       sendToClient
   \   0000001A   0xB940             CBNZ.N   R0,??emberAfIasZoneClusterServerTickCallback_0
   \   0000001C   0x.... 0x....      ADR.W    R1,`?<Constant "Sent enroll request t...">`
   \   00000020   0xF44F 0x70C0      MOV      R0,#+384
   \   00000024   0xB003             ADD      SP,SP,#+12
   \   00000026   0xF85D 0xEB04      POP      {LR}
   \   0000002A   0x.... 0x....      B.W      emberAfPrintln
    187          }                   
   \                     ??emberAfIasZoneClusterServerTickCallback_0:
   \   0000002E   0xBD07             POP      {R0-R2,PC}       ;; return
    188          

   \                                 In section .text, align 2, keep-with-next
    189          int8u emAfGetIasZoneServerEndpoint(void)
    190          {
    191            return myEndpoint;
   \                     emAfGetIasZoneServerEndpoint:
   \   00000000   0x....             LDR.N    R0,??DataTable23_2
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    192          }
    193          

   \                                 In section .text, align 2, keep-with-next
    194          int8u emAfGetRemoteIasZoneClientEndpoint(void)
    195          {
    196            return clientEndpoint;
   \                     emAfGetRemoteIasZoneClientEndpoint:
   \   00000000   0x....             LDR.N    R0,??DataTable23_2
   \   00000002   0x7840             LDRB     R0,[R0, #+1]
   \   00000004   0x4770             BX       LR               ;; return
    197          }
    198          

   \                                 In section .text, align 2, keep-with-next
    199          int8u emberAfPluginIasZoneServerGetZoneId(void)
    200          {
   \                     emberAfPluginIasZoneServerGetZoneId:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    201            int8u zoneId = UNDEFINED_ZONE_ID;
   \   00000004   0x20FF             MOVS     R0,#+255
   \   00000006   0xF88D 0x0004      STRB     R0,[SP, #+4]
    202            emberAfReadServerAttribute(myEndpoint,
    203                                       ZCL_IAS_ZONE_CLUSTER_ID,
    204                                       ZCL_ZONE_ID_ATTRIBUTE_ID,
    205                                       &zoneId,
    206                                       emberAfGetDataSize(ZCL_INT8U_ATTRIBUTE_TYPE));
   \   0000000A   0x2020             MOVS     R0,#+32
   \   0000000C   0x.... 0x....      BL       emberAfGetDataSize
   \   00000010   0x9000             STR      R0,[SP, #+0]
   \   00000012   0xAB01             ADD      R3,SP,#+4
   \   00000014   0x2211             MOVS     R2,#+17
   \   00000016   0xF44F 0x61A0      MOV      R1,#+1280
   \   0000001A   0x....             LDR.N    R0,??DataTable23_2
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x.... 0x....      BL       emberAfReadServerAttribute
    207            return zoneId;
   \   00000022   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   00000026   0xBD0E             POP      {R1-R3,PC}       ;; return
    208          }
    209          

   \                                 In section .text, align 2, keep-with-next
    210          static void setZoneId(int8u zoneId)
    211          {
   \                     setZoneId:
   \   00000000   0xB501             PUSH     {R0,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    212            emberAfWriteAttribute(myEndpoint,
    213                                  ZCL_IAS_ZONE_CLUSTER_ID,
    214                                  ZCL_ZONE_ID_ATTRIBUTE_ID,
    215                                  CLUSTER_MASK_SERVER,
    216                                  &zoneId,
    217                                  ZCL_INT8U_ATTRIBUTE_TYPE);
   \   00000004   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_12:
   \   00000008   0x2211             MOVS     R2,#+17
   \   0000000A   0x.... 0x....      BL       ?Subroutine0
    218          }
   \                     ??CrossCallReturnLabel_0:
   \   0000000E   0xBD07             POP      {R0-R2,PC}       ;; return
    219          
    220          
    221          // New DC code

   \                                 In section .text, align 2, keep-with-next
    222          void unenrollSecurityDevice( void )
    223          {
   \                     unenrollSecurityDevice:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    224            myEndpoint = emAfEndpoints[0].endpoint;
   \   00000004   0x....             LDR.N    R0,??DataTable23_4
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x....             LDR.N    R4,??DataTable23_2
   \   0000000A   0x7020             STRB     R0,[R4, #+0]
    225            //emberSerialPrintf(APP_SERIAL, "unenroll A %x\r\n", myEndpoint);
    226          
    227            int8u ieeeAddress[] = { 0, 0, 0, 0, 0, 0, 0, 0 };
   \   0000000C   0xA903             ADD      R1,SP,#+12
   \   0000000E   0x2200             MOVS     R2,#+0
   \   00000010   0x2300             MOVS     R3,#+0
   \   00000012   0xC10C             STM      R1!,{R2,R3}
    228            emberAfWriteAttribute(myEndpoint,
    229                                  ZCL_IAS_ZONE_CLUSTER_ID,
    230                                  ZCL_IAS_CIE_ADDRESS_ATTRIBUTE_ID,
    231                                  CLUSTER_MASK_SERVER,
    232                                  (int8u*)ieeeAddress,
    233                                  ZCL_IEEE_ADDRESS_ATTRIBUTE_TYPE);
   \   00000014   0x21F0             MOVS     R1,#+240
   \   00000016   0x9101             STR      R1,[SP, #+4]
   \   00000018   0xA903             ADD      R1,SP,#+12
   \   0000001A   0x9100             STR      R1,[SP, #+0]
   \   0000001C   0x2340             MOVS     R3,#+64
   \   0000001E   0x2210             MOVS     R2,#+16
   \   00000020   0xF44F 0x61A0      MOV      R1,#+1280
   \   00000024   0x.... 0x....      BL       emberAfWriteAttribute
    234          
    235            //emberSerialPrintf(APP_SERIAL, "unenroll B\r\n");
    236            int16u zoneType = EMBER_AF_PLUGIN_IAS_ZONE_SERVER_ZONE_TYPE;
   \   00000028   0x.... 0x....      BL       ?Subroutine1
    237            emberAfWriteAttribute(myEndpoint,
    238                                  ZCL_IAS_ZONE_CLUSTER_ID,
    239                                  ZCL_ZONE_TYPE_ATTRIBUTE_ID, 
    240                                  CLUSTER_MASK_SERVER,
    241                                  (int8u*)&zoneType,
    242                                  ZCL_INT16U_ATTRIBUTE_TYPE);
   \                     ??CrossCallReturnLabel_3:
   \   0000002C   0x7820             LDRB     R0,[R4, #+0]
   \   0000002E   0x.... 0x....      BL       emberAfWriteAttribute
    243          
    244            //emberSerialPrintf(APP_SERIAL, "unenroll C\r\n");
    245            setZoneId(UNDEFINED_ZONE_ID);
   \   00000032   0x20FF             MOVS     R0,#+255
   \   00000034   0x.... 0x....      BL       setZoneId
    246          
    247            //emberSerialPrintf(APP_SERIAL, "unenroll D\r\n");
    248            updateEnrollState(FALSE);  // enrolled?
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      BL       updateEnrollState
    249          }
   \   0000003E   0xB006             ADD      SP,SP,#+24
   \   00000040   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3:
   \   00000000   0xF44F 0x61A0      MOV      R1,#+1280
   \   00000004   0x7828             LDRB     R0,[R5, #+0]
   \   00000006   0x.... 0x....      B.W      emberAfReadServerAttribute

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4:
   \   00000000   0xF44F 0x61A0      MOV      R1,#+1280
   \   00000004   0x2009             MOVS     R0,#+9
   \   00000006   0x.... 0x....      B.W      emberAfFillExternalBuffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_1:
   \   00000000   0x76 0x76          DC8      0x76, 0x76, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_2:
   \   00000000   0x........         DC32     myEndpoint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_3:
   \   00000000   0x........         DC32     emAfZclBuffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_4:
   \   00000000   0x........         DC32     emAfEndpoints

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Error: Failed to get ...">`:
   \   00000000   0x45 0x72          DC8 45H, 72H, 72H, 6FH, 72H, 3AH, 20H, 46H
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x46    
   \   00000008   0x61 0x69          DC8 61H, 69H, 6CH, 65H, 64H, 20H, 74H, 6FH
   \              0x6C 0x65    
   \              0x64 0x20    
   \              0x74 0x6F    
   \   00000010   0x20 0x67          DC8 20H, 67H, 65H, 74H, 20H, 43H, 49H, 45H
   \              0x65 0x74    
   \              0x20 0x43    
   \              0x49 0x45    
   \   00000018   0x20 0x41          DC8 20H, 41H, 64H, 64H, 72H, 65H, 73H, 73H
   \              0x64 0x64    
   \              0x72 0x65    
   \              0x73 0x73    
   \   00000020   0x20 0x61          DC8 20H, 61H, 74H, 74H, 72H, 69H, 62H, 75H
   \              0x74 0x74    
   \              0x72 0x69    
   \              0x62 0x75    
   \   00000028   0x74 0x65          DC8 74H, 65H, 2EH, 20H, 20H, 43H, 61H, 6EH
   \              0x2E 0x20    
   \              0x20 0x43    
   \              0x61 0x6E    
   \   00000030   0x6E 0x6F          DC8 6EH, 6FH, 74H, 20H, 73H, 65H, 6EH, 64H
   \              0x74 0x20    
   \              0x73 0x65    
   \              0x6E 0x64    
   \   00000038   0x20 0x74          DC8 20H, 74H, 6FH, 20H, 49H, 41H, 53H, 20H
   \              0x6F 0x20    
   \              0x49 0x41    
   \              0x53 0x20    
   \   00000040   0x63 0x6C          DC8 63H, 6CH, 69H, 65H, 6EH, 74H, 2EH, 0
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x2E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Error: Could not dete...">`:
   \   00000000   0x45 0x72          DC8 45H, 72H, 72H, 6FH, 72H, 3AH, 20H, 43H
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x43    
   \   00000008   0x6F 0x75          DC8 6FH, 75H, 6CH, 64H, 20H, 6EH, 6FH, 74H
   \              0x6C 0x64    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \   00000010   0x20 0x64          DC8 20H, 64H, 65H, 74H, 65H, 72H, 6DH, 69H
   \              0x65 0x74    
   \              0x65 0x72    
   \              0x6D 0x69    
   \   00000018   0x6E 0x65          DC8 6EH, 65H, 20H, 6EH, 6FH, 64H, 65H, 20H
   \              0x20 0x6E    
   \              0x6F 0x64    
   \              0x65 0x20    
   \   00000020   0x49 0x44          DC8 49H, 44H, 20H, 66H, 6FH, 72H, 20H, 43H
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x43    
   \   00000028   0x49 0x45          DC8 49H, 45H, 20H, 49H, 45H, 45H, 45H, 20H
   \              0x20 0x49    
   \              0x45 0x45    
   \              0x45 0x20    
   \   00000030   0x41 0x64          DC8 41H, 64H, 64H, 72H, 65H, 73H, 73H, 2EH
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x2E    
   \   00000038   0x20 0x20          DC8 20H, 20H, 43H, 61H, 6EH, 6EH, 6FH, 74H
   \              0x43 0x61    
   \              0x6E 0x6E    
   \              0x6F 0x74    
   \   00000040   0x20 0x73          DC8 20H, 73H, 65H, 6EH, 64H, 20H, 74H, 6FH
   \              0x65 0x6E    
   \              0x64 0x20    
   \              0x74 0x6F    
   \   00000048   0x20 0x49          DC8 20H, 49H, 41H, 53H, 20H, 43H, 6CH, 69H
   \              0x41 0x53    
   \              0x20 0x43    
   \              0x6C 0x69    
   \   00000050   0x65 0x6E          DC8 65H, 6EH, 74H, 2EH, 0
   \              0x74 0x2E    
   \              0x00         
   \   00000055   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Error: Failed to send...">`:
   \   00000000   0x45 0x72          DC8 "Error: Failed to send IAS Zone Server message."
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x46    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x20    
   \              0x74 0x6F    
   \              0x20 0x73    
   \              0x65 0x6E    
   \              0x64 0x20    
   \              0x49 0x41    
   \              0x53 0x20    
   \              0x5A 0x6F    
   \              0x6E 0x65    
   \              0x20 0x53    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x6D 0x65    
   \              0x73 0x73    
   \              0x61 0x67    
   \              0x65 0x2E    
   \              0x00         
   \   0000002F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Sent enroll request t...">`:
   \   00000000   0x53 0x65          DC8 "Sent enroll request to IAS Zone client."
   \              0x6E 0x74    
   \              0x20 0x65    
   \              0x6E 0x72    
   \              0x6F 0x6C    
   \              0x6C 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x74 0x6F    
   \              0x20 0x49    
   \              0x41 0x53    
   \              0x20 0x5A    
   \              0x6F 0x6E    
   \              0x65 0x20    
   \              0x63 0x6C    
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x2E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Sending enrollment af...">`:
   \   00000000   0x53 0x65          DC8 "Sending enrollment after %d ms"
   \              0x6E 0x64    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x65 0x6E    
   \              0x72 0x6F    
   \              0x6C 0x6C    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x20 0x61    
   \              0x66 0x74    
   \              0x65 0x72    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x6D 0x73    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "IAS Zone Server State...">`:
   \   00000000   0x49 0x41          DC8 "IAS Zone Server State: %pEnrolled"
   \              0x53 0x20    
   \              0x5A 0x6F    
   \              0x6E 0x65    
   \              0x20 0x53    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x65 0x3A    
   \              0x20 0x25    
   \              0x70 0x45    
   \              0x6E 0x72    
   \              0x6F 0x6C    
   \              0x6C 0x65    
   \              0x64 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "NOT ">`:
   \   00000000   0x4E 0x4F          DC8 "NOT "
   \              0x54 0x20    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "vuuv">`:
   \   00000000   0x76 0x75          DC8 "vuuv"
   \              0x75 0x76    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Sent zone status upda...">`:
   \   00000000   0x53 0x65          DC8 "Sent zone status update (0x%2X)"
   \              0x6E 0x74    
   \              0x20 0x7A    
   \              0x6F 0x6E    
   \              0x65 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x20 0x75    
   \              0x70 0x64    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x28 0x30    
   \              0x78 0x25    
   \              0x32 0x58    
   \              0x29 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "vv">`:
   \   00000000   0x76 0x76          DC8 "vv"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000   0x00               DC8 ""

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0, 0, 0, 0, 0, 0, 0, 0}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0, 0, 0, 0, 0, 0, 0, 0}>_1`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  emAfGetIasZoneServerEndpoint
        0  emAfGetRemoteIasZoneClientEndpoint
       16  emberAfIasZoneClusterServerAttributeChangedCallback
             16 -> emberAfPrintln
             16 -> emberAfScheduleServerTickExtended
       32  emberAfIasZoneClusterServerInitCallback
             32 -> emberAfPluginIasZoneServerUpdateZoneStatus
             32 -> emberAfWriteAttribute
             32 -> setZoneId
             32 -> updateEnrollState
       16  emberAfIasZoneClusterServerTickCallback
             16 -> emberAfFillExternalBuffer
              0 -> emberAfPrintln
             16 -> sendToClient
       16  emberAfIasZoneClusterZoneEnrollResponseCallback
             16 -> setZoneId
             16 -> updateEnrollState
       16  emberAfPluginIasZoneServerGetZoneId
             16 -> emberAfGetDataSize
             16 -> emberAfReadServerAttribute
       40  emberAfPluginIasZoneServerUpdateZoneStatus
             40 -> emberAfFillExternalBuffer
             40 -> emberAfPluginIasZoneServerGetZoneId
             40 -> emberAfPrintln
             40 -> emberAfReadServerAttribute
             40 -> emberAfWriteAttribute
             40 -> sendToClient
       24  sendToClient
             24 -> emberAfPrintln
             24 -> emberAfReadServerAttribute
             24 -> emberAfSendCommandUnicast
             24 -> emberAfSetCommandEndpoints
             24 -> emberLookupNodeIdByEui64
       16  setZoneId
             16 -> emberAfWriteAttribute
       32  unenrollSecurityDevice
             32 -> emberAfWriteAttribute
             32 -> setZoneId
             32 -> updateEnrollState
       24  updateEnrollState
             24 -> emberAfPrintln
             24 -> emberAfWriteAttribute


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Constant "">
      88  ?<Constant "Error: Could not dete...">
      72  ?<Constant "Error: Failed to get ...">
      48  ?<Constant "Error: Failed to send...">
      36  ?<Constant "IAS Zone Server State...">
       8  ?<Constant "NOT ">
      32  ?<Constant "Sending enrollment af...">
      40  ?<Constant "Sent enroll request t...">
      32  ?<Constant "Sent zone status upda...">
       8  ?<Constant "vuuv">
       4  ?<Constant "vv">
       8  ?<Constant {0, 0, 0, 0, 0, 0, 0, 0}>
       8  ?<Constant {0, 0, 0, 0, 0, 0, 0, 0}>_1
       4  ??DataTable23
       4  ??DataTable23_1
       4  ??DataTable23_2
       4  ??DataTable23_3
       4  ??DataTable23_4
      12  ?Subroutine0
      24  ?Subroutine1
       8  ?Subroutine2
      10  ?Subroutine3
      10  ?Subroutine4
      12  ?Subroutine5
       6  emAfGetIasZoneServerEndpoint
       6  emAfGetRemoteIasZoneClientEndpoint
      52  emberAfIasZoneClusterServerAttributeChangedCallback
      74  emberAfIasZoneClusterServerInitCallback
      48  emberAfIasZoneClusterServerTickCallback
      30  emberAfIasZoneClusterZoneEnrollResponseCallback
      40  emberAfPluginIasZoneServerGetZoneId
     126  emberAfPluginIasZoneServerUpdateZoneStatus
       2  myEndpoint
          clientEndpoint
     112  sendToClient
      16  setZoneId
      66  unenrollSecurityDevice
      44  updateEnrollState

 
     2 bytes in section .bss
    21 bytes in section .rodata
 1 080 bytes in section .text
 
 1 080 bytes of CODE  memory
    21 bytes of CONST memory
     2 bytes of DATA  memory

Errors: none
Warnings: none
