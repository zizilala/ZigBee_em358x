###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.2.53884/W32 for ARM     06/Feb/2015  13:53:05 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\util\af-e #
#                    vent.c                                                   #
#    Command line =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\util\af-e #
#                    vent.c -D "GENERATED_TOKEN_HEADER=\"app/builder/DoorSens #
#                    or_SM6011/DoorSensor_SM6011_tokens.h\"" -D               #
#                    "ZA_GENERATED_HEADER=\"app/builder/DoorSensor_SM6011/Doo #
#                    rSensor_SM6011.h\"" -D LOCAL_STORAGE_BTL -D              #
#                    "BOARD_HEADER=\"app\builder\DoorSensor_SM6011\DoorSensor #
#                    _SM6011_board.h\"" -D "PLATFORM_HEADER=\"hal/micro/corte #
#                    xm3/compiler/iar.h\"" -D CORTEXM3 -D                     #
#                    CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3585 -D PHY_EM3XX -D  #
#                    "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\ #
#                    "" -D "CONFIGURATION_HEADER=\"app/framework/util/config. #
#                    h\"" -D "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/D #
#                    oorSensor_SM6011/DoorSensor_SM6011_endpoint_config.h\""  #
#                    -D "__SOURCEFILE__=\"af-event.c\"" -lC                   #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \ --diag_suppress Pa050 -o C:\Ember\EmberZNet5.3.0-GA\em #
#                    35x\build\DoorSensor_SM6011\ --debug --endian=little     #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\util\ -I  #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\ #
#                    DoorSensor_SM6011\..\..\..\ -I                           #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\app\framework\include\ -I                #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app #
#                    \builder\DoorSensor_SM6011\..\..\..\stack\ -I            #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\hal\ -I C:\Ember\EmberZNet5.3.0-GA\em35x #
#                    \app\builder\DoorSensor_SM6011\..\..\..\hal\..\ -Ohz     #
#                    --use_c++_inline                                         #
#    List file    =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \af-event.lst                                            #
#    Object file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \af-event.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\util\af-event.c
      1          // *****************************************************************************
      2          // * af-event.c
      3          // *
      4          // * Application event code that is common to both the SOC and EZSP platforms.
      5          // *
      6          // * Copyright 2010 by Ember Corporation. All rights reserved.              *80*
      7          // *****************************************************************************
      8          
      9          #include PLATFORM_HEADER     // Micro and compiler specific typedefs and macros
     10          #include "../include/af.h"
     11          #include "callback.h"
     12          #include "af-event.h"
     13          #include "stack/include/error.h"
     14          #include "hal/hal.h"
     15          #include "../security/crypto-state.h"
     16          #include "app/framework/util/service-discovery.h"
     17          #ifdef EMBER_AF_PLUGIN_FRAGMENTATION
     18          #include "app/framework/plugin/fragmentation/fragmentation.h"
     19          #endif 
     20          
     21          #include "app/framework/plugin/test-harness/test-harness.h"
     22          
     23          #include "app/framework/util/attribute-storage.h"
     24          
     25          // *****************************************************************************
     26          // Globals
     27          
     28          // Task ids used to run events through idling

   \                                 In section .bss, align 1
     29          EmberTaskId emAfTaskId;
   \                     emAfTaskId:
   \   00000000                      DS8 1
     30          
     31          #ifdef EMBER_AF_GENERATED_EVENT_CODE

   \                                 In section .text, align 2, keep-with-next
   \                     emberAfPluginEndDeviceSupportPollingNetworkEventWrapper0:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       emberAfPushNetworkIndex
   \   00000008   0x....             LDR.N    R0,??DataTable24
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       emberAfPluginEndDeviceSupportPollingNetworkEventHandler
   \   00000012   0x....             B.N      ?Subroutine0

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginEndDeviceSupportMoveNetworkEventWrapper0(void)
   \                     emberAfPluginEndDeviceSupportMoveNetworkEventWrapper0:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       emberAfPushNetworkIndex
   \   00000008   0x....             LDR.N    R0,??DataTable24_1
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       emberAfPluginEndDeviceSupportMoveNetworkEventHandler
   \   00000012                      REQUIRE ?Subroutine0
   \   00000012                      ;; // Fall through to label ?Subroutine0

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfIdentifyClusterServerTickCallbackWrapperFunction1(void)
   \                     emberAfIdentifyClusterServerTickCallbackWrapperFunction1:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      BL       emberAfPushEndpointNetworkIndex
   \   00000008   0x....             LDR.N    R0,??DataTable24_2
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      BL       emberAfIdentifyClusterServerTickCallback
   \   00000014   0x....             B.N      ?Subroutine0

   \                                 In section .text, align 2, keep-with-next
     32            EMBER_AF_GENERATED_EVENT_CODE
   \   __interwork __softfp void emberAfIasZoneClusterServerTickCallbackWrapperFunction1(void)
   \                     emberAfIasZoneClusterServerTickCallbackWrapperFunction1:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      BL       emberAfPushEndpointNetworkIndex
   \   00000008   0x....             LDR.N    R0,??DataTable24_3
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      BL       emberAfIasZoneClusterServerTickCallback
   \   00000014   0x....             B.N      ?Subroutine0

   \                                 In section .bss, align 4
   \   __absolute struct <unnamed> emberAfIdentifyClusterServerTickCallbackControl1
   \                     emberAfIdentifyClusterServerTickCallbackControl1:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   \   __absolute struct <unnamed> emberAfIasZoneClusterServerTickCallbackControl1
   \                     emberAfIasZoneClusterServerTickCallbackControl1:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   \   __absolute struct <unnamed> emberAfPluginEndDeviceSupportPollingNetworkEventControls[1]
   \                     emberAfPluginEndDeviceSupportPollingNetworkEventControls:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   \   __absolute struct <unnamed> emberAfPluginEndDeviceSupportMoveNetworkEventControls[1]
   \                     emberAfPluginEndDeviceSupportMoveNetworkEventControls:
   \   00000000                      DS8 8
     33          #endif //EMBER_AF_GENERATED_EVENT_CODE
     34          
     35          #if defined(EMBER_AF_GENERATED_EVENT_CONTEXT)

   \                                 In section .data, align 4
     36          int16u emAfAppEventContextLength = EMBER_AF_EVENT_CONTEXT_LENGTH;
   \                     emAfAppEventContextLength:
   \   00000000   0x0002             DC16 2
   \   00000002   0x00 0x00          DC8 0, 0
     37          EmberAfEventContext emAfAppEventContext[] = {
   \                     emAfAppEventContext:
   \   00000004   0x01 0x00          DC8 1, 0
   \   00000006   0x0003             DC16 3
   \   00000008   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   0000000C   0x........         DC32 emberAfIdentifyClusterServerTickCallbackControl1
   \   00000010   0x01 0x00          DC8 1, 0
   \   00000012   0x0500             DC16 1280
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000018   0x........         DC32 emberAfIasZoneClusterServerTickCallbackControl1
     38            EMBER_AF_GENERATED_EVENT_CONTEXT
     39          };
     40          #endif //EMBER_AF_GENERATED_EVENT_CONTEXT
     41          

   \                                 In section .data, align 4
     42          PGM_P emAfEventStrings[] = {
   \                     emAfEventStrings:
   \   00000000   0x........         DC32 `?<Constant "Svc Disc NWK 0">`
   \   00000004   0x........         DC32 `?<Constant "Identify Cluster Serv...">`
   \   00000008   0x........         DC32 `?<Constant "IAS Zone Cluster Serv...">`
   \   0000000C   0x........         DC32 `?<Constant "Battery Monitor Code ...">`
   \   00000010   0x........         DC32 `?<Constant "Identify Feedback Plu...">`
   \   00000014   0x........         DC32 `?<Constant "LED Blinking Code Plu...">`
   \   00000018   0x........         DC32 `?<Constant "Network Find Plugin Tick">`
   \   0000001C   0x........         DC32 `?<Constant "Reporting Plugin Tick">`
   \   00000020   0x........         DC32 `?<Constant "Sensor Interface Code...">`
   \   00000024   0x........         DC32 `?<Constant "Sensor Interface Code...">_1`
   \   00000028   0x........         DC32 `?<Constant "Sensor Interface Code...">_2`
   \   0000002C   0x........         DC32 `?<Constant "Sensor Interface Code...">_3`
   \   00000030   0x........         DC32 `?<Constant "Sensor Interface Code...">_4`
   \   00000034   0x........         DC32 `?<Constant "Sensor Interface Code...">_5`
   \   00000038   0x........         DC32 `?<Constant "Sensor Interface Code...">_6`
   \   0000003C   0x........         DC32 `?<Constant "Sensor Interface Code...">_7`
   \   00000040   0x........         DC32 `?<Constant "End Device Support Pl...">`
   \   00000044   0x........         DC32 `?<Constant "End Device Support Pl...">_1`
     43            EM_AF_SERVICE_DISCOVERY_EVENT_STRINGS
     44          
     45          #ifdef EMBER_AF_GENERATED_EVENTS
     46            EMBER_AF_GENERATED_EVENT_STRINGS
     47          #endif
     48          
     49          #ifdef EMBER_AF_PLUGIN_FRAGMENTATION
     50            EMBER_AF_FRAGMENTATION_EVENT_STRINGS
     51          #endif
     52          
     53            EMBER_AF_TEST_HARNESS_EVENT_STRINGS
     54          };
     55          

   \                                 In section .text, align 4, keep-with-next
     56          EmberEventData emAfEvents[] = {
   \                     emAfEvents:
   \   00000000   0x........         DC32 emAfServiceDiscoveryEventControls, emAfServiceDiscoveryComplete0
   \              0x........   
   \   00000008   0x........         DC32 emberAfIdentifyClusterServerTickCallbackControl1
   \   0000000C   0x........         DC32 emberAfIdentifyClusterServerTickCallbackWrapperFunction1
   \   00000010   0x........         DC32 emberAfIasZoneClusterServerTickCallbackControl1
   \   00000014   0x........         DC32 emberAfIasZoneClusterServerTickCallbackWrapperFunction1
   \   00000018   0x........         DC32 emberAfPluginBatteryMonitorBatteryMonitorEventControl
   \   0000001C   0x........         DC32 emberAfPluginBatteryMonitorBatteryMonitorEventHandler
   \   00000020   0x........         DC32 emberAfPluginIdentifyFeedbackProvideFeedbackEventControl
   \   00000024   0x........         DC32 emberAfPluginIdentifyFeedbackProvideFeedbackEventHandler
   \   00000028   0x........         DC32 emberAfPluginLedBlinkLedEventFunctionEventControl
   \   0000002C   0x........         DC32 emberAfPluginLedBlinkLedEventFunctionEventHandler
   \   00000030   0x........         DC32 emberAfPluginNetworkFindTickEventControl
   \   00000034   0x........         DC32 emberAfPluginNetworkFindTickEventHandler
   \   00000038   0x........         DC32 emberAfPluginReportingTickEventControl
   \   0000003C   0x........         DC32 emberAfPluginReportingTickEventHandler
   \   00000040   0x........         DC32 emberAfPluginSensorIfaceButton0PressedEventControl
   \   00000044   0x........         DC32 emberAfPluginSensorIfaceButton0PressedEventHandler
   \   00000048   0x........         DC32 emberAfPluginSensorIfaceButton0ReleasedEventControl
   \   0000004C   0x........         DC32 emberAfPluginSensorIfaceButton0ReleasedEventHandler
   \   00000050   0x........         DC32 emberAfPluginSensorIfaceButton1PressedEventControl
   \   00000054   0x........         DC32 emberAfPluginSensorIfaceButton1PressedEventHandler
   \   00000058   0x........         DC32 emberAfPluginSensorIfaceButton1ReleasedEventControl
   \   0000005C   0x........         DC32 emberAfPluginSensorIfaceButton1ReleasedEventHandler
   \   00000060   0x........         DC32 emberAfPluginSensorIfaceButtonTimeoutEventControl
   \   00000064   0x........         DC32 emberAfPluginSensorIfaceButtonTimeoutEventHandler
   \   00000068   0x........         DC32 emberAfPluginSensorIfaceRejoinEventControl
   \   0000006C   0x........         DC32 emberAfPluginSensorIfaceRejoinEventHandler
   \   00000070   0x........         DC32 emberAfPluginSensorIfaceInitEventControl
   \   00000074   0x........         DC32 emberAfPluginSensorIfaceInitEventHandler
   \   00000078   0x........         DC32 emberAfPluginSensorIfaceDebounceEventControl
   \   0000007C   0x........         DC32 emberAfPluginSensorIfaceDebounceEventHandler
   \   00000080   0x........         DC32 emberAfPluginEndDeviceSupportPollingNetworkEventControls
   \   00000084   0x........         DC32 emberAfPluginEndDeviceSupportPollingNetworkEventWrapper0
   \   00000088   0x........         DC32 emberAfPluginEndDeviceSupportMoveNetworkEventControls
   \   0000008C   0x........         DC32 emberAfPluginEndDeviceSupportMoveNetworkEventWrapper0, 0H, 0H
   \              0x00000000   
   \              0x00000000   
     57            EM_AF_SERVICE_DISCOVERY_EVENTS
     58          
     59          #ifdef EMBER_AF_GENERATED_EVENTS
     60            EMBER_AF_GENERATED_EVENTS
     61          #endif
     62          
     63          #ifdef EMBER_AF_PLUGIN_FRAGMENTATION
     64            EMBER_AF_FRAGMENTATION_EVENTS
     65          #endif
     66          
     67            EMBER_KEY_ESTABLISHMENT_TEST_HARNESS_EVENT
     68          
     69            {NULL, NULL}
     70          };
     71          
     72          // *****************************************************************************
     73          // Functions
     74          
     75          // A function used to initialize events for idling

   \                                 In section .text, align 2, keep-with-next
     76          void emAfInitEvents(void) 
     77          {
   \                     emAfInitEvents:
   \   00000000   0xB580             PUSH     {R7,LR}
     78            emberTaskEnableIdling(TRUE);
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      BL       emTaskEnableIdling
     79            emAfTaskId = emberTaskInit(emAfEvents);
   \   00000008   0x.... 0x....      ADR.W    R0,emAfEvents
   \   0000000C   0x.... 0x....      BL       emberTaskInit
   \   00000010   0x....             LDR.N    R1,??DataTable24_4
   \   00000012   0x7008             STRB     R0,[R1, #+0]
     80          }
   \   00000014   0xBD01             POP      {R0,PC}          ;; return
     81          

   \                                 In section .text, align 2, keep-with-next
     82          void emberAfRunEvents(void) 
     83          {
   \                     emberAfRunEvents:
   \   00000000   0xB580             PUSH     {R7,LR}
     84            // Don't run events while crypto operation is in progress
     85            // (BUGZID: 12127)
     86            if (emAfIsCryptoOperationInProgress()) {
   \   00000002   0x.... 0x....      BL       emAfGetCryptoStatus
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xD005             BEQ.N    ??emberAfRunEvents_0
     87              // DEBUG Bugzid: 11944
     88              emberAfCoreFlush();
     89              return;
     90            }
     91            emberRunTask(emAfTaskId);
   \   0000000A   0x....             LDR.N    R0,??DataTable24_4
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0xE8BD 0x4002      POP      {R1,LR}
   \   00000012   0x.... 0x....      B.W      emberRunTask
   \                     ??emberAfRunEvents_0:
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
     92          }
     93          

   \                                 In section .text, align 2, keep-with-next
     94          static EmberAfEventContext *findEventContext(int8u endpoint,
     95                                                       EmberAfClusterId clusterId,
     96                                                       boolean isClient)
     97          {
   \                     findEventContext:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     98          #if defined(EMBER_AF_GENERATED_EVENT_CONTEXT)
     99            int8u i;
    100            for (i = 0; i < emAfAppEventContextLength; i++) {
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x....             LDR.N    R5,??DataTable24_5
   \   00000006   0xE000             B.N      ??findEventContext_0
   \                     ??findEventContext_1:
   \   00000008   0x1C64             ADDS     R4,R4,#+1
   \                     ??findEventContext_0:
   \   0000000A   0xB2E3             UXTB     R3,R4
   \   0000000C   0x882E             LDRH     R6,[R5, #+0]
   \   0000000E   0x42B3             CMP      R3,R6
   \   00000010   0xD20E             BCS.N    ??findEventContext_2
    101              EmberAfEventContext *context = &(emAfAppEventContext[i]);
   \   00000012   0xB2E4             UXTB     R4,R4
   \   00000014   0x230C             MOVS     R3,#+12
   \   00000016   0xFB03 0x5304      MLA      R3,R3,R4,R5
    102              if (context->endpoint == endpoint
    103                  && context->clusterId == clusterId
    104                  && context->isClient == isClient) {
   \   0000001A   0xF813 0x6F04      LDRB     R6,[R3, #+4]!
   \   0000001E   0x4286             CMP      R6,R0
   \   00000020   0xBF01             ITTTT    EQ 
   \   00000022   0x885E             LDRHEQ   R6,[R3, #+2]
   \   00000024   0x428E             CMPEQ    R6,R1
   \   00000026   0x791E             LDRBEQ   R6,[R3, #+4]
   \   00000028   0x4296             CMPEQ    R6,R2
   \   0000002A   0xD1ED             BNE.N    ??findEventContext_1
    105                return context;
   \   0000002C   0x4618             MOV      R0,R3
   \   0000002E   0xBD70             POP      {R4-R6,PC}
    106              }
    107            }
    108          #endif //EMBER_AF_GENERATED_EVENT_CONTEXT
    109            return NULL;
   \                     ??findEventContext_2:
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0xBD70             POP      {R4-R6,PC}       ;; return
    110          }
    111          

   \                                 In section .text, align 2, keep-with-next
    112          EmberStatus emberAfEventControlSetDelay(EmberEventControl *eventControl, int32u timeMs)
    113          {
   \                     emberAfEventControlSetDelay:
   \   00000000   0xB580             PUSH     {R7,LR}
    114            if (timeMs == 0) {
   \   00000002   0xB919             CBNZ.N   R1,??emberAfEventControlSetDelay_0
    115              emberEventControlSetActive(*eventControl);
   \   00000004   0x.... 0x....      BL       emEventControlSetActive
    116            } else if (timeMs < MAX_SLEEP_UNITS) {
    117              emberEventControlSetDelayMS(*eventControl, (int16u)timeMs);
    118            } else if (timeMs / MILLISECOND_TICKS_PER_QUARTERSECOND < MAX_SLEEP_UNITS) {
    119              emberEventControlSetDelayQS(*eventControl,
    120                                          (int16u)(timeMs / MILLISECOND_TICKS_PER_QUARTERSECOND));
    121            } else if (timeMs / MILLISECOND_TICKS_PER_MINUTE < MAX_SLEEP_UNITS) {
    122              emberEventControlSetDelayMinutes(*eventControl,
    123                                               (int16u)(timeMs / MILLISECOND_TICKS_PER_MINUTE));
    124            } else {
    125              return EMBER_BAD_ARGUMENT;
    126            }
    127            return EMBER_SUCCESS;
   \                     ??emberAfEventControlSetDelay_1:
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0xBD02             POP      {R1,PC}          ;; return
   \                     ??emberAfEventControlSetDelay_0:
   \   0000000C   0xF643 0x73FF      MOVW     R3,#+16383
   \   00000010   0x4299             CMP      R1,R3
   \   00000012   0xD203             BCS.N    ??emberAfEventControlSetDelay_2
   \   00000014   0xB289             UXTH     R1,R1
   \   00000016   0x.... 0x....      BL       emEventControlSetDelayMS
   \   0000001A   0xE7F5             B.N      ??emberAfEventControlSetDelay_1
   \                     ??emberAfEventControlSetDelay_2:
   \   0000001C   0x0A0A             LSRS     R2,R1,#+8
   \   0000001E   0x429A             CMP      R2,R3
   \   00000020   0xD203             BCS.N    ??emberAfEventControlSetDelay_3
   \   00000022   0xB291             UXTH     R1,R2
   \   00000024   0x.... 0x....      BL       emEventControlSetDelayQS
   \   00000028   0xE7EE             B.N      ??emberAfEventControlSetDelay_1
   \                     ??emberAfEventControlSetDelay_3:
   \   0000002A   0xF44F 0x4270      MOV      R2,#+61440
   \   0000002E   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000032   0x4299             CMP      R1,R3
   \   00000034   0xD203             BCS.N    ??emberAfEventControlSetDelay_4
   \   00000036   0xB289             UXTH     R1,R1
   \   00000038   0x.... 0x....      BL       emEventControlSetDelayMinutes
   \   0000003C   0xE7E4             B.N      ??emberAfEventControlSetDelay_1
   \                     ??emberAfEventControlSetDelay_4:
   \   0000003E   0x2002             MOVS     R0,#+2
   \   00000040   0xBD02             POP      {R1,PC}
    128          }
    129          

   \                                 In section .text, align 2, keep-with-next
    130          EmberStatus emberAfScheduleTickExtended(int8u endpoint,
    131                                                  EmberAfClusterId clusterId,
    132                                                  boolean isClient,
    133                                                  int32u delayMs,
    134                                                  EmberAfEventPollControl pollControl,
    135                                                  EmberAfEventSleepControl sleepControl)
    136          {
   \                     emberAfScheduleTickExtended:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4606             MOV      R6,R0
   \   00000006   0x4698             MOV      R8,R3
   \   00000008   0x9D06             LDR      R5,[SP, #+24]
   \   0000000A   0x9C07             LDR      R4,[SP, #+28]
    137            EmberAfEventContext *context = findEventContext(endpoint,
    138                                                            clusterId,
    139                                                            isClient);
   \   0000000C   0x.... 0x....      BL       findEventContext
   \   00000010   0x0007             MOVS     R7,R0
    140          
    141            // Disabled endpoints cannot schedule events.  This will catch the problem in
    142            // simulation.
    143            EMBER_TEST_ASSERT(emberAfEndpointIsEnabled(endpoint));
    144          
    145            if (context != NULL
    146                && emberAfEndpointIsEnabled(endpoint)
    147                && (emberAfEventControlSetDelay(context->eventControl, delayMs)
    148                    == EMBER_SUCCESS)) {
   \   00000012   0xD00B             BEQ.N    ??emberAfScheduleTickExtended_0
   \   00000014   0x4630             MOV      R0,R6
   \   00000016   0x.... 0x....      BL       emberAfEndpointIsEnabled
   \   0000001A   0xB138             CBZ.N    R0,??emberAfScheduleTickExtended_0
   \   0000001C   0x4641             MOV      R1,R8
   \   0000001E   0x68B8             LDR      R0,[R7, #+8]
   \   00000020   0x.... 0x....      BL       emberAfEventControlSetDelay
   \   00000024   0xB910             CBNZ.N   R0,??emberAfScheduleTickExtended_0
    149              context->pollControl = pollControl;
   \   00000026   0x717D             STRB     R5,[R7, #+5]
    150              context->sleepControl = sleepControl;
   \   00000028   0x71BC             STRB     R4,[R7, #+6]
    151              return EMBER_SUCCESS;
   \   0000002A   0xE000             B.N      ??emberAfScheduleTickExtended_1
    152            }
    153            return EMBER_BAD_ARGUMENT;
   \                     ??emberAfScheduleTickExtended_0:
   \   0000002C   0x2002             MOVS     R0,#+2
   \                     ??emberAfScheduleTickExtended_1:
   \   0000002E   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    154          }
    155          

   \                                 In section .text, align 2, keep-with-next
    156          EmberStatus emberAfScheduleClusterTick(int8u endpoint,
    157                                                 EmberAfClusterId clusterId,
    158                                                 boolean isClient,
    159                                                 int32u timeMs,
    160                                                 EmberAfEventSleepControl sleepControl)
    161          {
   \                     emberAfScheduleClusterTick:
   \   00000000   0xB57C             PUSH     {R2-R6,LR}
   \   00000002   0x9C06             LDR      R4,[SP, #+24]
    162            return emberAfScheduleTickExtended(endpoint,
    163                                               clusterId,
    164                                               isClient,
    165                                               timeMs,
    166                                               (sleepControl == EMBER_AF_OK_TO_HIBERNATE
    167                                                ? EMBER_AF_LONG_POLL
    168                                                : EMBER_AF_SHORT_POLL),
    169                                               (sleepControl == EMBER_AF_STAY_AWAKE
    170                                                ? EMBER_AF_STAY_AWAKE
    171                                                : EMBER_AF_OK_TO_SLEEP));
   \   00000004   0x2C02             CMP      R4,#+2
   \   00000006   0xBF08             IT       EQ 
   \   00000008   0x2502             MOVEQ    R5,#+2
   \   0000000A   0xD002             BEQ.N    ??emberAfScheduleClusterTick_0
   \   0000000C   0x2500             MOVS     R5,#+0
   \   0000000E   0x0026             MOVS     R6,R4
   \   00000010   0xD000             BEQ.N    ??emberAfScheduleClusterTick_1
   \                     ??emberAfScheduleClusterTick_0:
   \   00000012   0x2601             MOVS     R6,#+1
   \                     ??emberAfScheduleClusterTick_1:
   \   00000014   0x9501             STR      R5,[SP, #+4]
   \   00000016   0x9600             STR      R6,[SP, #+0]
   \   00000018   0x.... 0x....      BL       emberAfScheduleTickExtended
   \   0000001C   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    172          }
    173          

   \                                 In section .text, align 2, keep-with-next
    174          EmberStatus emberAfScheduleClientTickExtended(int8u endpoint,
    175                                                        EmberAfClusterId clusterId,
    176                                                        int32u delayMs,
    177                                                        EmberAfEventPollControl pollControl,
    178                                                        EmberAfEventSleepControl sleepControl)
    179          {
   \                     emberAfScheduleClientTickExtended:
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
   \   00000002   0x9C04             LDR      R4,[SP, #+16]
    180            return emberAfScheduleTickExtended(endpoint,
    181                                               clusterId,
    182                                               EMBER_AF_CLIENT_CLUSTER_TICK,
    183                                               delayMs,
    184                                               pollControl,
    185                                               sleepControl);
   \   00000004   0x9401             STR      R4,[SP, #+4]
   \   00000006   0x9300             STR      R3,[SP, #+0]
   \   00000008   0x4613             MOV      R3,R2
   \   0000000A   0x2201             MOVS     R2,#+1
   \   0000000C   0x....             B.N      ?Subroutine1
    186          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   0x.... 0x....      BL       emberAfScheduleTickExtended
   \   00000004   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    187          

   \                                 In section .text, align 2, keep-with-next
    188          EmberStatus emberAfScheduleClientTick(int8u endpoint,
    189                                                EmberAfClusterId clusterId,
    190                                                int32u delayMs)
    191          {
   \                     emberAfScheduleClientTick:
   \   00000000   0xB580             PUSH     {R7,LR}
    192            return emberAfScheduleClientTickExtended(endpoint,
    193                                                     clusterId,
    194                                                     delayMs,
    195                                                     EMBER_AF_LONG_POLL,
    196                                                     EMBER_AF_OK_TO_SLEEP);
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x9300             STR      R3,[SP, #+0]
   \   00000006   0x.... 0x....      BL       emberAfScheduleClientTickExtended
   \   0000000A   0xBD02             POP      {R1,PC}          ;; return
    197          }
    198          

   \                                 In section .text, align 2, keep-with-next
    199          EmberStatus emberAfScheduleServerTickExtended(int8u endpoint,
    200                                                        EmberAfClusterId clusterId,
    201                                                        int32u delayMs,
    202                                                        EmberAfEventPollControl pollControl,
    203                                                        EmberAfEventSleepControl sleepControl)
    204          {
   \                     emberAfScheduleServerTickExtended:
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
   \   00000002   0x9C04             LDR      R4,[SP, #+16]
    205            return emberAfScheduleTickExtended(endpoint,
    206                                               clusterId,
    207                                               EMBER_AF_SERVER_CLUSTER_TICK,
    208                                               delayMs,
    209                                               pollControl,
    210                                               sleepControl);
   \   00000004   0x9401             STR      R4,[SP, #+4]
   \   00000006   0x9300             STR      R3,[SP, #+0]
   \   00000008   0x4613             MOV      R3,R2
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C                      REQUIRE ?Subroutine1
   \   0000000C                      ;; // Fall through to label ?Subroutine1
    211          }
    212          

   \                                 In section .text, align 2, keep-with-next
    213          EmberStatus emberAfScheduleServerTick(int8u endpoint,
    214                                                EmberAfClusterId clusterId,
    215                                                int32u delayMs)
    216          {
   \                     emberAfScheduleServerTick:
   \   00000000   0xB580             PUSH     {R7,LR}
    217            return emberAfScheduleServerTickExtended(endpoint,
    218                                                     clusterId,
    219                                                     delayMs,
    220                                                     EMBER_AF_LONG_POLL,
    221                                                     EMBER_AF_OK_TO_SLEEP);
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x9300             STR      R3,[SP, #+0]
   \   00000006   0x.... 0x....      BL       emberAfScheduleServerTickExtended
   \   0000000A   0xBD02             POP      {R1,PC}          ;; return
    222          }
    223          

   \                                 In section .text, align 2, keep-with-next
    224          int32u emberAfMsToNextEventExtended(int32u maxMs, int8u* returnIndex)
    225          {
    226            return emberMsToNextEventExtended(emAfEvents, maxMs, returnIndex);
   \                     emberAfMsToNextEventExtended:
   \   00000000   0x460A             MOV      R2,R1
   \   00000002   0x4601             MOV      R1,R0
   \   00000004   0x.... 0x....      ADR.W    R0,emAfEvents
   \   00000008   0x.... 0x....      B.W      emberMsToNextEventExtended
    227          }
    228          

   \                                 In section .text, align 2, keep-with-next
    229          int32u emberAfMsToNextEvent(int32u maxMs)
    230          {
    231            return emberAfMsToNextEventExtended(maxMs, NULL);
   \                     emberAfMsToNextEvent:
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x....             B.N      emberAfMsToNextEventExtended
    232          }
    233          

   \                                 In section .text, align 2, keep-with-next
    234          EmberStatus emberAfDeactivateClusterTick(int8u endpoint,
    235                                                   EmberAfClusterId clusterId,
    236                                                   boolean isClient)
    237          {
   \                     emberAfDeactivateClusterTick:
   \   00000000   0xB580             PUSH     {R7,LR}
    238            EmberAfEventContext *context = findEventContext(endpoint,
    239                                                            clusterId,
    240                                                            isClient);
   \   00000002   0x.... 0x....      BL       findEventContext
    241            if (context != NULL) {
   \   00000006   0xB120             CBZ.N    R0,??emberAfDeactivateClusterTick_0
    242              emberEventControlSetInactive((*(context->eventControl)));
   \   00000008   0x6880             LDR      R0,[R0, #+8]
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
    243              return EMBER_SUCCESS;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xBD02             POP      {R1,PC}
    244            }
    245            return EMBER_BAD_ARGUMENT;
   \                     ??emberAfDeactivateClusterTick_0:
   \   00000012   0x2002             MOVS     R0,#+2
   \   00000014   0xBD02             POP      {R1,PC}          ;; return
    246          }
    247          

   \                                 In section .text, align 2, keep-with-next
    248          EmberStatus emberAfDeactivateClientTick(int8u endpoint,
    249                                                  EmberAfClusterId clusterId)
    250          {
    251            return emberAfDeactivateClusterTick(endpoint,
    252                                                clusterId,
    253                                                EMBER_AF_CLIENT_CLUSTER_TICK);
   \                     emberAfDeactivateClientTick:
   \   00000000   0x2201             MOVS     R2,#+1
   \   00000002   0x....             B.N      emberAfDeactivateClusterTick
    254          }
    255          

   \                                 In section .text, align 2, keep-with-next
    256          EmberStatus emberAfDeactivateServerTick(int8u endpoint,
    257                                                  EmberAfClusterId clusterId)
    258          {
    259            return emberAfDeactivateClusterTick(endpoint,
    260                                                clusterId,
    261                                                EMBER_AF_SERVER_CLUSTER_TICK);
   \                     emberAfDeactivateServerTick:
   \   00000000   0x2200             MOVS     R2,#+0
   \   00000002   0x....             B.N      emberAfDeactivateClusterTick
    262          }
    263          
    264          // Used to calculate the duration and unit used by the host to set the sleep timer

   \                                 In section .text, align 2, keep-with-next
    265          void emAfGetTimerDurationAndUnitFromMS(int32u ms, int16u *duration, int8u* unit)
    266          {
   \                     emAfGetTimerDurationAndUnitFromMS:
   \   00000000   0xB510             PUSH     {R4,LR}
    267            if (ms <= MAX_TIMER_UNITS_HOST) {
   \   00000002   0xF5B0 0x4F00      CMP      R0,#+32768
   \   00000006   0xBF38             IT       CC 
   \   00000008   0x2301             MOVCC    R3,#+1
    268              *unit = EMBER_EVENT_MS_TIME;
    269              *duration = ms;
   \   0000000A   0xD310             BCC.N    ??emAfGetTimerDurationAndUnitFromMS_0
    270            } else if (ms / MILLISECOND_TICKS_PER_QUARTERSECOND <= MAX_TIMER_UNITS_HOST) {
   \   0000000C   0x0A04             LSRS     R4,R0,#+8
   \   0000000E   0xF5B4 0x4F00      CMP      R4,#+32768
   \   00000012   0xD202             BCS.N    ??emAfGetTimerDurationAndUnitFromMS_1
    271              *unit = EMBER_EVENT_QS_TIME;
   \   00000014   0x2302             MOVS     R3,#+2
    272              *duration = ms / MILLISECOND_TICKS_PER_QUARTERSECOND;
   \   00000016   0x4620             MOV      R0,R4
   \   00000018   0xE009             B.N      ??emAfGetTimerDurationAndUnitFromMS_0
    273            } else {
    274              *unit = EMBER_EVENT_MINUTE_TIME;
   \                     ??emAfGetTimerDurationAndUnitFromMS_1:
   \   0000001A   0x2303             MOVS     R3,#+3
    275              if (ms / MILLISECOND_TICKS_PER_MINUTE <= MAX_TIMER_UNITS_HOST)
   \   0000001C   0xF44F 0x4470      MOV      R4,#+61440
   \   00000020   0xFBB0 0xF0F4      UDIV     R0,R0,R4
   \   00000024   0xF5B0 0x4F00      CMP      R0,#+32768
   \   00000028   0xBF28             IT       CS 
   \   0000002A   0xF647 0x70FF      MOVWCS   R0,#+32767
    276                *duration = ms / MILLISECOND_TICKS_PER_MINUTE;
    277              else
    278                *duration = MAX_TIMER_UNITS_HOST;
   \                     ??emAfGetTimerDurationAndUnitFromMS_0:
   \   0000002E   0x7013             STRB     R3,[R2, #+0]
   \   00000030   0x8008             STRH     R0,[R1, #+0]
    279            }
    280          }
   \   00000032   0xBD10             POP      {R4,PC}          ;; return
    281          

   \                                 In section .text, align 2, keep-with-next
    282          int32u emAfGetMSFromTimerDurationAndUnit(int16u duration, int8u unit)
    283          {
    284            int32u ms;
    285            if (unit == EMBER_EVENT_MINUTE_TIME) {
   \                     emAfGetMSFromTimerDurationAndUnit:
   \   00000000   0x2903             CMP      R1,#+3
   \   00000002   0xD103             BNE.N    ??emAfGetMSFromTimerDurationAndUnit_0
    286              ms = duration * MILLISECOND_TICKS_PER_MINUTE;
   \   00000004   0xF44F 0x4170      MOV      R1,#+61440
   \   00000008   0x4348             MULS     R0,R1,R0
   \   0000000A   0x4770             BX       LR
    287            } else if (unit == EMBER_EVENT_QS_TIME) {
   \                     ??emAfGetMSFromTimerDurationAndUnit_0:
   \   0000000C   0x2902             CMP      R1,#+2
   \   0000000E   0xBF08             IT       EQ 
   \   00000010   0x0200             LSLEQ    R0,R0,#+8
    288              ms = duration * MILLISECOND_TICKS_PER_QUARTERSECOND;
    289            } else {
    290              ms = duration;
    291            }
    292            return ms;
   \   00000012   0x4770             BX       LR               ;; return
    293          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   0xE8BD 0x4001      POP      {R0,LR}
   \   00000004   0x.... 0x....      B.W      emberAfPopNetworkIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   0x........         DC32     emberAfPluginEndDeviceSupportPollingNetworkEventControls

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_1:
   \   00000000   0x........         DC32     emberAfPluginEndDeviceSupportMoveNetworkEventControls

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_2:
   \   00000000   0x........         DC32     emberAfIdentifyClusterServerTickCallbackControl1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_3:
   \   00000000   0x........         DC32     emberAfIasZoneClusterServerTickCallbackControl1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_4:
   \   00000000   0x........         DC32     emAfTaskId

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_5:
   \   00000000   0x........         DC32     emAfAppEventContextLength

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Svc Disc NWK 0">`:
   \   00000000   0x53 0x76          DC8 "Svc Disc NWK 0"
   \              0x63 0x20    
   \              0x44 0x69    
   \              0x73 0x63    
   \              0x20 0x4E    
   \              0x57 0x4B    
   \              0x20 0x30    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Identify Cluster Serv...">`:
   \   00000000   0x49 0x64          DC8 "Identify Cluster Server EP 1"
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x79    
   \              0x20 0x43    
   \              0x6C 0x75    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x20 0x53    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x45 0x50    
   \              0x20 0x31    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "IAS Zone Cluster Serv...">`:
   \   00000000   0x49 0x41          DC8 "IAS Zone Cluster Server EP 1"
   \              0x53 0x20    
   \              0x5A 0x6F    
   \              0x6E 0x65    
   \              0x20 0x43    
   \              0x6C 0x75    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x20 0x53    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x45 0x50    
   \              0x20 0x31    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Battery Monitor Code ...">`:
   \   00000000   0x42 0x61          DC8 "Battery Monitor Code Plugin BatteryMonitor"
   \              0x74 0x74    
   \              0x65 0x72    
   \              0x79 0x20    
   \              0x4D 0x6F    
   \              0x6E 0x69    
   \              0x74 0x6F    
   \              0x72 0x20    
   \              0x43 0x6F    
   \              0x64 0x65    
   \              0x20 0x50    
   \              0x6C 0x75    
   \              0x67 0x69    
   \              0x6E 0x20    
   \              0x42 0x61    
   \              0x74 0x74    
   \              0x65 0x72    
   \              0x79 0x4D    
   \              0x6F 0x6E    
   \              0x69 0x74    
   \              0x6F 0x72    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Identify Feedback Plu...">`:
   \   00000000   0x49 0x64          DC8 "Identify Feedback Plugin ProvideFeedback"
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x79    
   \              0x20 0x46    
   \              0x65 0x65    
   \              0x64 0x62    
   \              0x61 0x63    
   \              0x6B 0x20    
   \              0x50 0x6C    
   \              0x75 0x67    
   \              0x69 0x6E    
   \              0x20 0x50    
   \              0x72 0x6F    
   \              0x76 0x69    
   \              0x64 0x65    
   \              0x46 0x65    
   \              0x65 0x64    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "LED Blinking Code Plu...">`:
   \   00000000   0x4C 0x45          DC8 "LED Blinking Code Plugin LedEventFunction"
   \              0x44 0x20    
   \              0x42 0x6C    
   \              0x69 0x6E    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \              0x20 0x43    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x50 0x6C    
   \              0x75 0x67    
   \              0x69 0x6E    
   \              0x20 0x4C    
   \              0x65 0x64    
   \              0x45 0x76    
   \              0x65 0x6E    
   \              0x74 0x46    
   \              0x75 0x6E    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Network Find Plugin Tick">`:
   \   00000000   0x4E 0x65          DC8 "Network Find Plugin Tick"
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x46 0x69    
   \              0x6E 0x64    
   \              0x20 0x50    
   \              0x6C 0x75    
   \              0x67 0x69    
   \              0x6E 0x20    
   \              0x54 0x69    
   \              0x63 0x6B    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Reporting Plugin Tick">`:
   \   00000000   0x52 0x65          DC8 "Reporting Plugin Tick"
   \              0x70 0x6F    
   \              0x72 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x50 0x6C    
   \              0x75 0x67    
   \              0x69 0x6E    
   \              0x20 0x54    
   \              0x69 0x63    
   \              0x6B 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Sensor Interface Code...">`:
   \   00000000   0x53 0x65          DC8 "Sensor Interface Code Plugin Button0Pressed"
   \              0x6E 0x73    
   \              0x6F 0x72    
   \              0x20 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x66 0x61    
   \              0x63 0x65    
   \              0x20 0x43    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x50 0x6C    
   \              0x75 0x67    
   \              0x69 0x6E    
   \              0x20 0x42    
   \              0x75 0x74    
   \              0x74 0x6F    
   \              0x6E 0x30    
   \              0x50 0x72    
   \              0x65 0x73    
   \              0x73 0x65    
   \              0x64 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Sensor Interface Code...">_1`:
   \   00000000   0x53 0x65          DC8 "Sensor Interface Code Plugin Button0Released"
   \              0x6E 0x73    
   \              0x6F 0x72    
   \              0x20 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x66 0x61    
   \              0x63 0x65    
   \              0x20 0x43    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x50 0x6C    
   \              0x75 0x67    
   \              0x69 0x6E    
   \              0x20 0x42    
   \              0x75 0x74    
   \              0x74 0x6F    
   \              0x6E 0x30    
   \              0x52 0x65    
   \              0x6C 0x65    
   \              0x61 0x73    
   \              0x65 0x64    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Sensor Interface Code...">_2`:
   \   00000000   0x53 0x65          DC8 "Sensor Interface Code Plugin Button1Pressed"
   \              0x6E 0x73    
   \              0x6F 0x72    
   \              0x20 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x66 0x61    
   \              0x63 0x65    
   \              0x20 0x43    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x50 0x6C    
   \              0x75 0x67    
   \              0x69 0x6E    
   \              0x20 0x42    
   \              0x75 0x74    
   \              0x74 0x6F    
   \              0x6E 0x31    
   \              0x50 0x72    
   \              0x65 0x73    
   \              0x73 0x65    
   \              0x64 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Sensor Interface Code...">_3`:
   \   00000000   0x53 0x65          DC8 "Sensor Interface Code Plugin Button1Released"
   \              0x6E 0x73    
   \              0x6F 0x72    
   \              0x20 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x66 0x61    
   \              0x63 0x65    
   \              0x20 0x43    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x50 0x6C    
   \              0x75 0x67    
   \              0x69 0x6E    
   \              0x20 0x42    
   \              0x75 0x74    
   \              0x74 0x6F    
   \              0x6E 0x31    
   \              0x52 0x65    
   \              0x6C 0x65    
   \              0x61 0x73    
   \              0x65 0x64    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Sensor Interface Code...">_4`:
   \   00000000   0x53 0x65          DC8 "Sensor Interface Code Plugin ButtonTimeout"
   \              0x6E 0x73    
   \              0x6F 0x72    
   \              0x20 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x66 0x61    
   \              0x63 0x65    
   \              0x20 0x43    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x50 0x6C    
   \              0x75 0x67    
   \              0x69 0x6E    
   \              0x20 0x42    
   \              0x75 0x74    
   \              0x74 0x6F    
   \              0x6E 0x54    
   \              0x69 0x6D    
   \              0x65 0x6F    
   \              0x75 0x74    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Sensor Interface Code...">_5`:
   \   00000000   0x53 0x65          DC8 "Sensor Interface Code Plugin Rejoin"
   \              0x6E 0x73    
   \              0x6F 0x72    
   \              0x20 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x66 0x61    
   \              0x63 0x65    
   \              0x20 0x43    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x50 0x6C    
   \              0x75 0x67    
   \              0x69 0x6E    
   \              0x20 0x52    
   \              0x65 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Sensor Interface Code...">_6`:
   \   00000000   0x53 0x65          DC8 "Sensor Interface Code Plugin Init"
   \              0x6E 0x73    
   \              0x6F 0x72    
   \              0x20 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x66 0x61    
   \              0x63 0x65    
   \              0x20 0x43    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x50 0x6C    
   \              0x75 0x67    
   \              0x69 0x6E    
   \              0x20 0x49    
   \              0x6E 0x69    
   \              0x74 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Sensor Interface Code...">_7`:
   \   00000000   0x53 0x65          DC8 "Sensor Interface Code Plugin Debounce"
   \              0x6E 0x73    
   \              0x6F 0x72    
   \              0x20 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x66 0x61    
   \              0x63 0x65    
   \              0x20 0x43    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x50 0x6C    
   \              0x75 0x67    
   \              0x69 0x6E    
   \              0x20 0x44    
   \              0x65 0x62    
   \              0x6F 0x75    
   \              0x6E 0x63    
   \              0x65 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "End Device Support Pl...">`:
   \   00000000   0x45 0x6E          DC8 "End Device Support Plugin Polling NWK 0"
   \              0x64 0x20    
   \              0x44 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x53    
   \              0x75 0x70    
   \              0x70 0x6F    
   \              0x72 0x74    
   \              0x20 0x50    
   \              0x6C 0x75    
   \              0x67 0x69    
   \              0x6E 0x20    
   \              0x50 0x6F    
   \              0x6C 0x6C    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x4E 0x57    
   \              0x4B 0x20    
   \              0x30 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "End Device Support Pl...">_1`:
   \   00000000   0x45 0x6E          DC8 "End Device Support Plugin Move NWK 0"
   \              0x64 0x20    
   \              0x44 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x53    
   \              0x75 0x70    
   \              0x70 0x6F    
   \              0x72 0x74    
   \              0x20 0x50    
   \              0x6C 0x75    
   \              0x67 0x69    
   \              0x6E 0x20    
   \              0x4D 0x6F    
   \              0x76 0x65    
   \              0x20 0x4E    
   \              0x57 0x4B    
   \              0x20 0x30    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  emAfGetMSFromTimerDurationAndUnit
        8  emAfGetTimerDurationAndUnitFromMS
        8  emAfInitEvents
              8 -> emTaskEnableIdling
              8 -> emberTaskInit
        0  emberAfDeactivateClientTick
              0 -> emberAfDeactivateClusterTick
        8  emberAfDeactivateClusterTick
              8 -> findEventContext
        0  emberAfDeactivateServerTick
              0 -> emberAfDeactivateClusterTick
        8  emberAfEventControlSetDelay
              8 -> emEventControlSetActive
              8 -> emEventControlSetDelayMS
              8 -> emEventControlSetDelayMinutes
              8 -> emEventControlSetDelayQS
        8  emberAfIasZoneClusterServerTickCallbackWrapperFunction1
              8 -> emberAfIasZoneClusterServerTickCallback
              0 -> emberAfPopNetworkIndex
              8 -> emberAfPushEndpointNetworkIndex
        8  emberAfIdentifyClusterServerTickCallbackWrapperFunction1
              8 -> emberAfIdentifyClusterServerTickCallback
              0 -> emberAfPopNetworkIndex
              8 -> emberAfPushEndpointNetworkIndex
        0  emberAfMsToNextEvent
              0 -> emberAfMsToNextEventExtended
        0  emberAfMsToNextEventExtended
              0 -> emberMsToNextEventExtended
        8  emberAfPluginEndDeviceSupportMoveNetworkEventWrapper0
              8 -> emberAfPluginEndDeviceSupportMoveNetworkEventHandler
              0 -> emberAfPopNetworkIndex
              8 -> emberAfPushNetworkIndex
        8  emberAfPluginEndDeviceSupportPollingNetworkEventWrapper0
              8 -> emberAfPluginEndDeviceSupportPollingNetworkEventHandler
              0 -> emberAfPopNetworkIndex
              8 -> emberAfPushNetworkIndex
        8  emberAfRunEvents
              8 -> emAfGetCryptoStatus
              0 -> emberRunTask
        8  emberAfScheduleClientTick
              8 -> emberAfScheduleClientTickExtended
       16  emberAfScheduleClientTickExtended
             16 -> emberAfScheduleTickExtended
       24  emberAfScheduleClusterTick
             24 -> emberAfScheduleTickExtended
        8  emberAfScheduleServerTick
              8 -> emberAfScheduleServerTickExtended
       16  emberAfScheduleServerTickExtended
             16 -> emberAfScheduleTickExtended
       24  emberAfScheduleTickExtended
             24 -> emberAfEndpointIsEnabled
             24 -> emberAfEventControlSetDelay
             24 -> findEventContext
       16  findEventContext


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      44  ?<Constant "Battery Monitor Code ...">
      40  ?<Constant "End Device Support Pl...">
      40  ?<Constant "End Device Support Pl...">_1
      32  ?<Constant "IAS Zone Cluster Serv...">
      32  ?<Constant "Identify Cluster Serv...">
      44  ?<Constant "Identify Feedback Plu...">
      44  ?<Constant "LED Blinking Code Plu...">
      28  ?<Constant "Network Find Plugin Tick">
      24  ?<Constant "Reporting Plugin Tick">
      44  ?<Constant "Sensor Interface Code...">
      48  ?<Constant "Sensor Interface Code...">_1
      44  ?<Constant "Sensor Interface Code...">_2
      48  ?<Constant "Sensor Interface Code...">_3
      44  ?<Constant "Sensor Interface Code...">_4
      36  ?<Constant "Sensor Interface Code...">_5
      36  ?<Constant "Sensor Interface Code...">_6
      40  ?<Constant "Sensor Interface Code...">_7
      16  ?<Constant "Svc Disc NWK 0">
       4  ??DataTable24
       4  ??DataTable24_1
       4  ??DataTable24_2
       4  ??DataTable24_3
       4  ??DataTable24_4
       4  ??DataTable24_5
       8  ?Subroutine0
       6  ?Subroutine1
      28  emAfAppEventContextLength
          emAfAppEventContext
      72  emAfEventStrings
     152  emAfEvents
      20  emAfGetMSFromTimerDurationAndUnit
      52  emAfGetTimerDurationAndUnitFromMS
      22  emAfInitEvents
       1  emAfTaskId
       4  emberAfDeactivateClientTick
      22  emberAfDeactivateClusterTick
       4  emberAfDeactivateServerTick
      66  emberAfEventControlSetDelay
       8  emberAfIasZoneClusterServerTickCallbackControl1
      22  emberAfIasZoneClusterServerTickCallbackWrapperFunction1
       8  emberAfIdentifyClusterServerTickCallbackControl1
      22  emberAfIdentifyClusterServerTickCallbackWrapperFunction1
       4  emberAfMsToNextEvent
      12  emberAfMsToNextEventExtended
       8  emberAfPluginEndDeviceSupportMoveNetworkEventControls
      18  emberAfPluginEndDeviceSupportMoveNetworkEventWrapper0
       8  emberAfPluginEndDeviceSupportPollingNetworkEventControls
      20  emberAfPluginEndDeviceSupportPollingNetworkEventWrapper0
      24  emberAfRunEvents
      12  emberAfScheduleClientTick
      14  emberAfScheduleClientTickExtended
      30  emberAfScheduleClusterTick
      12  emberAfScheduleServerTick
      12  emberAfScheduleServerTickExtended
      50  emberAfScheduleTickExtended
      52  findEventContext

 
  33 bytes in section .bss
 100 bytes in section .data
 684 bytes in section .rodata
 684 bytes in section .text
 
 684 bytes of CODE  memory
 684 bytes of CONST memory
 133 bytes of DATA  memory

Errors: none
Warnings: none
