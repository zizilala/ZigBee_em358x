###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.2.53884/W32 for ARM     06/Feb/2015  13:53:10 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\security\ #
#                    af-trust-center.c                                        #
#    Command line =  C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\security\ #
#                    af-trust-center.c -D "GENERATED_TOKEN_HEADER=\"app/build #
#                    er/DoorSensor_SM6011/DoorSensor_SM6011_tokens.h\"" -D    #
#                    "ZA_GENERATED_HEADER=\"app/builder/DoorSensor_SM6011/Doo #
#                    rSensor_SM6011.h\"" -D LOCAL_STORAGE_BTL -D              #
#                    "BOARD_HEADER=\"app\builder\DoorSensor_SM6011\DoorSensor #
#                    _SM6011_board.h\"" -D "PLATFORM_HEADER=\"hal/micro/corte #
#                    xm3/compiler/iar.h\"" -D CORTEXM3 -D                     #
#                    CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3585 -D PHY_EM3XX -D  #
#                    "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\ #
#                    "" -D "CONFIGURATION_HEADER=\"app/framework/util/config. #
#                    h\"" -D "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/D #
#                    oorSensor_SM6011/DoorSensor_SM6011_endpoint_config.h\""  #
#                    -D "__SOURCEFILE__=\"af-trust-center.c\"" -lC            #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \ --diag_suppress Pa050 -o C:\Ember\EmberZNet5.3.0-GA\em #
#                    35x\build\DoorSensor_SM6011\ --debug --endian=little     #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\security\ #
#                     -I C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSen #
#                    sor_SM6011\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app\buil #
#                    der\DoorSensor_SM6011\..\..\..\ -I                       #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\app\framework\include\ -I                #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\ -I C:\Ember\EmberZNet5.3.0-GA\em35x\app #
#                    \builder\DoorSensor_SM6011\..\..\..\stack\ -I            #
#                    C:\Ember\EmberZNet5.3.0-GA\em35x\app\builder\DoorSensor_ #
#                    SM6011\..\..\..\hal\ -I C:\Ember\EmberZNet5.3.0-GA\em35x #
#                    \app\builder\DoorSensor_SM6011\..\..\..\hal\..\ -Ohz     #
#                    --use_c++_inline                                         #
#    List file    =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \af-trust-center.lst                                     #
#    Object file  =  C:\Ember\EmberZNet5.3.0-GA\em35x\build\DoorSensor_SM6011 #
#                    \af-trust-center.o                                       #
#                                                                             #
#                                                                             #
###############################################################################

C:\Ember\EmberZNet5.3.0-GA\em35x\app\framework\security\af-trust-center.c
      1          // *****************************************************************************
      2          // * trust-center.c
      3          // *
      4          // * Security code for a Trust Center node.
      5          // *
      6          // * Copyright 2009 by Ember Corporation. All rights reserved.              *80*
      7          // *****************************************************************************
      8          
      9          #include "app/framework/include/af.h"
     10          #define USE_REAL_SECURITY_PROTOTYPES
     11          #include "app/framework/security/af-security.h"
     12          #include "app/framework/util/af-main.h"
     13          #include "app/util/source-route-common.h"
     14          
     15          //------------------------------------------------------------------------------
     16          // Globals
     17          
     18          #if defined(EMBER_AF_PRINT_SECURITY)
     19            // Corresponds to the EmberJoinDecision status codes
     20            static PGM_NO_CONST PGM_P joinDecisionText[] = {
     21              EMBER_JOIN_DECISION_STRINGS
     22            };
     23          
     24            // Corresponds to the EmberDeviceUpdate status codes
     25            static PGM_NO_CONST PGM_P deviceUpdateText[] = {
     26              EMBER_DEVICE_UPDATE_STRINGS
     27            };
     28          
     29          #endif // EMBER_AF_PRINT_APP
     30          
     31          static EmberStatus permitRequestingTrustCenterLinkKey(void);
     32          static EmberStatus permitRequestingApplicationLinkKey(void);
     33          
     34          static EmberStatus setJoinPolicy(EmberJoinDecision decision);
     35          
     36          //------------------------------------------------------------------------------
     37          

   \                                 In section .text, align 2, keep-with-next
     38          EmberStatus zaTrustCenterSetJoinPolicy(EmberJoinDecision decision)
     39          {
     40            // Call the platform specific method to do this.
     41            return setJoinPolicy(decision);
   \                     zaTrustCenterSetJoinPolicy:
   \   00000000   0x....             LDR.N    R1,??DataTable18
   \   00000002   0x7008             STRB     R0,[R1, #+0]
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x4770             BX       LR               ;; return
     42          }
     43          

   \                                 In section .text, align 2, keep-with-next
     44          EmberStatus zaTrustCenterSecurityPolicyInit(void)
     45          {
   \                     zaTrustCenterSecurityPolicyInit:
   \   00000000   0xB580             PUSH     {R7,LR}
     46            EmberStatus status = permitRequestingTrustCenterLinkKey();
   \   00000002   0x.... 0x....      BL       emAfGetCurrentSecurityProfileData
   \   00000006   0xB908             CBNZ.N   R0,??zaTrustCenterSecurityPolicyInit_0
     47            if (status == EMBER_SUCCESS) {
     48              status = permitRequestingApplicationLinkKey();
     49            }
     50            if (status != EMBER_SUCCESS) {
     51              return status;
   \                     ??zaTrustCenterSecurityPolicyInit_1:
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0xBD02             POP      {R1,PC}
     52            }
   \                     ??zaTrustCenterSecurityPolicyInit_0:
   \   0000000C   0x7A80             LDRB     R0,[R0, #+10]
   \   0000000E   0x....             LDR.N    R1,??DataTable18_1
   \   00000010   0x7008             STRB     R0,[R1, #+0]
   \   00000012   0x.... 0x....      BL       emAfGetCurrentSecurityProfileData
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD0F6             BEQ.N    ??zaTrustCenterSecurityPolicyInit_1
   \   0000001A   0x7AC0             LDRB     R0,[R0, #+11]
   \   0000001C   0x....             LDR.N    R1,??DataTable18_2
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
     53          
     54            // We always set the join policy to EMBER_USE_PRECONFIGURED_KEY
     55            // even in the case where the joining device doesn't have one.  This
     56            // is the safest thing to do.
     57            // In cases where devices don't have a preconfigured key, the TC must be
     58            // explicitly told to allow joining by calling the function below with
     59            // EMBER_SEND_KEY_IN_THE_CLEAR.  Once the device finishes joining the TC 
     60            // should set the policy back to EMBER_USE_PRECONFIGURED_KEY.
     61            return setJoinPolicy(EMBER_USE_PRECONFIGURED_KEY);
   \   00000020   0x....             LDR.N    R0,??DataTable18
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x7001             STRB     R1,[R0, #+0]
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0xBD02             POP      {R1,PC}          ;; return
     62          }
     63          

   \                                 In section .text, align 2, keep-with-next
     64          EmberStatus zaTrustCenterSecurityInit(void)
     65          {
   \                     zaTrustCenterSecurityInit:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08C             SUB      SP,SP,#+48
     66            EmberInitialSecurityState state;
     67            EmberExtendedSecurityBitmask extended;
     68            EmberStatus status;
     69            const EmberAfSecurityProfileData *data = emAfGetCurrentSecurityProfileData();
   \   00000004   0x.... 0x....      BL       emAfGetCurrentSecurityProfileData
   \   00000008   0x0004             MOVS     R4,R0
     70          
     71            if (data == NULL) {
   \   0000000A   0xBF08             IT       EQ 
   \   0000000C   0x2001             MOVEQ    R0,#+1
     72              return EMBER_ERR_FATAL;
   \   0000000E   0xD04A             BEQ.N    ??zaTrustCenterSecurityInit_0
     73            }
     74          
     75            MEMSET(&state, 0, sizeof(EmberInitialSecurityState));
   \   00000010   0x222C             MOVS     R2,#+44
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0xA801             ADD      R0,SP,#+4
   \   00000016   0x.... 0x....      BL       halCommonMemSet
     76            state.bitmask = data->tcBitmask;
   \   0000001A   0x8860             LDRH     R0,[R4, #+2]
   \   0000001C   0xF8AD 0x0004      STRH     R0,[SP, #+4]
     77            extended = data->tcExtendedBitmask;
   \   00000020   0x88A0             LDRH     R0,[R4, #+4]
   \   00000022   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     78            MEMCOPY(emberKeyContents(&state.preconfiguredKey),
     79                    emberKeyContents(&data->preconfiguredKey),
     80                    EMBER_ENCRYPTION_KEY_SIZE);
   \   00000026   0x2210             MOVS     R2,#+16
   \   00000028   0xF104 0x010C      ADD      R1,R4,#+12
   \   0000002C   0xF10D 0x0006      ADD      R0,SP,#+6
   \   00000030   0x.... 0x....      BL       halCommonMemCopy
     81          
     82            // Random network key (highly recommended)
     83            status = emberAfGenerateRandomKey(&(state.networkKey));
   \   00000034   0xF10D 0x0016      ADD      R0,SP,#+22
   \   00000038   0x.... 0x....      BL       emberGenerateRandomKey
   \   0000003C   0x0004             MOVS     R4,R0
     84            if (status != EMBER_SUCCESS) {
   \   0000003E   0xD132             BNE.N    ??zaTrustCenterSecurityInit_0
     85              return status;
     86            }
     87          
     88          #if defined ZA_CLI_FULL
     89            // These functions will only be called if the full CLI is enabled and key 
     90            // values have been previously set on the CLI via the "changekey" command.
     91            getLinkKeyFromCli(&(state.preconfiguredKey));
   \   00000040   0xF10D 0x0006      ADD      R0,SP,#+6
   \   00000044   0x.... 0x....      BL       getLinkKeyFromCli
     92            getNetworkKeyFromCli(&(state.networkKey));
   \   00000048   0xF10D 0x0016      ADD      R0,SP,#+22
   \   0000004C   0x.... 0x....      BL       getNetworkKeyFromCli
     93          #endif
     94          
     95            emberAfSecurityInitCallback(&state, &extended, TRUE); // trust center?
   \   00000050   0x2201             MOVS     R2,#+1
   \   00000052   0xA900             ADD      R1,SP,#+0
   \   00000054   0xA801             ADD      R0,SP,#+4
   \   00000056   0x.... 0x....      BL       emberAfSecurityInitCallback
     96          
     97            emberAfSecurityPrintln("set state to: 0x%2x", state.bitmask);
   \   0000005A   0xF8BD 0x2004      LDRH     R2,[SP, #+4]
   \   0000005E   0x.... 0x....      ADR.W    R1,`?<Constant "set state to: 0x%2x">`
   \   00000062   0x2008             MOVS     R0,#+8
   \   00000064   0x.... 0x....      BL       emberAfPrintln
     98            status = emberSetInitialSecurityState(&state);
   \   00000068   0xA801             ADD      R0,SP,#+4
   \   0000006A   0x.... 0x....      BL       emberSetInitialSecurityState
   \   0000006E   0x0004             MOVS     R4,R0
     99            if (status != EMBER_SUCCESS) {
   \   00000070   0xD007             BEQ.N    ??zaTrustCenterSecurityInit_1
    100              emberAfSecurityPrintln("security init TC: 0x%x", status);
   \   00000072   0x4622             MOV      R2,R4
   \   00000074   0x.... 0x....      ADR.W    R1,`?<Constant "security init TC: 0x%x">`
   \   00000078   0x2008             MOVS     R0,#+8
   \   0000007A   0x.... 0x....      BL       emberAfPrintln
    101              return status;
   \   0000007E   0x4620             MOV      R0,R4
   \   00000080   0xE011             B.N      ??zaTrustCenterSecurityInit_0
    102            }
    103          
    104            // Don't need to check on the status here, emberSetExtendedSecurityBitmask
    105            // always returns EMBER_SUCCESS.
    106            emberAfSecurityPrintln("set extended security to: 0x%2x", extended);
   \                     ??zaTrustCenterSecurityInit_1:
   \   00000082   0xF8BD 0x2000      LDRH     R2,[SP, #+0]
   \   00000086   0x.... 0x....      ADR.W    R1,`?<Constant "set extended security...">`
   \   0000008A   0x2008             MOVS     R0,#+8
   \   0000008C   0x.... 0x....      BL       emberAfPrintln
    107            emberSetExtendedSecurityBitmask(extended);
   \   00000090   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000094   0x.... 0x....      BL       emberSetExtendedSecurityBitmask
    108          
    109            status = zaTrustCenterSecurityPolicyInit();
   \   00000098   0x.... 0x....      BL       zaTrustCenterSecurityPolicyInit
   \   0000009C   0x0004             MOVS     R4,R0
    110            if (status != EMBER_SUCCESS) {
   \   0000009E   0xD102             BNE.N    ??zaTrustCenterSecurityInit_0
    111              return status;
    112            }
    113          
    114            emAfClearLinkKeyTable();
   \   000000A0   0x.... 0x....      BL       emAfClearLinkKeyTable
    115          
    116            return EMBER_SUCCESS;
   \   000000A4   0x2000             MOVS     R0,#+0
   \                     ??zaTrustCenterSecurityInit_0:
   \   000000A6   0xB00C             ADD      SP,SP,#+48
   \   000000A8   0xBD10             POP      {R4,PC}          ;; return
    117          }

   \                                 In section .data, align 4
    118          
    119          static void securityJoinNotify(EmberNodeId newNodeId,
    120                                         EmberEUI64 newNodeEui64,
    121                                         EmberNodeId parentOfNewNode,
    122                                         EmberDeviceUpdate status,
    123                                         EmberJoinDecision decision)
    124          {
    125          
    126            // Allow users of the framework an opportunity to see this notification.
    127            emberAfTrustCenterJoinCallback(newNodeId, 
    128                                           newNodeEui64, 
    129                                           parentOfNewNode, 
    130                                           status, 
    131                                           decision);
    132          
    133          #if defined(EMBER_AF_PLUGIN_CONCENTRATOR)
    134            if (parentOfNewNode != emberAfGetNodeId()) {
    135              sourceRouteAddEntryWithCloserNextHop(newNodeId, parentOfNewNode);
    136            }
    137          #endif
    138          
    139          #if defined(EMBER_AF_PRINT_SECURITY)
    140            emberAfSecurityPrintln("Trust Center Join Handler: status = %p, decision = %p (%x), shortid 0x%2x",
    141                           deviceUpdateText[status],
    142                           joinDecisionText[decision],
    143                           decision,
    144                           newNodeId);
    145            emberAfSecurityFlush();
    146          #endif
    147          }
    148          
    149          //==============================================================================
    150          // Platform Dependent Implementations
    151          
    152          #if defined (EZSP_HOST)
    153          
    154          static PGM_NO_CONST PGM_P ezspJoinPolicyText[] = {
    155            "Allow Joins",
    156            "Allow preconfigured key joins",
    157            "Allow rejoins only",
    158            "Disallow all joins and rejoins",
    159            "Allow Joins, rejoins have link key",
    160          };
    161          
    162          void ezspTrustCenterJoinHandler(EmberNodeId newNodeId,
    163                                          EmberEUI64 newNodeEui64,
    164                                          EmberDeviceUpdate status,
    165                                          EmberJoinDecision policyDecision,
    166                                          EmberNodeId parentOfNewNode)
    167          {
    168            securityJoinNotify(newNodeId,
    169                               newNodeEui64,
    170                               parentOfNewNode,
    171                               status,
    172                               policyDecision);
    173          }
    174          
    175          static EmberStatus setJoinPolicy(EmberJoinDecision decision)
    176          {
    177            EzspDecisionId id;
    178            if (decision == EMBER_USE_PRECONFIGURED_KEY) {
    179              id = EZSP_ALLOW_PRECONFIGURED_KEY_JOINS;
    180            } else if (decision == EMBER_SEND_KEY_IN_THE_CLEAR) {
    181              id = EZSP_ALLOW_JOINS_REJOINS_HAVE_LINK_KEY;
    182            } else {  // EMBER_DENY_JOIN or EMBER_NO_ACTION
    183              id = EZSP_DISALLOW_ALL_JOINS_AND_REJOINS;
    184            }
    185            return emberAfSetEzspPolicy(EZSP_TRUST_CENTER_POLICY,
    186                                        id,
    187                                        "Trust Center Policy",
    188                                        ezspJoinPolicyText[id]);
    189          }
    190          
    191          static EmberStatus permitRequestingTrustCenterLinkKey(void)
    192          {
    193            const EmberAfSecurityProfileData *data = emAfGetCurrentSecurityProfileData();
    194            if (data == NULL) {
    195              return EMBER_ERR_FATAL;
    196            }
    197            return emberAfSetEzspPolicy(EZSP_TC_KEY_REQUEST_POLICY,
    198                                        data->tcLinkKeyRequestPolicy,
    199                                        "TC Key Request",
    200                                        (data->tcLinkKeyRequestPolicy
    201                                         ==  EMBER_AF_ALLOW_TC_KEY_REQUESTS
    202                                         ? "Allow"
    203                                         : "Deny"));
    204          }
    205          
    206          static EmberStatus permitRequestingApplicationLinkKey(void)
    207          {
    208            const EmberAfSecurityProfileData *data = emAfGetCurrentSecurityProfileData();
    209            if (data == NULL) {
    210              return EMBER_ERR_FATAL;
    211            }
    212            return emberAfSetEzspPolicy(EZSP_APP_KEY_REQUEST_POLICY,
    213                                        data->appLinkKeyRequestPolicy,
    214                                        "App. Key Request",
    215                                        (data->appLinkKeyRequestPolicy
    216                                         == EMBER_AF_ALLOW_APP_KEY_REQUESTS
    217                                         ? "Allow"
    218                                         : "Deny"));
    219          }
    220          
    221          //------------------------------------------------------------------------------
    222          // System-on-a-chip
    223          
    224          #else 
    225          
    226          static EmberJoinDecision defaultDecision = EMBER_USE_PRECONFIGURED_KEY;
   \                     defaultDecision:
   \   00000000   0x00               DC8 0
   \   00000001   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   \   00000004   0x........         DC32 `?<Constant "use preconfigured key">`
   \   00000008   0x........         DC32 `?<Constant "send key in the clear">`, `?<Constant "deny join">`
   \              0x........   
   \   00000010   0x........         DC32 `?<Constant "no action">`
   \   00000014   0x........         DC32 `?<Constant "secured rejoin">`, `?<Constant "UNsecured join">`
   \              0x........   
   \   0000001C   0x........         DC32 `?<Constant "device left">`, `?<Constant "UNsecured rejoin">`
   \              0x........   
   \   00000024   0x........         DC32 `?<Constant "high secured rejoin">`
   \   00000028   0x........         DC32 `?<Constant "high UNsecured join">`, `?<Constant "RESERVED">`
   \              0x........   
   \   00000030   0x........         DC32 `?<Constant "high UNsecured rejoin">`
    227          

   \                                 In section .text, align 2, keep-with-next
    228          EmberJoinDecision emberTrustCenterJoinHandler(EmberNodeId newNodeId,
    229                                                        EmberEUI64 newNodeEui64,
    230                                                        EmberDeviceUpdate status,
    231                                                        EmberNodeId parentOfNewNode)
    232          {
   \                     emberTrustCenterJoinHandler:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x461A             MOV      R2,R3
    233            EmberJoinDecision joinDecision = defaultDecision;
   \   0000000A   0x....             LDR.N    R6,??DataTable18
   \   0000000C   0x7837             LDRB     R7,[R6, #+0]
    234          
    235            if (status == EMBER_STANDARD_SECURITY_SECURED_REJOIN
    236                || status == EMBER_DEVICE_LEFT
    237                || status == EMBER_HIGH_SECURITY_SECURED_REJOIN) {
   \   0000000E   0xBF1C             ITT      NE 
   \   00000010   0x2D02             CMPNE    R5,#+2
   \   00000012   0x2D04             CMPNE    R5,#+4
   \   00000014   0xD100             BNE.N    ??emberTrustCenterJoinHandler_0
    238              joinDecision = EMBER_NO_ACTION;
   \   00000016   0x2703             MOVS     R7,#+3
    239            }
    240          
    241            securityJoinNotify(newNodeId,
    242                               newNodeEui64,
    243                               parentOfNewNode,
    244                               status,
    245                               joinDecision);
   \                     ??emberTrustCenterJoinHandler_0:
   \   00000018   0x9700             STR      R7,[SP, #+0]
   \   0000001A   0x462B             MOV      R3,R5
   \   0000001C   0x.... 0x....      BL       emberAfTrustCenterJoinCallback
   \   00000020   0x9401             STR      R4,[SP, #+4]
   \   00000022   0x9700             STR      R7,[SP, #+0]
   \   00000024   0xEB06 0x0087      ADD      R0,R6,R7, LSL #+2
   \   00000028   0x6843             LDR      R3,[R0, #+4]
   \   0000002A   0xEB06 0x0085      ADD      R0,R6,R5, LSL #+2
   \   0000002E   0x6942             LDR      R2,[R0, #+20]
   \   00000030   0x.... 0x....      ADR.W    R1,`?<Constant "Trust Center Join Han...">`
   \   00000034   0x2008             MOVS     R0,#+8
   \   00000036   0x.... 0x....      BL       emberAfPrintln
    246            return joinDecision;
   \   0000003A   0x4638             MOV      R0,R7
   \   0000003C   0xBDFE             POP      {R1-R7,PC}       ;; return
    247          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   0x........         DC32     defaultDecision

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \   00000000   0x........         DC32     emberTrustCenterLinkKeyRequestPolicy

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_2:
   \   00000000   0x........         DC32     emberAppLinkKeyRequestPolicy

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "set state to: 0x%2x">`:
   \   00000000   0x73 0x65          DC8 "set state to: 0x%2x"
   \              0x74 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x74 0x6F    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "security init TC: 0x%x">`:
   \   00000000   0x73 0x65          DC8 "security init TC: 0x%x"
   \              0x63 0x75    
   \              0x72 0x69    
   \              0x74 0x79    
   \              0x20 0x69    
   \              0x6E 0x69    
   \              0x74 0x20    
   \              0x54 0x43    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "set extended security...">`:
   \   00000000   0x73 0x65          DC8 "set extended security to: 0x%2x"
   \              0x74 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x64    
   \              0x65 0x64    
   \              0x20 0x73    
   \              0x65 0x63    
   \              0x75 0x72    
   \              0x69 0x74    
   \              0x79 0x20    
   \              0x74 0x6F    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Trust Center Join Han...">`:
   \   00000000   0x54 0x72          DC8 54H, 72H, 75H, 73H, 74H, 20H, 43H, 65H
   \              0x75 0x73    
   \              0x74 0x20    
   \              0x43 0x65    
   \   00000008   0x6E 0x74          DC8 6EH, 74H, 65H, 72H, 20H, 4AH, 6FH, 69H
   \              0x65 0x72    
   \              0x20 0x4A    
   \              0x6F 0x69    
   \   00000010   0x6E 0x20          DC8 6EH, 20H, 48H, 61H, 6EH, 64H, 6CH, 65H
   \              0x48 0x61    
   \              0x6E 0x64    
   \              0x6C 0x65    
   \   00000018   0x72 0x3A          DC8 72H, 3AH, 20H, 73H, 74H, 61H, 74H, 75H
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \   00000020   0x73 0x20          DC8 73H, 20H, 3DH, 20H, 25H, 70H, 2CH, 20H
   \              0x3D 0x20    
   \              0x25 0x70    
   \              0x2C 0x20    
   \   00000028   0x64 0x65          DC8 64H, 65H, 63H, 69H, 73H, 69H, 6FH, 6EH
   \              0x63 0x69    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \   00000030   0x20 0x3D          DC8 20H, 3DH, 20H, 25H, 70H, 20H, 28H, 25H
   \              0x20 0x25    
   \              0x70 0x20    
   \              0x28 0x25    
   \   00000038   0x78 0x29          DC8 78H, 29H, 2CH, 20H, 73H, 68H, 6FH, 72H
   \              0x2C 0x20    
   \              0x73 0x68    
   \              0x6F 0x72    
   \   00000040   0x74 0x69          DC8 74H, 69H, 64H, 20H, 30H, 78H, 25H, 32H
   \              0x64 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \   00000048   0x78 0x00          DC8 78H, 0
   \   0000004A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "use preconfigured key">`:
   \   00000000   0x75 0x73          DC8 "use preconfigured key"
   \              0x65 0x20    
   \              0x70 0x72    
   \              0x65 0x63    
   \              0x6F 0x6E    
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \              0x64 0x20    
   \              0x6B 0x65    
   \              0x79 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "send key in the clear">`:
   \   00000000   0x73 0x65          DC8 "send key in the clear"
   \              0x6E 0x64    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x20 0x69    
   \              0x6E 0x20    
   \              0x74 0x68    
   \              0x65 0x20    
   \              0x63 0x6C    
   \              0x65 0x61    
   \              0x72 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "deny join">`:
   \   00000000   0x64 0x65          DC8 "deny join"
   \              0x6E 0x79    
   \              0x20 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "no action">`:
   \   00000000   0x6E 0x6F          DC8 "no action"
   \              0x20 0x61    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "secured rejoin">`:
   \   00000000   0x73 0x65          DC8 "secured rejoin"
   \              0x63 0x75    
   \              0x72 0x65    
   \              0x64 0x20    
   \              0x72 0x65    
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "UNsecured join">`:
   \   00000000   0x55 0x4E          DC8 "UNsecured join"
   \              0x73 0x65    
   \              0x63 0x75    
   \              0x72 0x65    
   \              0x64 0x20    
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "device left">`:
   \   00000000   0x64 0x65          DC8 "device left"
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x6C    
   \              0x65 0x66    
   \              0x74 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "UNsecured rejoin">`:
   \   00000000   0x55 0x4E          DC8 "UNsecured rejoin"
   \              0x73 0x65    
   \              0x63 0x75    
   \              0x72 0x65    
   \              0x64 0x20    
   \              0x72 0x65    
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "high secured rejoin">`:
   \   00000000   0x68 0x69          DC8 "high secured rejoin"
   \              0x67 0x68    
   \              0x20 0x73    
   \              0x65 0x63    
   \              0x75 0x72    
   \              0x65 0x64    
   \              0x20 0x72    
   \              0x65 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "high UNsecured join">`:
   \   00000000   0x68 0x69          DC8 "high UNsecured join"
   \              0x67 0x68    
   \              0x20 0x55    
   \              0x4E 0x73    
   \              0x65 0x63    
   \              0x75 0x72    
   \              0x65 0x64    
   \              0x20 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "RESERVED">`:
   \   00000000   0x52 0x45          DC8 "RESERVED"
   \              0x53 0x45    
   \              0x52 0x56    
   \              0x45 0x44    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "high UNsecured rejoin">`:
   \   00000000   0x68 0x69          DC8 "high UNsecured rejoin"
   \              0x67 0x68    
   \              0x20 0x55    
   \              0x4E 0x73    
   \              0x65 0x63    
   \              0x75 0x72    
   \              0x65 0x64    
   \              0x20 0x72    
   \              0x65 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x00    
   \   00000016   0x00 0x00          DC8 0, 0
    248          
    249          static EmberStatus setJoinPolicy(EmberJoinDecision decision)
    250          {
    251            defaultDecision = decision;
    252            return EMBER_SUCCESS;
    253          }
    254          
    255          static EmberStatus permitRequestingTrustCenterLinkKey(void)
    256          {
    257            const EmberAfSecurityProfileData *data = emAfGetCurrentSecurityProfileData();
    258            if (data == NULL) {
    259              return EMBER_ERR_FATAL;
    260            }
    261            emberTrustCenterLinkKeyRequestPolicy = data->tcLinkKeyRequestPolicy;
    262            return EMBER_SUCCESS;
    263          }
    264          
    265          static EmberStatus permitRequestingApplicationLinkKey(void)
    266          {
    267            const EmberAfSecurityProfileData *data = emAfGetCurrentSecurityProfileData();
    268            if (data == NULL) {
    269              return EMBER_ERR_FATAL;
    270            }
    271            emberAppLinkKeyRequestPolicy = data->appLinkKeyRequestPolicy;
    272            return EMBER_SUCCESS;
    273          }
    274          
    275          #endif // EZSP_HOST

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       32  emberTrustCenterJoinHandler
             32 -> emberAfPrintln
             32 -> emberAfTrustCenterJoinCallback
       56  zaTrustCenterSecurityInit
             56 -> emAfClearLinkKeyTable
             56 -> emAfGetCurrentSecurityProfileData
             56 -> emberAfPrintln
             56 -> emberAfSecurityInitCallback
             56 -> emberGenerateRandomKey
             56 -> emberSetExtendedSecurityBitmask
             56 -> emberSetInitialSecurityState
             56 -> getLinkKeyFromCli
             56 -> getNetworkKeyFromCli
             56 -> halCommonMemCopy
             56 -> halCommonMemSet
             56 -> zaTrustCenterSecurityPolicyInit
        8  zaTrustCenterSecurityPolicyInit
              8 -> emAfGetCurrentSecurityProfileData
        0  zaTrustCenterSetJoinPolicy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "RESERVED">
      76  ?<Constant "Trust Center Join Han...">
      16  ?<Constant "UNsecured join">
      20  ?<Constant "UNsecured rejoin">
      12  ?<Constant "deny join">
      12  ?<Constant "device left">
      20  ?<Constant "high UNsecured join">
      24  ?<Constant "high UNsecured rejoin">
      20  ?<Constant "high secured rejoin">
      12  ?<Constant "no action">
      16  ?<Constant "secured rejoin">
      24  ?<Constant "security init TC: 0x%x">
      24  ?<Constant "send key in the clear">
      32  ?<Constant "set extended security...">
      20  ?<Constant "set state to: 0x%2x">
      24  ?<Constant "use preconfigured key">
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable18_2
      52  defaultDecision
          joinDecisionText
          deviceUpdateText
      62  emberTrustCenterJoinHandler
     170  zaTrustCenterSecurityInit
      42  zaTrustCenterSecurityPolicyInit
       8  zaTrustCenterSetJoinPolicy

 
  52 bytes in section .data
 212 bytes in section .rodata
 446 bytes in section .text
 
 446 bytes of CODE  memory
 212 bytes of CONST memory
  52 bytes of DATA  memory

Errors: none
Warnings: none
